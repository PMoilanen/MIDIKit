{"topicSections":[{"title":"Operators","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/+(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/-(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(double:decimalPrecision:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(fcpxmlString:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(reducing:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/cmTimeValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/decimalValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/denominator","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/doubleValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/fcpxmlStringValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/floatValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isNegative","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isReduced","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isWholeInteger","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/numerator"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/abs()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isEqual(to:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isIdentical(to:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/negate()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/negated()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/reduced()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/timecodeInterval(at:base:limit:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/timecodeInterval(using:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/zero"],"title":"Type Properties"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Comparable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Equatable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Hashable-Implementations"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Components-swift.struct","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeTransformer","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeSortComparator","doc:\/\/MIDIKit\/documentation\/MIDIKit\/FrameRateProtocol","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate","doc:\/\/MIDIKit\/documentation\/MIDIKit\/VideoFrameRate","doc:\/\/MIDIKit\/documentation\/MIDIKit\/FeetAndFrames","doc:\/\/MIDIKit\/documentation\/MIDIKit\/RangeAttribute","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeSourceValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/RichTimecodeSourceValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/FormattedTimecodeSourceValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/GuaranteedTimecodeSourceValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/GuaranteedRichTimecodeSourceValue"],"title":"Timecode Related"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fraction"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Used to convert to\/from ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode","isActive":true},{"type":"text","text":", Core Media "},{"code":"CMTime","type":"codeVoice"},{"text":", or metadata encoding such as Final Cut Pro XML or AAF.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync-Internals"]]},"metadata":{"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"Fraction"}],"externalID":"s:11TimecodeKit8FractionV","title":"Fraction","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fraction","kind":"identifier"}],"modules":[{"name":"MIDIKit"}],"role":"symbol","symbolKind":"struct"},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/MIDIKit\/SL","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/s8SendableP"],"title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/fraction"]}],"abstract":[{"text":"Numerical fraction containing a numerator and a denominator.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/Fraction/Equatable-Implementations":{"url":"\/documentation\/midikit\/fraction\/equatable-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Equatable-Implementations","abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Fraction/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","url":"\/documentation\/midikit\/fraction\/comparable-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Comparable-Implementations"},"doc://MIDIKit/documentation/MIDIKit/Fraction":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Fraction","kind":"identifier"}],"url":"\/documentation\/midikit\/fraction","title":"Fraction","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction","abstract":[{"type":"text","text":"Numerical fraction containing a numerator and a denominator."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fraction"}]},"doc://MIDIKit/documentation/MIDIKit/Fraction/isIdentical(to:)":{"url":"\/documentation\/midikit\/fraction\/isidentical(to:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isIdentical(to:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if both fractions contain identical numerators and identical denominators."}],"kind":"symbol","title":"isIdentical(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isIdentical"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Fraction","preciseIdentifier":"s:11TimecodeKit8FractionV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/TimecodeSourceValue":{"navigatorTitle":[{"text":"TimecodeSourceValue","kind":"identifier"}],"role":"symbol","title":"TimecodeSourceValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimecodeSourceValue"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeSourceValue","kind":"symbol","abstract":[{"type":"text","text":"Box containing a concrete "},{"type":"codeVoice","code":"TimecodeSource"},{"type":"text","text":" instance."}],"url":"\/documentation\/midikit\/timecodesourcevalue"},"doc://MIDIKit/documentation/MIDIKit/Fraction/init(_:_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"title":"init(_:_:)","url":"\/documentation\/midikit\/fraction\/init(_:_:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(_:_:)","type":"topic","abstract":[{"type":"text","text":"Initialize with literal values."}],"kind":"symbol","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Fraction/-(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit8FractionV","text":"Fraction"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Fraction","preciseIdentifier":"s:11TimecodeKit8FractionV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Fraction","preciseIdentifier":"s:11TimecodeKit8FractionV"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/-(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/fraction\/-(_:_:)","role":"symbol","title":"-(_:_:)"},"doc://MIDIKit/SL":{"identifier":"doc:\/\/MIDIKit\/SL","title":"Swift.Comparable","type":"unresolvable"},"doc://MIDIKit/documentation/MIDIKit/Fraction/init(double:decimalPrecision:)":{"url":"\/documentation\/midikit\/fraction\/init(double:decimalprecision:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"double","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decimalPrecision"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Initialize by converting a floating-point number to a given precision (number of decimal"},{"type":"text","text":" "},{"text":"places).","type":"text"}],"title":"init(double:decimalPrecision:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(double:decimalPrecision:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF-Internals":{"url":"\/documentation\/midikit\/midikitsmf-internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Internals"},"doc://MIDIKit/documentation/MIDIKit/Fraction/abs()":{"abstract":[{"type":"text","text":"Returns the absolute fraction."},{"type":"text","text":" "},{"text":"(Returns unmodified if positive, negates if negative.)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The fraction is also normalized."}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/abs()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"abs","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11TimecodeKit8FractionV","text":"Fraction","kind":"typeIdentifier"}],"url":"\/documentation\/midikit\/fraction\/abs()","role":"symbol","title":"abs()","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Fraction/isReduced":{"kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the fraction is reduced to its simplest form and can not be reduced any"},{"type":"text","text":" "},{"text":"further.","type":"text"}],"title":"isReduced","url":"\/documentation\/midikit\/fraction\/isreduced","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isReduced","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isReduced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://MIDIKit/documentation/MIDIKit/TimecodeTransformer":{"navigatorTitle":[{"kind":"identifier","text":"TimecodeTransformer"}],"role":"symbol","title":"TimecodeTransformer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TimecodeTransformer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeTransformer","kind":"symbol","abstract":[{"type":"text","text":"A timecode transformer containing one or more transform rules in series."},{"type":"text","text":" "},{"type":"text","text":"See the "},{"text":"doc:Timecode-Transformer","type":"text"},{"text":" topic for details.","type":"text"}],"url":"\/documentation\/midikit\/timecodetransformer"},"doc://MIDIKit/documentation/MIDIKit/Fraction/negated()":{"url":"\/documentation\/midikit\/fraction\/negated()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"negated"},{"kind":"text","text":"() -> "},{"text":"Fraction","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit8FractionV"}],"type":"topic","abstract":[{"text":"Returns a new instance negated.","type":"text"}],"title":"negated()","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/negated()"},"doc://MIDIKit/documentation/MIDIKit/Fraction/timecodeInterval(using:)":{"url":"\/documentation\/midikit\/fraction\/timecodeinterval(using:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"timecodeInterval","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Timecode","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V"},{"text":".","kind":"text"},{"text":"Properties","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V10PropertiesV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"TimecodeInterval","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"type":"topic","abstract":[{"text":"Convenience function to initialize a ","type":"text"},{"type":"codeVoice","code":"TimecodeInterval"},{"type":"text","text":" instance from a time duration"},{"type":"text","text":" "},{"type":"text","text":"represented as a rational fraction."},{"type":"text","text":" "},{"type":"text","text":"A negative fraction will produce a negative time interval."}],"title":"timecodeInterval(using:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/timecodeInterval(using:)"},"doc://MIDIKit/documentation/MIDIKit/FrameRateProtocol":{"navigatorTitle":[{"text":"FrameRateProtocol","kind":"identifier"}],"role":"symbol","title":"FrameRateProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FrameRateProtocol"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/FrameRateProtocol","kind":"symbol","abstract":[{"type":"text","text":"Protocol used in TimecodeKit to provide shared properties and methods for frame rate types."}],"url":"\/documentation\/midikit\/framerateprotocol"},"doc://MIDIKit/documentation/MIDIKit/Fraction/isNegative":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isNegative","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isNegative","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/midikit\/fraction\/isnegative","title":"isNegative","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if one operand of the fraction is negative.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/Fraction/negate()":{"abstract":[{"type":"text","text":"Negates the fraction."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"negate","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/negate()","type":"topic","url":"\/documentation\/midikit\/fraction\/negate()","title":"negate()","role":"symbol","kind":"symbol"},"doc://MIDIKit/SQ":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SQ","title":"Swift.Equatable"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","title":"MIDIKitSync","type":"topic","url":"\/documentation\/midikit\/midikitsync","abstract":[{"text":"MIDI synchronization protocol abstractions (MTC, etc.) for MIDIKit.","type":"text"}],"role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/Fraction/numerator":{"url":"\/documentation\/midikit\/fraction\/numerator","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"numerator","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"type":"topic","abstract":[],"title":"numerator","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/numerator"},"doc://MIDIKit/documentation/MIDIKit/Fraction/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@SA@CMTime","text":"CMTime"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/fraction\/init(_:)","type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(_:)","title":"init(_:)"},"doc://MIDIKit/documentation/MIDIKit/FormattedTimecodeSourceValue":{"navigatorTitle":[{"text":"FormattedTimecodeSourceValue","kind":"identifier"}],"role":"symbol","title":"FormattedTimecodeSourceValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FormattedTimecodeSourceValue"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/FormattedTimecodeSourceValue","kind":"symbol","abstract":[{"type":"text","text":"Box containing a concrete "},{"type":"codeVoice","code":"FormattedTimecodeSource"},{"type":"text","text":" instance."}],"url":"\/documentation\/midikit\/formattedtimecodesourcevalue"},"doc://MIDIKit/documentation/MIDIKit/Fraction/timecodeInterval(at:base:limit:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timecodeInterval","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeFrameRate","preciseIdentifier":"s:11TimecodeKit0A9FrameRateO"},{"text":", ","kind":"text"},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V","text":"Timecode"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO","text":"SubFramesBase","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"limit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V","text":"Timecode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO","kind":"typeIdentifier","text":"UpperLimit"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"text":"Convenience function to initialize a ","type":"text"},{"type":"codeVoice","code":"TimecodeInterval"},{"text":" instance from a time duration","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represented as a rational fraction."},{"type":"text","text":" "},{"text":"A negative fraction will produce a negative time interval.","type":"text"}],"url":"\/documentation\/midikit\/fraction\/timecodeinterval(at:base:limit:)","type":"topic","title":"timecodeInterval(at:base:limit:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/timecodeInterval(at:base:limit:)"},"doc://MIDIKit/documentation/MIDIKit/GuaranteedTimecodeSourceValue":{"navigatorTitle":[{"text":"GuaranteedTimecodeSourceValue","kind":"identifier"}],"role":"symbol","title":"GuaranteedTimecodeSourceValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GuaranteedTimecodeSourceValue"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/GuaranteedTimecodeSourceValue","kind":"symbol","abstract":[{"type":"text","text":"Box containing a concrete "},{"type":"codeVoice","code":"GuaranteedTimecodeSource"},{"type":"text","text":" instance."}],"url":"\/documentation\/midikit\/guaranteedtimecodesourcevalue"},"doc://MIDIKit/documentation/MIDIKit/GuaranteedRichTimecodeSourceValue":{"navigatorTitle":[{"text":"GuaranteedRichTimecodeSourceValue","kind":"identifier"}],"role":"symbol","title":"GuaranteedRichTimecodeSourceValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GuaranteedRichTimecodeSourceValue"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/GuaranteedRichTimecodeSourceValue","kind":"symbol","abstract":[{"type":"text","text":"Box containing a concrete "},{"type":"codeVoice","code":"GuaranteedRichTimecodeSource"},{"type":"text","text":" instance."}],"url":"\/documentation\/midikit\/guaranteedrichtimecodesourcevalue"},"doc://MIDIKit/documentation/MIDIKit/Fraction/init(fcpxmlString:)":{"url":"\/documentation\/midikit\/fraction\/init(fcpxmlstring:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"fcpxmlString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Initializes from an encoded Final Cut Pro FCPXML time value string."}],"title":"init(fcpxmlString:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(fcpxmlString:)"},"doc://MIDIKit/documentation/MIDIKit/Fraction/init(reducing:_:)":{"abstract":[{"type":"text","text":"Initialize by reducing and normalizing the fraction."}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/init(reducing:_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"reducing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"url":"\/documentation\/midikit\/fraction\/init(reducing:_:)","role":"symbol","title":"init(reducing:_:)","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/TimecodeInterval":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimecodeInterval","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/midikit\/timecodeinterval","role":"symbol","title":"TimecodeInterval","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval","abstract":[{"text":"Represents an interval duration of timecode, either positive or negative.","type":"text"},{"text":" ","type":"text"},{"text":"See the ","type":"text"},{"text":"doc:Timecode-Interval","type":"text"},{"type":"text","text":" topic for details."}],"type":"topic","navigatorTitle":[{"text":"TimecodeInterval","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/Fraction/decimalValue":{"title":"decimalValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"decimalValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Decimal","kind":"typeIdentifier","preciseIdentifier":"c:@SA@NSDecimal"}],"abstract":[{"type":"text","text":"Returns the evaluated fraction as a "},{"code":"Decimal","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/midikit\/fraction\/decimalvalue","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/decimalValue"},"doc://MIDIKit/documentation/MIDIKit/Fraction/floatValue":{"url":"\/documentation\/midikit\/fraction\/floatvalue","role":"symbol","title":"floatValue","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/floatValue","type":"topic","abstract":[{"text":"Returns the evaluated fraction as a ","type":"text"},{"type":"codeVoice","code":"Float"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"floatValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"}]},"doc://MIDIKit/documentation/MIDIKit/Fraction/isWholeInteger":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isWholeInteger","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/midikit\/fraction\/iswholeinteger","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the evaluation of the fraction results in a whole integer with"},{"text":" ","type":"text"},{"text":"no fractional component (trailing decimal digits).","type":"text"}],"title":"isWholeInteger","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isWholeInteger"},"doc://MIDIKit/documentation/MIDIKit/FeetAndFrames":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/FeetAndFrames","kind":"symbol","abstract":[{"text":"Feet+Frames is a time reference traditionally used when measuring and splicing physical film, but its use in modern day is uncommon.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some digital video editors and DAWs support this time format."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FeetAndFrames"}],"url":"\/documentation\/midikit\/feetandframes","navigatorTitle":[{"kind":"identifier","text":"FeetAndFrames"}],"role":"symbol","title":"FeetAndFrames","type":"topic"},"doc://MIDIKit/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP"},"doc://MIDIKit/documentation/MIDIKit/Fraction/+(_:_:)":{"abstract":[],"title":"+(_:_:)","role":"symbol","url":"\/documentation\/midikit\/fraction\/+(_:_:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit8FractionV","text":"Fraction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit8FractionV","text":"Fraction"},{"kind":"text","text":") -> "},{"text":"Fraction","preciseIdentifier":"s:11TimecodeKit8FractionV","kind":"typeIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/+(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/Fraction/cmTimeValue":{"title":"cmTimeValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cmTimeValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@SA@CMTime","kind":"typeIdentifier","text":"CMTime"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/cmTimeValue","abstract":[{"text":"Returns the fraction as a new ","type":"text"},{"type":"codeVoice","code":"CMTime"},{"type":"text","text":" instance."}],"url":"\/documentation\/midikit\/fraction\/cmtimevalue","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/VideoFrameRate":{"navigatorTitle":[{"text":"VideoFrameRate","kind":"identifier"}],"role":"symbol","title":"VideoFrameRate","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VideoFrameRate"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/VideoFrameRate","kind":"symbol","abstract":[{"type":"text","text":"Industry-standard video frame rates."},{"type":"text","text":" "},{"type":"text","text":"Certain rates may be progressive or interleaved."}],"url":"\/documentation\/midikit\/videoframerate"},"doc://MIDIKit/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SH"},"doc://MIDIKit/documentation/MIDIKit/TimecodeSortComparator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimecodeSortComparator"}],"kind":"symbol","url":"\/documentation\/midikit\/timecodesortcomparator","role":"symbol","title":"TimecodeSortComparator","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeSortComparator","abstract":[{"text":"Sort comparator for ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode"},{"text":" with optional timeline start time support.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TimecodeSortComparator","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/Fraction/zero":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"zero","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit8FractionV","text":"Fraction"}],"url":"\/documentation\/midikit\/fraction\/zero","kind":"symbol","role":"symbol","title":"zero","abstract":[{"text":"Returns a fraction with the time equivalent of zero.","type":"text"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/zero"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"kind":"article","role":"collectionGroup","url":"\/documentation\/midikit\/midikitsmf","abstract":[{"text":"Standard MIDI File extension for MIDIKit.","type":"text"}],"title":"MIDIKitSMF","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","type":"topic"},"doc://MIDIKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP"},"doc://MIDIKit/documentation/MIDIKit/RangeAttribute":{"navigatorTitle":[{"text":"RangeAttribute","kind":"identifier"}],"role":"symbol","title":"RangeAttribute","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeAttribute"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/RangeAttribute","kind":"symbol","abstract":[{"type":"text","text":"An individual time attribute of a time range."}],"url":"\/documentation\/midikit\/rangeattribute"},"doc://MIDIKit/documentation/MIDIKit/Fraction/fcpxmlStringValue":{"type":"topic","abstract":[{"text":"Returns the string value using time value encoding for Final Cut Pro FCPXML files.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Normalizes the fraction first if necessary."}],"title":"fcpxmlStringValue","url":"\/documentation\/midikit\/fraction\/fcpxmlstringvalue","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/fcpxmlStringValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"fcpxmlStringValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Fraction/isEqual(to:)":{"url":"\/documentation\/midikit\/fraction\/isequal(to:)","type":"topic","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if both fractions are mathematically equal (can reduce to the same values).","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Fraction","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit8FractionV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/isEqual(to:)","title":"isEqual(to:)","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/RichTimecodeSourceValue":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RichTimecodeSourceValue"}],"kind":"symbol","url":"\/documentation\/midikit\/richtimecodesourcevalue","role":"symbol","title":"RichTimecodeSourceValue","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/RichTimecodeSourceValue","abstract":[{"text":"Box containing a concrete ","type":"text"},{"code":"RichTimecodeSource","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RichTimecodeSourceValue"}]},"doc://MIDIKit/documentation/MIDIKit/Timecode":{"navigatorTitle":[{"text":"Timecode","kind":"identifier"}],"title":"Timecode","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode","url":"\/documentation\/midikit\/timecode","type":"topic","abstract":[{"type":"text","text":"Value type representing SMPTE\/EBU timecode."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Timecode","kind":"identifier"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate":{"navigatorTitle":[{"text":"TimecodeFrameRate","kind":"identifier"}],"role":"symbol","title":"TimecodeFrameRate","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimecodeFrameRate"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate","kind":"symbol","abstract":[{"type":"text","text":"Industry-standard BITC (burn-in timecode) display rates."},{"type":"text","text":" "},{"type":"text","text":"Certain rates may be drop-frame or non-drop-frame."}],"url":"\/documentation\/midikit\/timecodeframerate"},"doc://MIDIKit/documentation/MIDIKit/Fraction/CustomStringConvertible-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/midikit\/fraction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/CustomStringConvertible-Implementations","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/Fraction/denominator":{"title":"denominator","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"denominator"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[],"url":"\/documentation\/midikit\/fraction\/denominator","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/denominator"},"doc://MIDIKit/documentation/MIDIKit/Fraction/Hashable-Implementations":{"title":"Hashable Implementations","abstract":[],"url":"\/documentation\/midikit\/fraction\/hashable-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/Hashable-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync-Internals":{"title":"Internals","kind":"article","url":"\/documentation\/midikit\/midikitsync-internals","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync-Internals","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Components-swift.struct":{"url":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Components-swift.struct","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Primitive struct describing timecode values, agnostic of frame rate."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Components","kind":"identifier"}],"navigatorTitle":[{"text":"Components","kind":"identifier"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Fraction/doubleValue":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/doubleValue","title":"doubleValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"doubleValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the evaluated fraction as a ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/midikit\/fraction\/doublevalue"},"doc://MIDIKit/documentation/MIDIKit/Fraction/reduced()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a new instance reduced to its simplest form."},{"text":" ","type":"text"},{"type":"text","text":"This also normalizes signs."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduced","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit8FractionV","kind":"typeIdentifier","text":"Fraction"}],"url":"\/documentation\/midikit\/fraction\/reduced()","title":"reduced()","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Fraction\/reduced()"}}}