{"seeAlsoSections":[{"title":"TimecodeKit Types","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/FrameRate-swift.enum"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"title":"Timecode","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:11TimecodeKit0A0V","modules":[{"name":"MIDIKit"}],"navigatorTitle":[{"kind":"identifier","text":"Timecode"}]},"abstract":[{"type":"text","text":"Value type representing SMPTE timecode."}],"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/MIDIKit\/SL","doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/Se","doc:\/\/MIDIKit\/SE","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/Sx"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIFileEvent","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIFileEvent-SMPTEOffset"]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/TextFormatter"]},{"title":"Structures","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Components-swift.struct","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/FrameCount-swift.struct"]},{"title":"Operators","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*(_:_:)-2408u","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*(_:_:)-31yyg","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*=(_:_:)-8a2na","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*=(_:_:)-9nsob","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+=(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-=(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/(_:_:)-563ih","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/(_:_:)-5s440","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/=(_:_:)-3n4p4","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/=(_:_:)-hpkf"]},{"title":"Initializers","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-1fx16","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-4huug","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-8njj6","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:format:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(at:limit:base:format:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clamping:at:limit:base:format:)-4ek9d","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clamping:at:limit:base:format:)-98nqa","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clampingEach:at:limit:base:format:)-49wst","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clampingEach:at:limit:base:format:)-r9xw","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(flattening:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(rawValues:at:limit:base:format:)-67ar6","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(rawValues:at:limit:base:format:)-w73i","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(realTimeValue:at:limit:base:format:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(samples:sampleRate:at:limit:base:format:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(wrapping:at:limit:base:format:)-2yinr","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(wrapping:at:limit:base:format:)-641sh"]},{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/components-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/days","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameCount-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameRate-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frames","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/hours","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/invalidComponents","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxFrameCountExpressible","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxFrameCountExpressibleDouble","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxSubFrameCountExpressible","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxSubFramesExpressible","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/minutes","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/realTimeValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/scaledToMIDIFileSMPTEFrameRate","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/seconds","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringFormat-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValueFileNameCompatible","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subFrames","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subFramesBase-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/upperLimit-swift.property","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/verboseDescription"]},{"title":"Instance Methods","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/asInterval(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/clampComponents()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/converted(to:preservingValues:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/delta(to:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/interval(to:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/offset(by:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/offsetting(by:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/samplesValue(atSampleRate:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clamping:)-4dl8k","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clamping:)-9ka69","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clampingEach:)-3iho9","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clampingEach:)-ax0k","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-3vmet","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-5e793","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-9f9xo","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(fromRealTimeValue:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(fromSamplesValue:atSampleRate:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(rawValues:)-6rcsc","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(rawValues:)-96fy2","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(wrapping:)-1cj2w","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(wrapping:)-3ssi","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValueValidated(invalidAttributes:withDefaultAttributes:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(clamping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(wrapping:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/transform(using:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/transformed(using:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/validRange(of:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Delta","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringFormat-swift.typealias","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Transformer"]},{"title":"Type Methods","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/components(from:at:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/decode(timecode:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameCount(of:at:base:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/invalidComponents(in:at:limit:base:)"]},{"title":"Enumerations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Component","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringFormatParameter","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringParseError","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/SubFramesBase-swift.enum","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/UpperLimit-swift.enum","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/ValidationError"]},{"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Comparable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/CustomDebugStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Decodable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Equatable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Hashable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Strideable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/midikit\/timecode"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A variety of initializers and methods are available for string and numeric representation, validation, and conversion"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mathematical operators are available between two instances: "},{"type":"codeVoice","code":"+"},{"type":"text","text":", "},{"type":"codeVoice","code":"-"},{"type":"text","text":", "},{"type":"codeVoice","code":"*"},{"type":"text","text":", "},{"type":"codeVoice","code":"\\"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compared operators are available between two instances ("},{"type":"codeVoice","code":"=="},{"type":"text","text":", "},{"type":"codeVoice","code":"!="},{"type":"text","text":", "},{"type":"codeVoice","code":"<"},{"type":"text","text":", "},{"type":"codeVoice","code":">"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Range"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Stride"},{"type":"text","text":" can be formed between two instances"}]}]}]}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/Timecode/init(_:at:limit:base:format:)-1fx16":{"role":"symbol","title":"init(_:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance exactly from timecode values and frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-1fx16","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-1fx16"},"doc://MIDIKit/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Component":{"role":"symbol","title":"Timecode.Component","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}],"abstract":[{"type":"text","text":"Individual timecode component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Component","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/midikit\/timecode\/component"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(clampingEach:)-ax0k":{"role":"symbol","title":"setTimecode(clampingEach:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clampingEach"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set timecode from components, clamping individual values if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clampingEach:)-ax0k","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-ax0k"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiply(wrapping:)":{"role":"symbol","title":"multiply(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiply"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Multiply the current timecode by an amount."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiply(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/stringFormat-swift.property":{"role":"symbol","title":"stringFormat","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"}],"abstract":[{"type":"text","text":"Timecode string output format configuration."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringFormat-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/stringformat-swift.property"},"doc://MIDIKit/documentation/MIDIKit/Timecode/frameCount-swift.property":{"role":"symbol","title":"frameCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"frameCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"}],"abstract":[{"type":"text","text":"Returns the total number of whole frames elapsed from zero up to the timecode values."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameCount-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/framecount-swift.property"},"doc://MIDIKit/documentation/MIDIKit/Timecode/frameCount(of:at:base:)":{"role":"symbol","title":"frameCount(of:at:base:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"frameCount"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"}],"abstract":[{"type":"text","text":"Calculates total frames from given values at the current frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameCount(of:at:base:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/framecount(of:at:base:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiply(clamping:)":{"role":"symbol","title":"multiply(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiply"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Multiply the current timecode by an amount."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecodes as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiply(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/*(_:_:)-2408u":{"role":"symbol","title":"*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.multiplying(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*(_:_:)-2408u","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/*(_:_:)-2408u"},"doc://MIDIKit/documentation/MIDIKit/Timecode/minutes":{"role":"symbol","title":"minutes","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minutes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode minutes component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/minutes","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/minutes"},"doc://MIDIKit/documentation/MIDIKit/Timecode/dividing(clamping:)":{"role":"symbol","title":"dividing(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/dividing(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/customdebugstringconvertible-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/SubFramesBase-swift.enum":{"role":"symbol","title":"Timecode.SubFramesBase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubFramesBase"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/SubFramesBase-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubFramesBase"}],"url":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum"},"doc://MIDIKit/documentation/MIDIKit/Timecode/transformed(using:)":{"role":"symbol","title":"transformed(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeTransformer","preciseIdentifier":"s:11TimecodeKit0A11TransformerV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Returns the timecode transformed by the given transformer."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/transformed(using:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/transformed(using:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/hashable-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/+=(_:_:)":{"role":"symbol","title":"+=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.add(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/+=(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiplying(wrapping:)":{"role":"symbol","title":"multiplying(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiplying"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Multiply a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiplying(wrapping:)"},"doc://MIDIKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/MIDIKit\/Se"},"doc://MIDIKit/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/MIDIKit\/SH"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(clamping:)-4dl8k":{"role":"symbol","title":"setTimecode(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set timecode from components."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clamping:)-4dl8k","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-4dl8k"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subFrames":{"role":"symbol","title":"subFrames","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"subFrames"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode subframes component. Represents a fractional division of a frame."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subFrames","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subframes"},"doc://MIDIKit/documentation/MIDIKit/Timecode/seconds":{"role":"symbol","title":"seconds","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"seconds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode seconds component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/seconds","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/seconds"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(_:at:limit:base:format:)-4huug":{"role":"symbol","title":"init(_:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance exactly from timecode string and frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-4huug","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-4huug"},"doc://MIDIKit/documentation/MIDIKit/Timecode/delta(to:)":{"role":"symbol","title":"delta(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delta"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval"},{"type":"text","text":" distance between the current timecode and another timecode."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/delta(to:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/midikit\/timecode\/delta(to:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/*(_:_:)-31yyg":{"role":"symbol","title":"*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.multiplying(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*(_:_:)-31yyg","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/*(_:_:)-31yyg"},"doc://MIDIKit/documentation/MIDIKit/Timecode/-(_:_:)":{"role":"symbol","title":"-(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.subtracting(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/-(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/equatable-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/add(_:)":{"role":"symbol","title":"add(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/add(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(wrapping:)-1cj2w":{"role":"symbol","title":"setTimecode(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from a string. Values which are out-of-bounds will be clamped to minimum or maximum possible values. An error is thrown if the string is malformed and cannot be reasonably parsed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(wrapping:)-1cj2w","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-1cj2w"},"doc://MIDIKit/documentation/MIDIKit/Timecode/-(_:)":{"role":"symbol","title":"-(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"type":"text","text":"Returns self as a negative "},{"type":"codeVoice","code":"TimecodeInterval"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/-(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/hours":{"role":"symbol","title":"hours","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hours"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode hours component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/hours","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/hours"},"doc://MIDIKit/documentation/MIDIKit/Timecode/maxFrameCountExpressibleDouble":{"role":"symbol","title":"maxFrameCountExpressibleDouble","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxFrameCountExpressibleDouble"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" minus 1 subframe expressed as frames where the integer portion is whole frames and the fractional portion is the subframes unit interval."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxFrameCountExpressibleDouble","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/maxframecountexpressibledouble"},"doc://MIDIKit/documentation/MIDIKit/Timecode/interval(to:)":{"role":"symbol","title":"interval(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"interval"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval"},{"type":"text","text":" distance between the current timecode and another timecode."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/interval(to:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/interval(to:)"},"doc://MIDIKit/documentation/MIDIKit/TimecodeInterval/Sign/positive":{"role":"symbol","title":"TimecodeInterval.Sign.positive","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"positive"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval\/Sign\/positive","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecodeinterval\/sign\/positive"},"doc://MIDIKit/documentation/MIDIKit/MIDIFileEvent":{"role":"symbol","title":"MIDIFileEvent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIFileEvent"}],"abstract":[{"type":"text","text":"MIDI File Track Event."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIFileEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIFileEvent"}],"url":"\/documentation\/midikit\/midifileevent"},"doc://MIDIKit/documentation/MIDIKit/Timecode/dividing(wrapping:)":{"role":"symbol","title":"dividing(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/dividing(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/clampComponents()":{"role":"symbol","title":"clampComponents()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clampComponents"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Validates and clamps all timecode components to valid values at the current "},{"type":"codeVoice","code":"frameRate"},{"type":"text","text":" and "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" bound."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/clampComponents()","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/clampcomponents()"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(wrapping:at:limit:base:format:)-2yinr":{"role":"symbol","title":"init(wrapping:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from timecode string and frame rate, wrapping timecode if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(wrapping:at:limit:base:format:)-2yinr","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-2yinr"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(flattening:)":{"role":"symbol","title":"init(flattening:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flattening"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance by flattening a "},{"type":"codeVoice","code":"TimecodeInterval"},{"type":"text","text":", wrapping as necessary based on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/upperLimit-swift.property"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameRate-swift.property"},{"type":"text","text":" of the interval."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(flattening:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(flattening:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/divide(_:)":{"role":"symbol","title":"divide(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"divide"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/divide(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtracting(wrapping:)":{"role":"symbol","title":"subtracting(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtracting(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(clamping:at:limit:base:format:)-4ek9d":{"role":"symbol","title":"init(clamping:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from timecode string and frame rate, clamping to valid timecode if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clamping:at:limit:base:format:)-4ek9d","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-4ek9d"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtracting(_:)":{"role":"symbol","title":"subtracting(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtracting(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/add(wrapping:)":{"role":"symbol","title":"add(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/add(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/verboseDescription":{"role":"symbol","title":"verboseDescription","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"verboseDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/verboseDescription","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/verbosedescription"},"doc://MIDIKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/MIDIKit\/SE"},"doc://MIDIKit/documentation/MIDIKit/Timecode/components(from:at:)":{"role":"symbol","title":"components(from:at:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"components"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"}],"abstract":[{"type":"text","text":"Calculates resulting values from total frames at the current frame rate."},{"type":"text","text":" "},{"type":"text","text":"(You can add subframes afterward to the "},{"type":"codeVoice","code":"sf"},{"type":"text","text":" property if needed.)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/components(from:at:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/components(from:at:)"},"doc://MIDIKit/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/MIDIKit\/SQ"},"doc://MIDIKit/documentation/MIDIKit/Timecode/StringParseError":{"role":"symbol","title":"Timecode.StringParseError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringParseError"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringParseError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringParseError"}],"url":"\/documentation\/midikit\/timecode\/stringparseerror"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(samples:sampleRate:at:limit:base:format:)":{"role":"symbol","title":"init(samples:sampleRate:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"samples"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sampleRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from audio samples and sample rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(samples:sampleRate:at:limit:base:format:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(samples:samplerate:at:limit:base:format:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/converted(to:preservingValues:)":{"role":"symbol","title":"converted(to:preservingValues:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"converted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preservingValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Return a new "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" object converted to a new frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/converted(to:preservingValues:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/converted(to:preservingvalues:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/days":{"role":"symbol","title":"days","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"days"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode days component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/days","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/days"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Comparable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/comparable-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/frames":{"role":"symbol","title":"frames","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"frames"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Timecode frames component."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frames","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/frames"},"doc://MIDIKit/SL":{"type":"unresolvable","title":"Swift.Comparable","identifier":"doc:\/\/MIDIKit\/SL"},"doc://MIDIKit/documentation/MIDIKit/Timecode/+(_:_:)":{"role":"symbol","title":"+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.adding(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/+(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/add(clamping:)":{"role":"symbol","title":"add(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/add(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/add(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode//=(_:_:)-3n4p4":{"role":"symbol","title":"\/=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.divide(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/=(_:_:)-3n4p4","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/\/=(_:_:)-3n4p4"},"doc://MIDIKit/documentation/MIDIKit/Timecode/stringValueValidated(invalidAttributes:withDefaultAttributes:)":{"role":"symbol","title":"stringValueValidated(invalidAttributes:withDefaultAttributes:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValueValidated"},{"kind":"text","text":"("},{"kind":"externalParam","text":"invalidAttributes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"c:@T@NSAttributedStringKey"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"withDefaultAttributes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"c:@T@NSAttributedStringKey"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?) -> "},{"kind":"typeIdentifier","text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"stringValue"},{"type":"text","text":" as "},{"type":"codeVoice","code":"NSAttributedString"},{"type":"text","text":", highlighting invalid values."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValueValidated(invalidAttributes:withDefaultAttributes:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/stringvaluevalidated(invalidattributes:withdefaultattributes:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(_:at:limit:format:)":{"role":"symbol","title":"init(_:at:limit:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance exactly from total elapsed frames (“frame number”) at a given frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:format:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(_:at:limit:format:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/upperLimit-swift.property":{"role":"symbol","title":"upperLimit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"upperLimit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"}],"abstract":[{"type":"text","text":"Timecode maximum upper bound."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/upperLimit-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/upperlimit-swift.property"},"doc://MIDIKit/documentation/MIDIKit/Timecode/StringFormat-swift.typealias":{"role":"symbol","title":"Timecode.StringFormat","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringFormat"}],"abstract":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" string output format configuration."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringFormat-swift.typealias","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringFormat"}],"url":"\/documentation\/midikit\/timecode\/stringformat-swift.typealias"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(fromSamplesValue:atSampleRate:)":{"role":"symbol","title":"setTimecode(fromSamplesValue:atSampleRate:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fromSamplesValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atSampleRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"(Lossy)"},{"type":"text","text":" "},{"type":"text","text":"Sets the timecode to the nearest frame at the current frame rate from elapsed audio samples."},{"type":"text","text":" "},{"type":"text","text":"Returns false if it underflows or overflows valid timecode range."},{"type":"text","text":" "},{"type":"text","text":"Sample rate must be expressed as an Integer of Hz (ie: 48KHz would be passed as 48000)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(fromSamplesValue:atSampleRate:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(fromsamplesvalue:atsamplerate:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtract(wrapping:)":{"role":"symbol","title":"subtract(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtract"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtract(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiplying(_:)":{"role":"symbol","title":"multiplying(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiplying"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Multiply a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiplying(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(fromRealTimeValue:)":{"role":"symbol","title":"setTimecode(fromRealTimeValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fromRealTimeValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Sets the timecode to the nearest frame at the current frame rate from real-time (wall-clock time)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(fromRealTimeValue:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(fromrealtimevalue:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/customstringconvertible-implementations"},"doc://MIDIKit/documentation/MIDIKit/TimecodeInterval":{"role":"symbol","title":"TimecodeInterval","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimecodeInterval"}],"abstract":[{"type":"text","text":"Represents an interval duration of timecode, either positive or negative."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimecodeInterval"}],"url":"\/documentation\/midikit\/timecodeinterval"},"doc://MIDIKit/documentation/MIDIKit/Timecode/components-swift.property":{"role":"symbol","title":"components","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"components"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"}],"abstract":[{"type":"text","text":"Timecode component values (day, hour, minute, second, frame, subframe)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/components-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/components-swift.property"},"doc://MIDIKit/documentation/MIDIKit/Timecode/asInterval(_:)":{"role":"symbol","title":"asInterval(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asInterval"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Sign","preciseIdentifier":"s:11TimecodeKit0A8IntervalV4SignO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"type":"text","text":"Constructs a new "},{"type":"codeVoice","code":"TimecodeInterval"},{"type":"text","text":" instance from "},{"type":"codeVoice","code":"self"},{"type":"text","text":", either "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval\/Sign\/positive"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval\/Sign\/negative"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/asInterval(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/asinterval(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtracting(clamping:)":{"role":"symbol","title":"subtracting(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtracting(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtracting(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/maxFrameCountExpressible":{"role":"symbol","title":"maxFrameCountExpressible","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxFrameCountExpressible"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" minus 1 subframe expressed as frames where the integer portion is whole frames and the fractional portion is the subframes unit interval."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxFrameCountExpressible","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/maxframecountexpressible"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(rawValues:at:limit:base:format:)-w73i":{"role":"symbol","title":"init(rawValues:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance from raw timecode values and frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(rawValues:at:limit:base:format:)-w73i","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-w73i"},"doc://MIDIKit/documentation/MIDIKit/Timecode/FrameCount-swift.struct":{"role":"symbol","title":"Timecode.FrameCount","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FrameCount"}],"abstract":[{"type":"text","text":"Box describing a total elapsed frame count."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/FrameCount-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FrameCount"}],"url":"\/documentation\/midikit\/timecode\/framecount-swift.struct"},"doc://MIDIKit/documentation/MIDIKit/Timecode/UpperLimit-swift.enum":{"role":"symbol","title":"Timecode.UpperLimit","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"UpperLimit"}],"abstract":[{"type":"text","text":"Enum describing the maximum timecode ceiling."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/UpperLimit-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UpperLimit"}],"url":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum"},"doc://MIDIKit/documentation/MIDIKit/Timecode/realTimeValue":{"role":"symbol","title":"realTimeValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"realTimeValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"}],"abstract":[{"type":"text","text":"(Lossy) Returns the current timecode converted to a duration in real-time (wall-clock time), based on the frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/realTimeValue","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/realtimevalue"},"doc://MIDIKit/documentation/MIDIKit/Timecode//(_:_:)-563ih":{"role":"symbol","title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.dividing(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/(_:_:)-563ih","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/\/(_:_:)-563ih"},"doc://MIDIKit/documentation/MIDIKit/Timecode/*=(_:_:)-8a2na":{"role":"symbol","title":"*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.multiply(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*=(_:_:)-8a2na","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/*=(_:_:)-8a2na"},"doc://MIDIKit/documentation/MIDIKit/Timecode/frameRate-swift.property":{"role":"symbol","title":"frameRate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"frameRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"}],"abstract":[{"type":"text","text":"Frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/frameRate-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/framerate-swift.property"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync":{"role":"collectionGroup","title":"MIDIKitSync","abstract":[{"type":"text","text":"MIDI synchronization protocol abstractions (MTC, etc.) for MIDIKit."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitsync"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Strideable-Implementations":{"role":"collectionGroup","title":"Strideable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Strideable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/strideable-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(rawValues:at:limit:base:format:)-67ar6":{"role":"symbol","title":"init(rawValues:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from raw timecode values formatted as a timecode string and frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(rawValues:at:limit:base:format:)-67ar6","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-67ar6"},"doc://MIDIKit/documentation/MIDIKit/MIDIFileEvent-SMPTEOffset":{"role":"collectionGroup","title":"SMPTE Offset","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIFileEvent-SMPTEOffset","kind":"article","type":"topic","url":"\/documentation\/midikit\/midifileevent-smpteoffset"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(clampingEach:at:limit:base:format:)-49wst":{"role":"symbol","title":"init(clampingEach:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clampingEach"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance from timecode values and frame rate, clamping individual values if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clampingEach:at:limit:base:format:)-49wst","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-49wst"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Decodable-Implementations":{"role":"collectionGroup","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Decodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/timecode\/decodable-implementations"},"doc://MIDIKit/documentation/MIDIKit/Timecode/TextFormatter":{"role":"symbol","title":"Timecode.TextFormatter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextFormatter"}],"abstract":[{"type":"codeVoice","code":"Formatter"},{"type":"text","text":" subclass. ("},{"type":"codeVoice","code":"@objC"},{"type":"text","text":" name "},{"type":"codeVoice","code":"TimecodeTextFormatter"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" string formatter capable of displaying invalid timecode components with special formatting."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/TextFormatter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextFormatter"}],"url":"\/documentation\/midikit\/timecode\/textformatter"},"doc://MIDIKit/documentation/MIDIKit/Timecode/validRange(of:)":{"role":"symbol","title":"validRange(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Returns valid range of values for a timecode component, given the current "},{"type":"codeVoice","code":"frameRate"},{"type":"text","text":" and "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/validRange(of:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/validrange(of:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode//(_:_:)-5s440":{"role":"symbol","title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.dividing(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/(_:_:)-5s440","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/\/(_:_:)-5s440"},"doc://MIDIKit/Sx":{"type":"unresolvable","title":"Swift.Strideable","identifier":"doc:\/\/MIDIKit\/Sx"},"doc://MIDIKit/documentation/MIDIKit/Timecode/divide(clamping:)":{"role":"symbol","title":"divide(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"divide"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/divide(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"role":"collectionGroup","title":"MIDIKitSMF","abstract":[{"type":"text","text":"Standard MIDI File extension for MIDIKit."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitsmf"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(rawValues:)-96fy2":{"role":"symbol","title":"setTimecode(rawValues:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from a string, treating components as raw values. Timecode values will not be validated or rejected if they overflow. An error is thrown if the string is malformed and cannot be reasonably parsed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(rawValues:)-96fy2","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-96fy2"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Components-swift.struct":{"role":"symbol","title":"Timecode.Components","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Components"}],"abstract":[{"type":"text","text":"Primitive struct describing timecode values, agnostic of frame rate."},{"type":"text","text":" "},{"type":"text","text":"(The global typealias "},{"type":"codeVoice","code":"TCC()"},{"type":"text","text":" is also available for convenience.)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Components-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Components"}],"url":"\/documentation\/midikit\/timecode\/components-swift.struct"},"doc://MIDIKit/documentation/MIDIKit/Timecode/stringValue":{"role":"symbol","title":"stringValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Timecode string representation."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValue","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/stringvalue"},"doc://MIDIKit/documentation/MIDIKit/Timecode/offset(by:)":{"role":"symbol","title":"offset(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"offset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Offsets the current timecode by a delta amount."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock if needed, as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/offset(by:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/offset(by:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/FrameRate-swift.enum":{"role":"symbol","title":"Timecode.FrameRate","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FrameRate"}],"abstract":[{"type":"text","text":"Timecode frame rate."},{"type":"text","text":" "},{"type":"text","text":"Industry standardized BITC rates."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/FrameRate-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FrameRate"}],"url":"\/documentation\/midikit\/timecode\/framerate-swift.enum"},"doc://MIDIKit/documentation/MIDIKit/Timecode//=(_:_:)-hpkf":{"role":"symbol","title":"\/=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.divide(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/\/=(_:_:)-hpkf","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/\/=(_:_:)-hpkf"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(realTimeValue:at:limit:base:format:)":{"role":"symbol","title":"init(realTimeValue:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"realTimeValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from real time and frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(realTimeValue:at:limit:base:format:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(realtimevalue:at:limit:base:format:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/StringFormatParameter":{"role":"symbol","title":"Timecode.StringFormatParameter","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringFormatParameter"}],"abstract":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" string output format configuration parameter."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/StringFormatParameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringFormatParameter"}],"url":"\/documentation\/midikit\/timecode\/stringformatparameter"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(rawValues:)-6rcsc":{"role":"symbol","title":"setTimecode(rawValues:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set timecode from tuple values."},{"type":"text","text":" "},{"type":"text","text":"Timecode values will not be validated or rejected if they overflow."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(rawValues:)-6rcsc","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-6rcsc"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtract(clamping:)":{"role":"symbol","title":"subtract(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtract"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtract(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/dividing(_:)":{"role":"symbol","title":"dividing(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividing"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/dividing(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/dividing(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/adding(_:)":{"role":"symbol","title":"adding(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"adding"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/adding(_:)"},"doc://MIDIKit/documentation/MIDIKit/TimecodeInterval/Sign/negative":{"role":"symbol","title":"TimecodeInterval.Sign.negative","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"negative"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeInterval\/Sign\/negative","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecodeinterval\/sign\/negative"},"doc://MIDIKit/documentation/MIDIKit/Timecode/scaledToMIDIFileSMPTEFrameRate":{"role":"symbol","title":"scaledToMIDIFileSMPTEFrameRate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scaledToMIDIFileSMPTEFrameRate"},{"kind":"text","text":": (scaledTimecode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"?, smpteFR"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MIDIFile","preciseIdentifier":"s:10MIDIKitSMF8MIDIFileV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SMPTEOffsetFrameRate","preciseIdentifier":"s:10MIDIKitSMF8MIDIFileV20SMPTEOffsetFrameRateO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Determines the best corresponding MIDI File SMPTE Offset frame rate to represent "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and converts the timecode to that frame rate, and converts the subframes to be scaled to a 100 subframe divisor if needed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/scaledToMIDIFileSMPTEFrameRate","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/scaledtomidifilesmpteframerate"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(clampingEach:at:limit:base:format:)-r9xw":{"role":"symbol","title":"init(clampingEach:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clampingEach"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance from timecode string and frame rate, clamping if values necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clampingEach:at:limit:base:format:)-r9xw","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-r9xw"},"doc://MIDIKit/documentation/MIDIKit/Timecode/transform(using:)":{"role":"symbol","title":"transform(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeTransformer","preciseIdentifier":"s:11TimecodeKit0A11TransformerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Transforms the timecode in-place using the given transformer."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/transform(using:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/transform(using:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/adding(clamping:)":{"role":"symbol","title":"adding(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"adding"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/adding(clamping:)"},"doc://MIDIKit/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(_:at:limit:base:format:)-8njj6":{"role":"symbol","title":"init(_:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV5ValueO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Instance exactly from total elapsed frames (“frame number”) at a given frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(_:at:limit:base:format:)-8njj6","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-8njj6"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(exactly:)-9f9xo":{"role":"symbol","title":"setTimecode(exactly:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from tuple values."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-9f9xo","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-9f9xo"},"doc://MIDIKit/documentation/MIDIKit/Timecode/invalidComponents":{"role":"symbol","title":"invalidComponents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"invalidComponents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a set of invalid components, if any."},{"type":"text","text":" "},{"type":"text","text":"A fully valid timecode will return an empty set."},{"type":"text","text":" "},{"type":"text","text":"Validation relies on "},{"type":"codeVoice","code":"frameRate"},{"type":"text","text":" and "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/invalidComponents","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/invalidcomponents"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(wrapping:)-3ssi":{"role":"symbol","title":"setTimecode(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set timecode from tuple values."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(wrapping:)-3ssi","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-3ssi"},"doc://MIDIKit/documentation/MIDIKit/Timecode/*=(_:_:)-9nsob":{"role":"symbol","title":"*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.multiply(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/*=(_:_:)-9nsob","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/*=(_:_:)-9nsob"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiply(_:)":{"role":"symbol","title":"multiply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Multiply the current timecode by an amount."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiply(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiply(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/-=(_:_:)":{"role":"symbol","title":"-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"a.k.a. "},{"type":"codeVoice","code":"lhs.subtract(wrapping: rhs)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/-=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/-=(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Transformer":{"deprecated":true,"role":"symbol","title":"Timecode.Transformer","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Transformer"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Transformer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Transformer"}],"url":"\/documentation\/midikit\/timecode\/transformer"},"doc://MIDIKit/documentation/MIDIKit/Timecode/invalidComponents(in:at:limit:base:)":{"role":"symbol","title":"invalidComponents(in:at:limit:base:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invalidComponents"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TCC","preciseIdentifier":"s:11TimecodeKit3TCCa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a set of invalid components, if any."},{"type":"text","text":" "},{"type":"text","text":"A fully valid timecode will return an empty set."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/invalidComponents(in:at:limit:base:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/invalidcomponents(in:at:limit:base:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/samplesValue(atSampleRate:)":{"role":"symbol","title":"samplesValue(atSampleRate:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"samplesValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atSampleRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"(Lossy)"},{"type":"text","text":" "},{"type":"text","text":"Returns the current timecode converted to a duration in real-time audio samples at the given sample rate, rounded to the nearest sample."},{"type":"text","text":" "},{"type":"text","text":"Sample rate must be expressed as an Integer in Hz (ie: 48KHz would be passed as 48000)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/samplesValue(atSampleRate:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/samplesvalue(atsamplerate:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/multiplying(clamping:)":{"role":"symbol","title":"multiplying(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiplying"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Multiply a duration from the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Clamps to valid timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/multiplying(clamping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/multiplying(clamping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/maxSubFrameCountExpressible":{"role":"symbol","title":"maxSubFrameCountExpressible","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxSubFrameCountExpressible"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" minus 1 subframe expressed as total subframes."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxSubFrameCountExpressible","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/maxsubframecountexpressible"},"doc://MIDIKit/documentation/MIDIKit/Timecode/adding(wrapping:)":{"role":"symbol","title":"adding(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"adding"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Add a duration to the current timecode and return a new instance with the new timecode."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/adding(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/adding(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(at:limit:base:format:)":{"role":"symbol","title":"init(at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance with default timecode (00:00:00:00) at a given frame rate."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(at:limit:base:format:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(at:limit:base:format:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(wrapping:at:limit:base:format:)-641sh":{"role":"symbol","title":"init(wrapping:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance from timecode values and frame rate, wrapping timecode if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(wrapping:at:limit:base:format:)-641sh","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-641sh"},"doc://MIDIKit/documentation/MIDIKit/Timecode/divide(wrapping:)":{"role":"symbol","title":"divide(wrapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"divide"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Divide the current timecode by a duration."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/divide(wrapping:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/divide(wrapping:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/maxSubFramesExpressible":{"role":"symbol","title":"maxSubFramesExpressible","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxSubFramesExpressible"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the largest subframe value displayable before rolling over to the next frame."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/maxSubFramesExpressible","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/maxsubframesexpressible"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subFramesBase-swift.property":{"role":"symbol","title":"subFramesBase","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"subFramesBase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"}],"abstract":[{"type":"text","text":"Subframes base (divisor)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subFramesBase-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subframesbase-swift.property"},"doc://MIDIKit/documentation/MIDIKit/Timecode/ValidationError":{"role":"symbol","title":"Timecode.ValidationError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationError"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/ValidationError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"url":"\/documentation\/midikit\/timecode\/validationerror"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(clampingEach:)-3iho9":{"role":"symbol","title":"setTimecode(clampingEach:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clampingEach"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from a timecode string, clamping individual values if necessary. Individual values which are out-of-bounds will be clamped to minimum or maximum possible values. An error is thrown if the string is malformed and cannot be reasonably parsed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clampingEach:)-3iho9","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-3iho9"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(exactly:)-3vmet":{"role":"symbol","title":"setTimecode(exactly:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from a timecode string. Values which are out-of-bounds will also cause the setter to fail, and return false. An error is thrown if the string is malformed and cannot be reasonably parsed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-3vmet","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-3vmet"},"doc://MIDIKit/documentation/MIDIKit/Timecode/Delta":{"deprecated":true,"role":"symbol","title":"Timecode.Delta","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Delta"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/Delta","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Delta"}],"url":"\/documentation\/midikit\/timecode\/delta"},"doc://MIDIKit/documentation/MIDIKit/Timecode":{"role":"symbol","title":"Timecode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"abstract":[{"type":"text","text":"Value type representing SMPTE timecode."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"url":"\/documentation\/midikit\/timecode"},"doc://MIDIKit/documentation/MIDIKit/Timecode/stringValueFileNameCompatible":{"role":"symbol","title":"stringValueFileNameCompatible","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValueFileNameCompatible"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Forms "},{"type":"codeVoice","code":".stringValue"},{"type":"text","text":" using filename-compatible characters."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/stringValueFileNameCompatible","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/stringvaluefilenamecompatible"},"doc://MIDIKit/documentation/MIDIKit/Timecode/+(_:)":{"role":"symbol","title":"+(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"}],"abstract":[{"type":"text","text":"Returns self as a positive "},{"type":"codeVoice","code":"TimecodeInterval"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/+(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/+(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/decode(timecode:)":{"role":"symbol","title":"decode(timecode:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timecode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"}],"abstract":[{"type":"text","text":"Decodes a Timecode string into its component values, without validating."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/decode(timecode:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/decode(timecode:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/subtract(_:)":{"role":"symbol","title":"subtract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtract"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Subtract a duration from the current timecode."},{"type":"text","text":" "},{"type":"text","text":"Input values can be as large as desired and will be calculated recursively. ie: (0,0,0,1000) or (0,0,500,0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/subtract(_:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/subtract(_:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(clamping:)-9ka69":{"role":"symbol","title":"setTimecode(clamping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from a timecode string, clamping to valid timecode if necessary. An error is thrown if the string is malformed and cannot be reasonably parsed."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(clamping:)-9ka69","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-9ka69"},"doc://MIDIKit/documentation/MIDIKit/Timecode/offsetting(by:)":{"role":"symbol","title":"offsetting(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetting"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimecodeInterval","preciseIdentifier":"s:11TimecodeKit0A8IntervalV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"}],"abstract":[{"type":"text","text":"Returns the timecode offset by a delta amount."},{"type":"text","text":" "},{"type":"text","text":"Wraps around the clock if needed, as set by the "},{"type":"codeVoice","code":"upperLimit"},{"type":"text","text":" property."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/offsetting(by:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/offsetting(by:)"},"doc://MIDIKit/documentation/MIDIKit/Timecode/setTimecode(exactly:)-5e793":{"role":"symbol","title":"setTimecode(exactly:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTimecode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameCount","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11TimecodeKit0A0V10FrameCountV5ValueO"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Set timecode from total elapsed frames (“frame number”)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/setTimecode(exactly:)-5e793","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-5e793"},"doc://MIDIKit/documentation/MIDIKit/Timecode/init(clamping:at:limit:base:format:)-98nqa":{"role":"symbol","title":"init(clamping:at:limit:base:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clamping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FrameRate","preciseIdentifier":"s:11TimecodeKit0A0V9FrameRateO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubFramesBase","preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Instance from timecode values and frame rate, clamping to valid timecode if necessary."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Timecode\/init(clamping:at:limit:base:format:)-98nqa","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-98nqa"}}}