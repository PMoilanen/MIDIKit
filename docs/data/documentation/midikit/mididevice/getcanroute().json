{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCanRoute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getCanRoute()"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/getcanroute()"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCanRoute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":[],"roleHeading":"Instance Method","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE11getCanRouteSbyF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","symbolKind":"method","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"extendedModule":"MIDIKitIO","title":"getCanRoute()","role":"symbol"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"MIDIIOObject.getCanRoute()"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","abstract":[],"title":"MIDIIOObject Implementations","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/getCanRoute()":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getCanRoute()","url":"\/documentation\/midikit\/mididevice\/getcanroute()","role":"symbol","title":"getCanRoute()","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getCanRoute","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIDeviceRef"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","title":"Working with Devices","role":"collectionGroup","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","kind":"article"}}}