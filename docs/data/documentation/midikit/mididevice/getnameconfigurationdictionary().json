{"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MIDIIOObject.getNameConfigurationDictionary()"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getNameConfigurationDictionary"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"NSDictionary","preciseIdentifier":"c:objc(cs)NSDictionary"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"symbolKind":"method","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE30getNameConfigurationDictionarySo12NSDictionaryCSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","role":"symbol","platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"13.0","beta":false},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"10.15","name":"macOS"},{"unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false,"name":"Mac Catalyst"}],"extendedModule":"MIDIKitIO","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getNameConfigurationDictionary","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSDictionary","text":"NSDictionary","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"getNameConfigurationDictionary()"},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getNameConfigurationDictionary()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/midikit\/mididevice\/getnameconfigurationdictionary()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations","title":"MIDIIOObject Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","abstract":[],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice","role":"symbol","type":"topic","url":"\/documentation\/midikit\/mididevice","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"kind":"symbol","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","title":"MIDIManager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"url":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"topic","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/getNameConfigurationDictionary()":{"deprecated":true,"kind":"symbol","type":"topic","abstract":[],"title":"getNameConfigurationDictionary()","url":"\/documentation\/midikit\/mididevice\/getnameconfigurationdictionary()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getNameConfigurationDictionary","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"NSDictionary","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSDictionary"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getNameConfigurationDictionary()","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"}}}