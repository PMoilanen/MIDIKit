{"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/isPrivate","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPrivate","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property on a device or entity, but it still appears in the API; the system"},{"text":" ","type":"text"},{"text":"only hides the objectâ€™s owned endpoints.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"metadata":{"roleHeading":"Instance Property","title":"isPrivate","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"symbolKind":"property","extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE9isPrivateSbvp::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPrivate","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/isprivate"]}],"abstract":[{"text":"Boolean value that indicates whether the system hides an endpoint from other clients.","type":"text"},{"type":"text","text":" "},{"text":"(","type":"text"},{"type":"codeVoice","code":"kMIDIPropertyPrivate"},{"text":")","type":"text"}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/isPrivate":{"type":"topic","title":"isPrivate","url":"\/documentation\/midikit\/mididevice\/isprivate","abstract":[{"type":"text","text":"Boolean value that indicates whether the system hides an endpoint from other clients."},{"text":" ","type":"text"},{"type":"text","text":"("},{"type":"codeVoice","code":"kMIDIPropertyPrivate"},{"text":")","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/isPrivate","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isPrivate","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"text":" ","type":"text"},{"text":"and output endpoints.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"kind":"symbol","title":"MIDIDevice","url":"\/documentation\/midikit\/mididevice"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","title":"MIDIIOObject Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}]}}}