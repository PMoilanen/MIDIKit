{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getReceivesMTC()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getReceivesMTC","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"getReceivesMTC()","platforms":[],"extendedModule":"MIDIKitIO","role":"symbol","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE14getReceivesMTCSbyF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","symbolKind":"method","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getReceivesMTC"},{"text":"() -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/getreceivesmtc()"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MIDIIOObject.getReceivesMTC()"},{"type":"text","text":"."}],"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","title":"Working with Devices","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","role":"collectionGroup","title":"MIDIIOObject Implementations","abstract":[],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice","abstract":[{"text":"A MIDI device, wrapping a Core MIDI ","type":"text"},{"code":"MIDIDeviceRef","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIDevice","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/getReceivesMTC()":{"type":"topic","url":"\/documentation\/midikit\/mididevice\/getreceivesmtc()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getReceivesMTC"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"getReceivesMTC()","kind":"symbol","deprecated":true,"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getReceivesMTC()","role":"symbol"}}}