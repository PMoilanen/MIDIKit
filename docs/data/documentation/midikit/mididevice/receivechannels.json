{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/receiveChannels"},"sections":[],"abstract":[{"type":"text","text":"Bitmap of channels on which the object receives messages."},{"text":" ","type":"text"},{"text":"(","type":"text"},{"code":"kMIDIPropertyReceiveChannels","type":"codeVoice"},{"text":")","type":"text"}],"kind":"symbol","metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveChannels"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}],"title":"receiveChannels","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE15receiveChannelss5Int32Vvp::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","symbolKind":"property","roleHeading":"Instance Property","extendedModule":"MIDIKitIO","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/receivechannels"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receiveChannels","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this property in the following scenarios:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Drivers can set this property on their entities and endpoints."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Studio setup editors can allow the user to set this property on external endpoints."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Virtual destinations can set this property on their endpoints.","type":"text"}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"text":" ","type":"text"},{"text":"and output endpoints.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"kind":"symbol","title":"MIDIDevice","url":"\/documentation\/midikit\/mididevice"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/receiveChannels":{"kind":"symbol","title":"receiveChannels","url":"\/documentation\/midikit\/mididevice\/receivechannels","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/receiveChannels","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receiveChannels"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Bitmap of channels on which the object receives messages."},{"text":" ","type":"text"},{"type":"text","text":"("},{"code":"kMIDIPropertyReceiveChannels","type":"codeVoice"},{"text":")","type":"text"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","title":"MIDIIOObject Implementations"}}}