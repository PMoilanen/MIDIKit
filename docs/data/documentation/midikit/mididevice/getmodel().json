{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"MIDIIOObject.getModel()"},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getModel","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getModel()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"variants":[{"paths":["\/documentation\/midikit\/mididevice\/getmodel()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"platforms":[],"extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE8getModelSSSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","title":"getModel()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getModel"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"symbolKind":"method","roleHeading":"Instance Method"},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIDeviceRef"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","abstract":[],"title":"MIDIIOObject Implementations","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","title":"Working with Devices","role":"collectionGroup","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/getModel()":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getModel()","url":"\/documentation\/midikit\/mididevice\/getmodel()","role":"symbol","title":"getModel()","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getModel","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"deprecated":true}}}