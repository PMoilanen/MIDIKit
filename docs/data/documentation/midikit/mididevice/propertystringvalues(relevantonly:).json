{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"type":"text","text":" "},{"text":"Useful for displaying in a user interface or outputting to console for debugging.","type":"text"},{"type":"text","text":" "},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"metadata":{"modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"roleHeading":"Instance Method","extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> [(key","kind":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", value"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")]"}],"title":"propertyStringValues(relevantOnly:)","symbolKind":"method","role":"symbol"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"relevantOnly"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true) -> [(key","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")]","kind":"text"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIDeviceRef"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","abstract":[],"title":"MIDIIOObject Implementations","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","title":"Working with Devices","role":"collectionGroup","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/propertyStringValues(relevantOnly:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","url":"\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)","role":"symbol","title":"propertyStringValues(relevantOnly:)","abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"text":" ","type":"text"},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"text":"Not recommended for production code. Instead, use strongly-typed properties on this object.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> [(key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", value","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")]","kind":"text"}]}}}