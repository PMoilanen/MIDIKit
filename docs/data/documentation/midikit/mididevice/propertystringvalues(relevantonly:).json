{"metadata":{"externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","title":"propertyStringValues(relevantOnly:)","role":"symbol","extendedModule":"MIDIKitIO","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", value","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")]"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"kind":"symbol","abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"type":"text","text":" "},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"kind":"text","text":"("},{"text":"relevantOnly","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true) -> [(key"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")]","kind":"text"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","title":"MIDIIOObject Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"text":" ","type":"text"},{"text":"and output endpoints.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"kind":"symbol","title":"MIDIDevice","url":"\/documentation\/midikit\/mididevice"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/propertyStringValues(relevantOnly:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"relevantOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")]"}],"type":"topic","title":"propertyStringValues(relevantOnly:)","kind":"symbol","role":"symbol","abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"text":" ","type":"text"},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"text":"Not recommended for production code. Instead, use strongly-typed properties on this object.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","url":"\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"}}}