{"abstract":[{"type":"text","text":"An individual MIDI Event."}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midievent"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Categories","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Common","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Exclusive","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Real-Time","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Utility"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-General-Properties"],"title":"General Properties"},{"title":"Event Filtering","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Event-Filtering"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawBytes()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/umpRawWords(protocol:)"],"title":"Raw Data Encoding"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ParseError"],"title":"Errors"},{"title":"Instance Methods","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawDataBytes()","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawStatusByte()"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/deviceInquiryRequest(deviceID:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/deviceInquiryResponse(deviceID:manufacturer:deviceFamilyCode:deviceFamilyMemberCode:softwareRevision:)"],"title":"Type Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/CustomDebugStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/Equatable-Implementations"],"generated":true}],"sections":[],"metadata":{"role":"symbol","symbolKind":"enum","roleHeading":"Enumeration","externalID":"s:11MIDIKitCore9MIDIEventO","title":"MIDIEvent","modules":[{"name":"MIDIKit"}],"navigatorTitle":[{"text":"MIDIEvent","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"MIDIEvent","kind":"identifier"}]},"seeAlsoSections":[{"generated":true,"title":"Events","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Event-Filters"]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEvent"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"MIDI events are constructed as enum cases containing event payload data. Various static"},{"type":"text","text":" "},{"text":"constructors are available for each event type.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In both MIDI 1.0 and MIDI 2.0, events are divided into several main categories:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Channel-Voice","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System-Common"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System-Exclusive"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"System-Real-Time"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Utility (Applicable to MIDI 2.0 only)"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"MIDIKit provides type-safe abstractions for all possible events and values. For this reason, it","type":"text"},{"type":"text","text":" "},{"text":"is not necessary (and is discouraged) to use raw bytes when constructing or parsing events.","type":"text"}]},{"text":"Constructing Events","type":"heading","level":2,"anchor":"Constructing-Events"},{"inlineContent":[{"text":"It is recommended to use the parameterized static methods to construct these events:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ both the following methods are valid and identical:","let event = MIDIEvent.noteOn(60, velocity: .midi1(64), channel: 0)","let event: MIDIEvent = .noteOn(60, velocity: .midi1(64), channel: 0)"]},{"level":2,"text":"Parsing Received Events","type":"heading","anchor":"Parsing-Received-Events"},{"inlineContent":[{"type":"text","text":"It is recommended to use the payload struct and access its properties."}],"type":"paragraph"},{"syntax":"swift","code":["switch midiEvent {","case .noteOn(let payload):","    print(\"Note On:\", payload.note, payload.velocity, payload.channel)","case .noteOff(let payload):","    print(\"Note Off:\", payload.note, payload.velocity, payload.channel)","\/\/ ... add additional cases for other event types if needed ...","default:","    break","}"],"type":"codeListing"},{"text":"MIDI 2.0 Considerations","level":2,"type":"heading","anchor":"MIDI-20-Considerations"},{"type":"paragraph","inlineContent":[{"text":"MIDI 2.0 incorporates nearly all of the pre-existing MIDI 1.0 events while increasing the value resolution for many. Additionally, MIDI 2.0 introduces several new event types which are not backwards-compatible with MIDI 1.0.","type":"text"}]},{"inlineContent":[{"text":"UMP (Universal MIDI Packet) introduces a ","type":"text"},{"inlineContent":[{"text":"group","type":"text"}],"type":"strong"},{"type":"text","text":" parameter included in each packet. MIDI 2.0 adds the ability to select a group (0-15) which effectively multiplexes the MIDI port into 16 addressable sub-ports (termed “UMP groups”). This should be set to 0 under most circumstances to maintain compatibility. It defaults to 0 if the parameter is omitted from "},{"code":"MIDIEvent","type":"codeVoice"},{"text":" constructors. MIDI 1.0 is not capable of transmitting this parameter and therefore has no effect and will be stripped when sent to or received from a MIDI 1.0 device.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For more details, see the official MIDI 2.0 Spec."}],"type":"paragraph"},{"anchor":"Event-Value-Types","type":"heading","text":"Event Value Types","level":2},{"inlineContent":[{"text":"For an overview of how event value types work (such as note velocity, CC value, etc.) see ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://MIDIKit/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/CustomStringConvertible-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/CustomStringConvertible-Implementations","type":"topic","abstract":[],"title":"CustomStringConvertible Implementations","url":"\/documentation\/midikit\/midievent\/customstringconvertible-implementations","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/deviceInquiryRequest(deviceID:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/deviceInquiryRequest(deviceID:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deviceInquiryRequest","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deviceID"},{"kind":"text","text":": "},{"text":"UInt7","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","text":"MIDIEvent"}],"abstract":[{"type":"text","text":"SysEx: Device Inquiry request message."}],"kind":"symbol","title":"deviceInquiryRequest(deviceID:)","url":"\/documentation\/midikit\/midievent\/deviceinquiryrequest(deviceid:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-System-Exclusive":{"type":"topic","kind":"article","abstract":[{"text":"System Exclusive messages carry a header and an arbitrary number of data bytes. These messages are typically used to communicate patch and preset data or binary data payloads such as raw audio samples or device firmware updates. It is up to each software or hardware manufacturer to determine how the data is formatted.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/midikit\/midievent-system-exclusive","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Exclusive","title":"System Exclusive"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent":{"url":"\/documentation\/midikit\/midievent","navigatorTitle":[{"kind":"identifier","text":"MIDIEvent"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEvent"}],"kind":"symbol","title":"MIDIEvent","type":"topic","abstract":[{"type":"text","text":"An individual MIDI Event."}],"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Event-Filters":{"role":"collectionGroup","url":"\/documentation\/midikit\/midikitcore-event-filters","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Event-Filters","title":"Event Filters","type":"topic","kind":"article","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/CustomDebugStringConvertible-Implementations","type":"topic","abstract":[],"title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/midikit\/midievent\/customdebugstringconvertible-implementations","kind":"article"},"doc://MIDIKit/SH":{"identifier":"doc:\/\/MIDIKit\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF-Internals":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/midikit\/midikitsmf-internals","kind":"article","title":"Internals"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ParseError":{"navigatorTitle":[{"text":"ParseError","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/midikit\/midievent\/parseerror","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ParseError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParseError"}],"title":"MIDIEvent.ParseError"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-System-Real-Time":{"title":"System Real-Time","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Real-Time","url":"\/documentation\/midikit\/midievent-system-real-time","abstract":[{"type":"text","text":"System Real-Time events include global system messages such as sequencer start\/stop\/continue, timing clock, and system reset."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"title":"MIDIKit Value Types","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","url":"\/documentation\/midikit\/midikitcore-value-types","type":"topic","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-General-Properties":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-General-Properties","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/midikit\/midievent-general-properties","title":"General Properties","abstract":[{"type":"text","text":"These general properties can be used to assess the instance’s type."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/umpRawWords(protocol:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"umpRawWords"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"protocol"},{"kind":"text","text":": "},{"text":"MIDIProtocolVersion","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"kind":"text","text":") -> [["},{"text":"UMPWord","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore7UMPWorda"},{"text":"]]","kind":"text"}],"abstract":[{"text":"Returns the raw MIDI 2.0 UMP (Universal MIDI Packet) message bytes that comprise the event.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/umpRawWords(protocol:)","title":"umpRawWords(protocol:)","url":"\/documentation\/midikit\/midievent\/umprawwords(protocol:)","role":"symbol","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/Equatable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/Equatable-Implementations","type":"topic","abstract":[],"title":"Equatable Implementations","url":"\/documentation\/midikit\/midievent\/equatable-implementations","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","kind":"article","abstract":[{"text":"Standard MIDI File extension for MIDIKit.","type":"text"}],"title":"MIDIKitSMF","url":"\/documentation\/midikit\/midikitsmf","role":"collectionGroup","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-System-Common":{"role":"collectionGroup","type":"topic","url":"\/documentation\/midikit\/midievent-system-common","abstract":[{"type":"text","text":"System Common events include general system messages such as song select and MIDI Timecode (MTC) quarter-frame. These messages are not channel-specific."}],"title":"System Common","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-System-Common"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/midi1RawBytes()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"midi1RawBytes","kind":"identifier"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"]","kind":"text"}],"abstract":[{"text":"Returns the complete raw MIDI 1.0 message bytes that comprise the event.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawBytes()","title":"midi1RawBytes()","url":"\/documentation\/midikit\/midievent\/midi1rawbytes()","role":"symbol","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"kind":"article","url":"\/documentation\/midikit\/midikitcore","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"title":"MIDIKitCore"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-Utility":{"role":"collectionGroup","title":"Utility Messages","url":"\/documentation\/midikit\/midievent-utility","abstract":[{"type":"text","text":"The MIDI 2.0 Spec provides a set of UMP transport-related utility messages, including jitter-reduction messages to help improve event timing."}],"kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Utility"},"doc://MIDIKit/s8SendableP":{"identifier":"doc:\/\/MIDIKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/deviceInquiryResponse(deviceID:manufacturer:deviceFamilyCode:deviceFamilyMemberCode:softwareRevision:)":{"abstract":[{"type":"text","text":"SysEx: Device Inquiry response message."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deviceInquiryResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"deviceID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V","text":"UInt7"},{"kind":"text","text":", "},{"text":"manufacturer","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","text":"MIDIEvent"},{"kind":"text","text":"."},{"text":"SysExManufacturer","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO17SysExManufacturerO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"deviceFamilyCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore6UInt14V","text":"UInt14"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"deviceFamilyMemberCode"},{"text":": ","kind":"text"},{"text":"UInt14","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore6UInt14V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"softwareRevision"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11MIDIKitCore5UInt7V","text":"UInt7","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"UInt7","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"text":", ","kind":"text"},{"text":"UInt7","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V","text":"UInt7"},{"kind":"text","text":")) -> "},{"text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/deviceInquiryResponse(deviceID:manufacturer:deviceFamilyCode:deviceFamilyMemberCode:softwareRevision:)","title":"deviceInquiryResponse(deviceID:manufacturer:deviceFamilyCode:deviceFamilyMemberCode:softwareRevision:)","url":"\/documentation\/midikit\/midievent\/deviceinquiryresponse(deviceid:manufacturer:devicefamilycode:devicefamilymembercode:softwarerevision:)","type":"topic","role":"symbol"},"doc://MIDIKit/s23CustomStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/midi1RawStatusByte()":{"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawStatusByte()","type":"topic","abstract":[{"type":"text","text":"Returns the raw MIDI 1.0 status byte for the event if the event is compatible with MIDI 1.0."}],"title":"midi1RawStatusByte()","url":"\/documentation\/midikit\/midievent\/midi1rawstatusbyte()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"midi1RawStatusByte"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"?"}]},"doc://MIDIKit/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SQ"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-Channel-Voice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","role":"collectionGroup","abstract":[{"type":"text","text":"Channel Voice events include notes, continuous controllers, pressure (aftertouch), program changes, and registered parameters (RPN\/NRPN). Additional per-note controllers are available when communicating with a device that supports MIDI 2.0."}],"type":"topic","url":"\/documentation\/midikit\/midievent-channel-voice","kind":"article","title":"Channel Voice"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/midi1RawDataBytes()":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/midi1RawDataBytes()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"midi1RawDataBytes"},{"text":"() -> (data1","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"?, data2","kind":"text"},{"text":": ","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"?)?","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/midievent\/midi1rawdatabytes()","title":"midi1RawDataBytes()","abstract":[{"type":"text","text":"Returns the raw MIDI 1.0 data bytes for the event (excluding status byte) if the event is"},{"type":"text","text":" "},{"text":"compatible with MIDI 1.0.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-Event-Filtering":{"role":"collectionGroup","title":"Event Filtering","abstract":[{"type":"text","text":"Filter methods are available on a single "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent"},{"text":" instance.","type":"text"}],"type":"topic","url":"\/documentation\/midikit\/midievent-event-filtering","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Event-Filtering"}}}