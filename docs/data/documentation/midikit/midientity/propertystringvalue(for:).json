{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/propertyStringValue(for:)"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Get a property value formatted as a human-readable string."},{"type":"text","text":" "},{"text":"Useful for displaying in a user interface or outputting to console for debugging.","type":"text"},{"type":"text","text":" "},{"text":"Not recommended for production code. Instead, use strongly-typed properties on this object.","type":"text"}],"variants":[{"paths":["\/documentation\/midikit\/midientity\/propertystringvalue(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"propertyStringValue","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"text":"property","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/AnyMIDIIOObject","preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO","kind":"typeIdentifier","text":"AnyMIDIIOObject"},{"kind":"text","text":"."},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/AnyMIDIIOObject\/Property","kind":"typeIdentifier","text":"Property","preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO8PropertyO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"role":"symbol","title":"propertyStringValue(for:)","extendedModule":"MIDIKitIO","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE19propertyStringValue3forSSAA03AnyC0O8PropertyO_tF::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO","text":"AnyMIDIIOObject","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Property","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO8PropertyO"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"url":"\/documentation\/midikit\/midientity\/midiioobject-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","title":"MIDIIOObject Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/AnyMIDIIOObject/Property":{"type":"topic","navigatorTitle":[{"text":"Property","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/AnyMIDIIOObject\/Property","abstract":[{"type":"text","text":"MIDI object property keys, analogous to Core MIDI property keys."}],"title":"AnyMIDIIOObject.Property","url":"\/documentation\/midikit\/anymidiioobject\/property","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Property"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","title":"Working with Devices","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIEntityRef","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"kind":"symbol","title":"MIDIEntity","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"url":"\/documentation\/midikit\/midientity"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/AnyMIDIIOObject":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/AnyMIDIIOObject","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyMIDIIOObject"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyMIDIIOObject"}],"kind":"symbol","title":"AnyMIDIIOObject","type":"topic","url":"\/documentation\/midikit\/anymidiioobject","abstract":[{"text":"Box to contain an instance of a strongly-typed system MIDI object.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/propertyStringValue(for:)":{"url":"\/documentation\/midikit\/midientity\/propertystringvalue(for:)","role":"symbol","type":"topic","title":"propertyStringValue(for:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/propertyStringValue(for:)","kind":"symbol","abstract":[{"type":"text","text":"Get a property value formatted as a human-readable string."},{"text":" ","type":"text"},{"text":"Useful for displaying in a user interface or outputting to console for debugging.","type":"text"},{"type":"text","text":" "},{"text":"Not recommended for production code. Instead, use strongly-typed properties on this object.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"propertyStringValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO","text":"AnyMIDIIOObject"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO15AnyMIDIIOObjectO8PropertyO","text":"Property"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]}}}