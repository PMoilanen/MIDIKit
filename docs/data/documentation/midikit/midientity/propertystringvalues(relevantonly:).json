{"metadata":{"extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"kind":"text","text":"("},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")]"}],"title":"propertyStringValues(relevantOnly:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}]},"abstract":[{"type":"text","text":"Get all properties as a key\/value pair array, formatted as human-readable strings."},{"type":"text","text":" "},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"type":"text","text":" "},{"type":"text","text":"The return value is an array of tuples (not a dictionary) to maintain ordering."},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/propertyStringValues(relevantOnly:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"relevantOnly"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true) -> [(key"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")]","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midientity\/propertystringvalues(relevantonly:)"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"title":"MIDIEntity","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midientity","role":"symbol","navigatorTitle":[{"text":"MIDIEntity","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIEntity","kind":"identifier"}],"abstract":[{"text":"A MIDI device, wrapping a Core MIDI ","type":"text"},{"type":"codeVoice","code":"MIDIEntityRef"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/propertyStringValues(relevantOnly:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/propertyStringValues(relevantOnly:)","abstract":[{"type":"text","text":"Get all properties as a key\/value pair array, formatted as human-readable strings."},{"text":" ","type":"text"},{"text":"Useful for displaying in a user interface or outputting to console for debugging.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The return value is an array of tuples (not a dictionary) to maintain ordering."},{"type":"text","text":" "},{"text":"Not recommended for production code. Instead, use strongly-typed properties on this object.","type":"text"}],"title":"propertyStringValues(relevantOnly:)","url":"\/documentation\/midikit\/midientity\/propertystringvalues(relevantonly:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> [(key"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", value","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")]","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"title":"MIDIIOObject Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/midientity\/midiioobject-implementations","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","abstract":[]},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"}}}