{"kind":"symbol","metadata":{"externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE24getDriverDeviceEditorApp10Foundation3URLVSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"extendedModule":"MIDIKitIO","title":"getDriverDeviceEditorApp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDriverDeviceEditorApp"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","platforms":[],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MIDIIOObject.getDriverDeviceEditorApp()"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midientity\/getdriverdeviceeditorapp()"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDriverDeviceEditorApp"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getDriverDeviceEditorApp()","interfaceLanguage":"swift"},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","title":"Working with Devices","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"url":"\/documentation\/midikit\/midientity\/midiioobject-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","title":"MIDIIOObject Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/getDriverDeviceEditorApp()":{"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getDriverDeviceEditorApp()","deprecated":true,"type":"topic","abstract":[],"title":"getDriverDeviceEditorApp()","url":"\/documentation\/midikit\/midientity\/getdriverdeviceeditorapp()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getDriverDeviceEditorApp","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":"?","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIEntityRef","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"kind":"symbol","title":"MIDIEntity","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"url":"\/documentation\/midikit\/midientity"}}}