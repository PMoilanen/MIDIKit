{"kind":"symbol","identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/receiveChannels","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/midikit\/midientity\/receivechannels"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receiveChannels","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"You can use this property in the following scenarios:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Drivers can set this property on their entities and endpoints."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Studio setup editors can allow the user to set this property on external endpoints.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Virtual destinations can set this property on their endpoints.","type":"text"}]}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Bitmap of channels on which the object receives messages."},{"type":"text","text":" "},{"type":"text","text":"("},{"code":"kMIDIPropertyReceiveChannels","type":"codeVoice"},{"text":")","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"metadata":{"externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE15receiveChannelss5Int32Vvp::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receiveChannels"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"role":"symbol","extendedModule":"MIDIKitIO","symbolKind":"property","title":"receiveChannels","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"roleHeading":"Instance Property"},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIEntityRef","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"kind":"symbol","title":"MIDIEntity","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"url":"\/documentation\/midikit\/midientity"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/receiveChannels":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receiveChannels"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Bitmap of channels on which the object receives messages."},{"type":"text","text":" "},{"text":"(","type":"text"},{"type":"codeVoice","code":"kMIDIPropertyReceiveChannels"},{"text":")","type":"text"}],"title":"receiveChannels","url":"\/documentation\/midikit\/midientity\/receivechannels","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/receiveChannels"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"url":"\/documentation\/midikit\/midientity\/midiioobject-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","title":"MIDIIOObject Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","title":"Working with Devices","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"kind":"article"}}}