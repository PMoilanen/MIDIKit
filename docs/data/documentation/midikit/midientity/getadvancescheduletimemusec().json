{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAdvanceScheduleTimeMuSec"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the driver that owns the object may set this property."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this property value is nonzero, clients should treat the value as a minimum. For devices with a nonzero advance schedule time, drivers receive outgoing messages to the device at the time the client sends them using "},{"type":"codeVoice","code":"MIDISend(_:_:_:)"},{"type":"text","text":". The driver is responsible for scheduling events to play at the right times, according to their timestamps."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also set this property on any virtual destinations you create. When clients send messages to a virtual destination with an advance schedule time of 0, the destination receives the messages at the scheduled delivery time. If a virtual destination has a nonzero advance schedule time, it receives timestamped messages as soon as theyâ€™re sent, and must do its own internal scheduling of events it receives."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIOError"}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/midikit\/midientity\/getadvancescheduletimemusec()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getAdvanceScheduleTimeMuSec()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Get the recommended number of microseconds in advance that clients should schedule output."},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"kMIDIPropertyAdvanceScheduleTimeMuSec"},{"type":"text","text":")"}],"kind":"symbol","metadata":{"role":"symbol","title":"getAdvanceScheduleTimeMuSec()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAdvanceScheduleTimeMuSec"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE27getAdvanceScheduleTimeMuSecSSSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","extendedModule":"MIDIKitIO","modules":[{"name":"MIDIKit"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"role":"collectionGroup","title":"Working with Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"role":"symbol","title":"MIDIEntity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIEntityRef"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"url":"\/documentation\/midikit\/midientity"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/getAdvanceScheduleTimeMuSec()":{"role":"symbol","title":"getAdvanceScheduleTimeMuSec()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAdvanceScheduleTimeMuSec"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Get the recommended number of microseconds in advance that clients should schedule output."},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"kMIDIPropertyAdvanceScheduleTimeMuSec"},{"type":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getAdvanceScheduleTimeMuSec()","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midientity\/getadvancescheduletimemusec()"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"role":"symbol","title":"MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"role":"collectionGroup","title":"MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIIOError":{"role":"symbol","title":"MIDIIOError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIIOError"}],"abstract":[{"type":"text","text":"Error type returned by MIDIKit I\/O operations."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIOError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIIOError"}],"url":"\/documentation\/midikit\/midiioerror"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"role":"collectionGroup","title":"MIDIIOObject Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/midientity\/midiioobject-implementations"}}}