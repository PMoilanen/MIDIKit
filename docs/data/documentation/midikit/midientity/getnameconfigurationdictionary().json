{"metadata":{"title":"getNameConfigurationDictionary()","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getNameConfigurationDictionary","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSDictionary","text":"NSDictionary"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","unavailable":false,"beta":false},{"introducedAt":"10.15","name":"macOS","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"Mac Catalyst"}],"role":"symbol","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE30getNameConfigurationDictionarySo12NSDictionaryCSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIEntityV","extendedModule":"MIDIKitIO","symbolKind":"method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midientity\/getnameconfigurationdictionary()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"MIDIIOObject.getNameConfigurationDictionary()"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getNameConfigurationDictionary()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getNameConfigurationDictionary","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSDictionary","text":"NSDictionary"},{"text":"?","kind":"text"}]}]}],"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/getNameConfigurationDictionary()":{"kind":"symbol","deprecated":true,"abstract":[],"url":"\/documentation\/midikit\/midientity\/getnameconfigurationdictionary()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getNameConfigurationDictionary","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSDictionary","kind":"typeIdentifier","text":"NSDictionary"},{"kind":"text","text":"?"}],"title":"getNameConfigurationDictionary()","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/getNameConfigurationDictionary()","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"type":"topic","title":"MIDIEntity","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEntity"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIEntityRef","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/midientity","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity/MIDIIOObject-Implementations":{"type":"topic","title":"MIDIIOObject Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity\/MIDIIOObject-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/midikit\/midientity\/midiioobject-implementations","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","title":"Working with Devices","role":"collectionGroup","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","kind":"article"}}}