{"kind":"article","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"reference","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"],"title":"Manager"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"],"title":"Devices & Entities"},{"title":"Endpoints","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints"]},{"title":"Events","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Sending-MIDI-Events","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Receiving-MIDI-Events"]},{"title":"Extending Connectivity","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Bluetooth","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Network","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-USB"]},{"title":"Additional Guides","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Send-and-Receive-on-iOS-in-Background"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals"],"title":"Internals"}],"variants":[{"paths":["\/documentation\/midikit\/midikitio"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"midikit-banner.png"}]},{"inlineContent":[{"identifier":"midikitio-diagram.svg","type":"image"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MIDIKitIO adds an I\/O layer on top of MIDIKitCoreâ€™s MIDI events, providing the essentials to send and receive MIDI events on Apple platforms."}]},{"inlineContent":[{"type":"text","text":"To add additional functionality, import extension modules or import the MIDIKit umbrella library which imports all of MIDIKit events, I\/O, and extensions."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"metadata":{"title":"MIDIKitIO","modules":[{"name":"MIDIKit"}],"role":"collectionGroup"},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitControlSurfaces"],"title":"Modules"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync":{"title":"MIDIKitSync","abstract":[{"text":"MIDI synchronization protocol abstractions (MTC, etc.) for MIDIKit.","type":"text"}],"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","type":"topic","url":"\/documentation\/midikit\/midikitsync","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"observableEndpoints","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"role":"symbol","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","title":"observableEndpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Internals":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/midikit\/midikitio-internals","kind":"article","title":"Internals"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"kind":"article","abstract":[],"url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","role":"collectionGroup","title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","kind":"article","abstract":[{"text":"Standard MIDI File extension for MIDIKit.","type":"text"}],"title":"MIDIKitSMF","url":"\/documentation\/midikit\/midikitsmf","role":"collectionGroup","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-USB":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-USB","role":"article","type":"topic","abstract":[{"type":"text","text":"Information about MIDI over physical USB connections."}],"kind":"article","title":"MIDI Over USB","url":"\/documentation\/midikit\/midikitio-midi-over-usb"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","title":"Receiving Notifications","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"url":"\/documentation\/midikit\/midimanager-receiving-notifications"},"doc://MIDIKit/documentation/MIDIKit/Send-and-Receive-on-iOS-in-Background":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Send-and-Receive-on-iOS-in-Background","abstract":[{"text":"Keeping your iOS app alive while it is in the background to allow MIDI messages to be sent and received.","type":"text"}],"url":"\/documentation\/midikit\/send-and-receive-on-ios-in-background","title":"Send and Receive on iOS While Your App is Backgrounded"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"kind":"article","url":"\/documentation\/midikit\/midikitcore","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"title":"MIDIKitCore"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"role":"symbol","abstract":[{"text":"MIDI devices in the system.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","kind":"symbol","title":"observableDevices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitControlSurfaces":{"role":"collectionGroup","abstract":[{"type":"text","text":"MIDI control surface protocol abstractions (HUI, etc.) for MIDIKit."}],"kind":"article","url":"\/documentation\/midikit\/midikitcontrolsurfaces","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitControlSurfaces","title":"MIDIKitControlSurfaces"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableMIDIManager"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"type":"text","text":"Two new properties are available: "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager","title":"ObservableMIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-Network":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Network","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-midi-over-network","title":"MIDI Over Network","abstract":[{"type":"text","text":"Set up Network MIDI connectivity."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"kind":"article","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","title":"Creating Ports","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-Bluetooth":{"type":"topic","abstract":[{"text":"Set up Bluetooth MIDI connectivity in an iOS app.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Bluetooth","url":"\/documentation\/midikit\/midikitio-midi-over-bluetooth","title":"MIDI Over Bluetooth","kind":"article","role":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Sending-MIDI-Events":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Sending-MIDI-Events","title":"Sending MIDI Events","type":"topic","kind":"article","url":"\/documentation\/midikit\/midikitio-sending-midi-events","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"kind":"article","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"url":"\/documentation\/midikit\/midimanager-creating-connections","role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","type":"topic"},"midikit-banner.png":{"alt":"MIDIKit","type":"image","identifier":"midikit-banner.png","variants":[{"traits":["1x","light"],"url":"\/images\/midikit-banner.png"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","title":"Working With Endpoints","role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"kind":"article","abstract":[{"type":"text","text":"Certain objects and properties are observable."}],"url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","role":"article","title":"Combine and SwiftUI Features","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitUI":{"title":"MIDIKitUI","abstract":[{"type":"text","text":"Reusable user interface components for convenience."}],"url":"\/documentation\/midikit\/midikitui","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","title":"Working with Devices","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Receiving-MIDI-Events":{"abstract":[],"role":"collectionGroup","kind":"article","title":"Receiving MIDI Events","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Receiving-MIDI-Events","url":"\/documentation\/midikit\/midikitio-receiving-midi-events"},"midikitio-diagram.svg":{"identifier":"midikitio-diagram.svg","type":"image","alt":"Layer Diagram","variants":[{"traits":["1x","light"],"svgID":"t","url":"\/images\/midikitio-diagram.svg"}]}}}