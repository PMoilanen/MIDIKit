{"seeAlsoSections":[{"generated":true,"title":"Modules","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitControlSurfaces"]}],"variants":[{"paths":["\/documentation\/midikit\/midikitio"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"MIDIKit"}],"role":"collectionGroup","title":"MIDIKitIO"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit"]]},"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"],"title":"Manager"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"],"title":"Devices & Entities"},{"title":"Endpoints","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints"]},{"title":"Events","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Sending-MIDI-Events","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Receiving-MIDI-Events"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Bluetooth","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Network","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-USB"],"title":"Extending Connectivity"},{"title":"Additional Guides","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Send-and-Receive-on-iOS-in-Background"]},{"title":"Internals","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals"]}],"sections":[],"abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"identifier":"midikit-banner.png","type":"image"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"identifier":"midikitio-diagram.svg","type":"image"}]},{"inlineContent":[{"text":"MIDIKitIO adds an I\/O layer on top of MIDIKitCoreâ€™s MIDI events, providing the essentials to send and receive MIDI events on Apple platforms.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"To add additional functionality, import extension modules or import the MIDIKit umbrella library which imports all of MIDIKit events, I\/O, and extensions.","type":"text"}]}],"kind":"content"}],"kind":"article","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","role":"collectionGroup","kind":"article","title":"MIDIKitCore","type":"topic","url":"\/documentation\/midikit\/midikitcore","abstract":[{"text":"Essential MIDI types used by all modules in MIDIKit.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","type":"topic","title":"Removing Ports and Connections","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-Bluetooth":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"Set up Bluetooth MIDI connectivity in an iOS app."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Bluetooth","url":"\/documentation\/midikit\/midikitio-midi-over-bluetooth","title":"MIDI Over Bluetooth"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitUI":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","abstract":[{"text":"Reusable user interface components for convenience.","type":"text"}],"title":"MIDIKitUI","url":"\/documentation\/midikit\/midikitui","type":"topic","kind":"article","role":"collectionGroup"},"midikit-banner.png":{"alt":"MIDIKit","type":"image","identifier":"midikit-banner.png","variants":[{"url":"\/images\/midikit-banner.png","traits":["1x","light"]}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableMIDIManager"}],"abstract":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"text":"Two new properties are available: ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints"},{"type":"text","text":"."}],"title":"ObservableMIDIManager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","navigatorTitle":[{"text":"ObservableMIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Internals":{"abstract":[],"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/midikit\/midikitio-internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals","title":"Internals"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"url":"\/documentation\/midikit\/midikitio-endpoints","title":"Working With Endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableEndpoints"},{"kind":"text","text":": "},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","type":"topic","title":"observableEndpoints","abstract":[{"text":"MIDI input and output endpoints in the system.","type":"text"},{"text":" ","type":"text"},{"text":"This is an observable implementation of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"role":"article","title":"Combine and SwiftUI Features","url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","kind":"article","type":"topic","abstract":[{"text":"Certain objects and properties are observable.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"kind":"symbol","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","title":"MIDIManager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","kind":"article","title":"Creating Ports","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"role":"collectionGroup","url":"\/documentation\/midikit\/midimanager-receiving-notifications","title":"Receiving Notifications","kind":"article","type":"topic","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Receiving-MIDI-Events":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Receiving-MIDI-Events","title":"Receiving MIDI Events","url":"\/documentation\/midikit\/midikitio-receiving-midi-events","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"title":"Working with Devices","kind":"article","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikit\/midikitio-devices","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","role":"collectionGroup","title":"MIDIKitSMF","kind":"article","type":"topic","abstract":[{"type":"text","text":"Standard MIDI File extension for MIDIKit."}],"url":"\/documentation\/midikit\/midikitsmf"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync":{"title":"MIDIKitSync","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","url":"\/documentation\/midikit\/midikitsync","role":"collectionGroup","abstract":[{"type":"text","text":"MIDI synchronization protocol abstractions (MTC, etc.) for MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitControlSurfaces":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitControlSurfaces","url":"\/documentation\/midikit\/midikitcontrolsurfaces","abstract":[{"type":"text","text":"MIDI control surface protocol abstractions (HUI, etc.) for MIDIKit."}],"role":"collectionGroup","type":"topic","kind":"article","title":"MIDIKitControlSurfaces"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-USB":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"Information about MIDI over physical USB connections."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-USB","url":"\/documentation\/midikit\/midikitio-midi-over-usb","title":"MIDI Over USB"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Sending-MIDI-Events":{"url":"\/documentation\/midikit\/midikitio-sending-midi-events","abstract":[],"type":"topic","title":"Sending MIDI Events","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Sending-MIDI-Events","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/Send-and-Receive-on-iOS-in-Background":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Send-and-Receive-on-iOS-in-Background","type":"topic","title":"Send and Receive on iOS While Your App is Backgrounded","url":"\/documentation\/midikit\/send-and-receive-on-ios-in-background","abstract":[{"type":"text","text":"Keeping your iOS app alive while it is in the background to allow MIDI messages to be sent and received."}],"kind":"article","role":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-MIDI-Over-Network":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-MIDI-Over-Network","title":"MIDI Over Network","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Set up Network MIDI connectivity."}],"url":"\/documentation\/midikit\/midikitio-midi-over-network"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"abstract":[{"text":"MIDI devices in the system.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","kind":"typeIdentifier"}],"title":"observableDevices","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices"},"midikitio-diagram.svg":{"type":"image","identifier":"midikitio-diagram.svg","alt":"Layer Diagram","variants":[{"url":"\/images\/midikitio-diagram.svg","traits":["1x","light"],"svgID":"t"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/midikit\/midimanager-creating-connections","abstract":[{"text":"Managed connections are smart MIDI connections owned and maintained by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system.","type":"text"}],"title":"Creating Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections"}}}