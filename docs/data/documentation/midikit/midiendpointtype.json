{"seeAlsoSections":[{"title":"Supporting Types","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIConnectionMode"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEndpointType"}],"title":"MIDIEndpointType","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:9MIDIKitIO16MIDIEndpointTypeO","modules":[{"name":"MIDIKit"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIEndpointType"}]},"abstract":[{"type":"text","text":"The specialized type of a MIDI endpoint (input\/output)."}],"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/MIDIKit\/s12CaseIterableP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/input","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/output"]},{"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/Equatable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/midikit\/midiendpointtype"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEndpointType"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointType/input":{"role":"symbol","title":"MIDIEndpointType.input","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"input"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/input","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midiendpointtype\/input"},"doc://MIDIKit/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/MIDIKit\/SQ"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointType/output":{"role":"symbol","title":"MIDIEndpointType.output","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/output","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midiendpointtype\/output"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"role":"symbol","title":"MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointType/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/midikit\/midiendpointtype\/equatable-implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointType":{"role":"symbol","title":"MIDIEndpointType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEndpointType"}],"abstract":[{"type":"text","text":"The specialized type of a MIDI endpoint (input\/output)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEndpointType"}],"url":"\/documentation\/midikit\/midiendpointtype"},"doc://MIDIKit/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/MIDIKit\/SH"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"role":"collectionGroup","title":"MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIConnectionMode":{"role":"symbol","title":"MIDIConnectionMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIConnectionMode"}],"abstract":[{"type":"text","text":"Behavior of a managed MIDI connection."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIConnectionMode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIConnectionMode"}],"url":"\/documentation\/midikit\/midiconnectionmode"},"doc://MIDIKit/s12CaseIterableP":{"type":"unresolvable","title":"Swift.CaseIterable","identifier":"doc:\/\/MIDIKit\/s12CaseIterableP"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Internals":{"role":"collectionGroup","title":"Internals","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-internals"}}}