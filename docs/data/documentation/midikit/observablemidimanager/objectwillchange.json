{"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ObservableObject.objectWillChange"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/objectWillChange"},"variants":[{"paths":["\/documentation\/midikit\/observablemidimanager\/objectwillchange"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"objectWillChange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ObservableObjectPublisher","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"metadata":{"extendedModule":"Combine","title":"objectWillChange","role":"symbol","platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"iOS","beta":false},{"introducedAt":"10.15","beta":false,"name":"macOS","unavailable":false,"deprecated":false},{"beta":false,"name":"tvOS","unavailable":false,"deprecated":false,"introducedAt":"13.0"},{"unavailable":false,"deprecated":false,"name":"watchOS","introducedAt":"6.0","beta":false}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"objectWillChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ObservableObjectPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ObjectWillChangePublisher","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ObservableObjectPublisher"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Property","externalID":"s:7Combine16ObservableObjectPA2A0bC9PublisherC0c10WillChangeD0RtzrlE06objecteF0AEvp::SYNTHESIZED::c:@M@MIDIKitIO@objc(cs)ObservableMIDIManager","symbolKind":"property","modules":[{"name":"MIDIKit","relatedModules":["Combine"]}]},"references":{"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"title":"ObservableMIDIManager","url":"\/documentation\/midikit\/observablemidimanager","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableMIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"type":"topic","abstract":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"reference","isActive":true},{"text":" subclass that is observable in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Two new properties are available: "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","role":"symbol","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints","isActive":true},{"text":".","type":"text"}],"title":"observableEndpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observableEndpoints","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","kind":"typeIdentifier"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"title":"observableDevices","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","abstract":[{"type":"text","text":"MIDI devices in the system."},{"type":"text","text":" "},{"text":"This is an observable implementation of ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true},{"type":"text","text":"."}],"role":"symbol","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/objectWillChange":{"kind":"symbol","title":"objectWillChange","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"ObjectWillChangePublisher","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ObservableObjectPublisher","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"objectWillChange","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Combine25ObservableObjectPublisherC","text":"ObservableObjectPublisher","kind":"typeIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/objectWillChange","type":"topic","url":"\/documentation\/midikit\/observablemidimanager\/objectwillchange"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/ObservableObject-Implementations":{"role":"collectionGroup","type":"topic","title":"ObservableObject Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations","url":"\/documentation\/midikit\/observablemidimanager\/observableobject-implementations"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"}}}