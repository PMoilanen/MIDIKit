{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"]}],"metadata":{"externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","modules":[{"name":"MIDIKit"}],"role":"symbol","symbolKind":"case","roleHeading":"Case"},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI","type":"text"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"MIDIIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This is useful if you need more control over where you want to persist this information in"},{"type":"text","text":" "},{"type":"text","text":"the system."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new","type":"text"},{"type":"text","text":" "},{"type":"text","text":"random ID will be generated until there are no collisions."},{"type":"text","text":" "},{"text":"The ID will then be passed into the ","type":"text"},{"code":"storeHandler","type":"codeVoice"},{"text":" closure in order to store the updated ID.","type":"text"}]}],"kind":"content"}],"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"topic","abstract":[{"text":"Managed with UserDefaults backing (recommended).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in"},{"type":"text","text":" "},{"type":"codeVoice","code":"UserDefaults"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"standard"},{"text":" suite is used by default unless specified.","type":"text"}],"kind":"symbol","title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","url":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"userDefaultsManaged"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"suite"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","abstract":[{"text":"Managed with custom storage backing (recommended only if ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"type":"topic","kind":"symbol","title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"managedStorage","kind":"identifier"},{"kind":"text","text":"("},{"text":"readHandler","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"url":"\/documentation\/midikit\/midiidentifier","kind":"symbol","abstract":[{"text":"MIDIKit analogue for Core MIDI’s ","type":"text"},{"type":"codeVoice","code":"MIDIUniqueID"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Most commonly used to uniquely identify MIDI endpoints in the system.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","role":"symbol","title":"MIDIIdentifier","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIIdentifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"title":"Working With Endpoints","role":"collectionGroup","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}],"url":"\/documentation\/midikit\/midikitio-endpoints","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"url":"\/documentation\/midikit\/midiidentifierpersistence","navigatorTitle":[{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","title":"MIDIIdentifierPersistence","kind":"symbol","abstract":[{"type":"text","text":"Defines persistence behavior of a MIDI unique ID in the system."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIIdentifierPersistence","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"}}}