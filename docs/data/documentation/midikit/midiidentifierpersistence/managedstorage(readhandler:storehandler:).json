{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended)."},{"type":"text","text":" "},{"type":"text","text":"Supply handlers to facilitate persistently reading and storing the MIDI endpoint’s unique"},{"type":"text","text":" "},{"text":"ID.","type":"text"}],"metadata":{"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"managedStorage","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"readHandler"},{"kind":"text","text":": () -> "},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"modules":[{"name":"MIDIKit"}],"roleHeading":"Case","symbolKind":"case","externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyc_yAGctcACmF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"storeHandler"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is useful if you need more control over where you want to persist this information in"},{"text":" ","type":"text"},{"text":"the system.","type":"text"}]},{"inlineContent":[{"type":"text","text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new"},{"type":"text","text":" "},{"text":"random ID will be generated until there are no collisions.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The ID will then be passed into the "},{"code":"storeHandler","type":"codeVoice"},{"type":"text","text":" closure in order to store the updated ID."}],"type":"paragraph"}]}],"sections":[],"variants":[{"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"url":"\/documentation\/midikit\/midiidentifier","navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIIdentifier"}],"type":"topic","kind":"symbol","title":"MIDIIdentifier","abstract":[{"text":"MIDIKit analogue for Core MIDI’s ","type":"text"},{"type":"codeVoice","code":"MIDIUniqueID"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Most commonly used to uniquely identify MIDI endpoints in the system."}]},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"type":"topic","title":"MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"abstract":[{"text":"Managed with custom storage backing (recommended).","type":"text"},{"text":" ","type":"text"},{"text":"Supply handlers to facilitate persistently reading and storing the MIDI endpoint’s unique","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ID."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","title":"MIDIKitIO","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","title":"Working With Endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","type":"topic","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"abstract":[{"text":"Defines persistence behavior of a MIDI unique ID in the system.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","role":"symbol","url":"\/documentation\/midikit\/midiidentifierpersistence","title":"MIDIIdentifierPersistence","navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifierPersistence"}]}}}