{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","kind":"typeIdentifier","text":"MIDIIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"storeHandler"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier","text":"MIDIIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is useful if you need more control over where you want to persist this information in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the system."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new"},{"type":"text","text":" "},{"text":"random ID will be generated until there are no collisions.","type":"text"},{"text":" ","type":"text"},{"text":"The ID will then be passed into the ","type":"text"},{"type":"codeVoice","code":"storeHandler"},{"type":"text","text":" closure in order to store the updated ID."}]}]}],"variants":[{"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"metadata":{"externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF","roleHeading":"Case","symbolKind":"case","role":"symbol","modules":[{"name":"MIDIKit"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)"},"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","type":"topic","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)"},{"type":"text","text":" "},{"text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI","type":"text"},{"type":"text","text":" "},{"text":"endpoint’s unique ID.","type":"text"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"storeHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIIdentifierPersistence"}],"kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/midiidentifierpersistence","title":"MIDIIdentifierPersistence","abstract":[{"text":"Defines persistence behavior of a MIDI unique ID in the system.","type":"text"}],"navigatorTitle":[{"text":"MIDIIdentifierPersistence","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"MIDIIdentifier","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/midiidentifier","title":"MIDIIdentifier","abstract":[{"type":"text","text":"MIDIKit analogue for Core MIDI’s "},{"code":"MIDIUniqueID","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Most commonly used to uniquely identify MIDI endpoints in the system.","type":"text"}],"navigatorTitle":[{"text":"MIDIIdentifier","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","title":"Working With Endpoints","role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"userDefaultsManaged","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"suite"},{"text":": ","kind":"text"},{"text":"UserDefaults","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"text":")","kind":"text"}],"url":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","abstract":[{"text":"Managed with UserDefaults backing (recommended).","type":"text"},{"text":" ","type":"text"},{"text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":". The "},{"type":"codeVoice","code":"standard"},{"text":" suite is used by default unless specified.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","role":"symbol","type":"topic"}}}