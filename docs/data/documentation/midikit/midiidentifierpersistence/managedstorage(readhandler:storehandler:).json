{"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"storeHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This is useful if you need more control over where you want to persist this information in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the system."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new"},{"type":"text","text":" "},{"type":"text","text":"random ID will be generated until there are no collisions."},{"text":" ","type":"text"},{"text":"The ID will then be passed into the ","type":"text"},{"code":"storeHandler","type":"codeVoice"},{"type":"text","text":" closure in order to store the updated ID."}]}]}],"variants":[{"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF","modules":[{"name":"MIDIKit"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","roleHeading":"Case","symbolKind":"case","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","kind":"symbol","title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","abstract":[{"text":"Managed with UserDefaults backing (recommended).","type":"text"},{"type":"text","text":" "},{"text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":". The "},{"code":"standard","type":"codeVoice"},{"type":"text","text":" suite is used by default unless specified."}],"type":"topic","url":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"userDefaultsManaged","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"suite","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier","text":"UserDefaults"},{"text":")","kind":"text"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifierPersistence"}],"kind":"symbol","title":"MIDIIdentifierPersistence","abstract":[{"type":"text","text":"Defines persistence behavior of a MIDI unique ID in the system."}],"type":"topic","url":"\/documentation\/midikit\/midiidentifierpersistence","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"role":"collectionGroup","title":"Working With Endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}],"url":"\/documentation\/midikit\/midikitio-endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"role":"symbol","url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"MIDIIdentifier","kind":"identifier"}],"role":"symbol","url":"\/documentation\/midikit\/midiidentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","type":"topic","abstract":[{"type":"text","text":"MIDIKit analogue for Core MIDI’s "},{"code":"MIDIUniqueID","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Most commonly used to uniquely identify MIDI endpoints in the system."}],"navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifier"}],"kind":"symbol","title":"MIDIIdentifier"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]}}}