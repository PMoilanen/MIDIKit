{"metadata":{"externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF","symbolKind":"case","role":"symbol","roleHeading":"Case","title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","modules":[{"name":"MIDIKit"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"managedStorage"},{"kind":"text","text":"("},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"managedStorage","kind":"identifier"},{"kind":"text","text":"("},{"text":"readHandler","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"storeHandler"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","text":"MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is useful if you need more control over where you want to persist this information in"},{"text":" ","type":"text"},{"text":"the system.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new"},{"type":"text","text":" "},{"type":"text","text":"random ID will be generated until there are no collisions."},{"type":"text","text":" "},{"text":"The ID will then be passed into the ","type":"text"},{"type":"codeVoice","code":"storeHandler"},{"type":"text","text":" closure in order to store the updated ID."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"url":"\/documentation\/midikit\/midiidentifierpersistence","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","navigatorTitle":[{"kind":"identifier","text":"MIDIIdentifierPersistence"}],"title":"MIDIIdentifierPersistence","abstract":[{"text":"Defines persistence behavior of a MIDI unique ID in the system.","type":"text"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier","text":"MIDIIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Managed with custom storage backing (recommended only if ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI","type":"text"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"navigatorTitle":[{"text":"MIDIIdentifier","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midiidentifier","role":"symbol","title":"MIDIIdentifier","abstract":[{"type":"text","text":"MIDIKit analogue for Core MIDI’s "},{"type":"codeVoice","code":"MIDIUniqueID"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Most commonly used to uniquely identify MIDI endpoints in the system."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIIdentifier","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"url":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"topic","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"kind":"symbol","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","title":"MIDIManager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"userDefaultsManaged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"suite","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","url":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","abstract":[{"type":"text","text":"Managed with UserDefaults backing (recommended)."},{"type":"text","text":" "},{"type":"text","text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in"},{"type":"text","text":" "},{"code":"UserDefaults","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"standard"},{"type":"text","text":" suite is used by default unless specified."}],"kind":"symbol","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"url":"\/documentation\/midikit\/midikitio-endpoints","title":"Working With Endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","role":"collectionGroup","kind":"article"}}}