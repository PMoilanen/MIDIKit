{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)"},"sections":[],"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI","type":"text"},{"type":"text","text":" "},{"type":"text","text":"endpoint’s unique ID."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is useful if you need more control over where you want to persist this information in"},{"type":"text","text":" "},{"type":"text","text":"the system."}]},{"inlineContent":[{"text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new","type":"text"},{"type":"text","text":" "},{"text":"random ID will be generated until there are no collisions.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The ID will then be passed into the "},{"code":"storeHandler","type":"codeVoice"},{"type":"text","text":" closure in order to store the updated ID."}],"type":"paragraph"}]}],"metadata":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"managedStorage","kind":"identifier"},{"kind":"text","text":"("},{"text":"readHandler","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"storeHandler"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"MIDIKit"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"type":"topic","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"url":"\/documentation\/midikit\/midikitio-endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"kind":"article","type":"topic","title":"Working With Endpoints","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence":{"title":"MIDIIdentifierPersistence","url":"\/documentation\/midikit\/midiidentifierpersistence","abstract":[{"type":"text","text":"Defines persistence behavior of a MIDI unique ID in the system."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"navigatorTitle":[{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifier":{"kind":"symbol","navigatorTitle":[{"text":"MIDIIdentifier","kind":"identifier"}],"url":"\/documentation\/midikit\/midiidentifier","title":"MIDIIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifier","abstract":[{"text":"MIDIKit analogue for Core MIDI’s ","type":"text"},{"code":"MIDIUniqueID","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Most commonly used to uniquely identify MIDI endpoints in the system.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"MIDIIdentifier","kind":"identifier"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"title":"MIDIManager","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","url":"\/documentation\/midikit\/midimanager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"type":"text","text":"endpoint’s unique ID."}],"url":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier","text":"MIDIIdentifier"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"userDefaultsManaged"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"suite","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","role":"symbol","url":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","abstract":[{"text":"Managed with UserDefaults backing (recommended).","type":"text"},{"text":" ","type":"text"},{"text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UserDefaults"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"standard"},{"type":"text","text":" suite is used by default unless specified."}],"kind":"symbol","title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)"}}}