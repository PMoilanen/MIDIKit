{"metadata":{"modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"externalID":"s:9MIDIKitIO19MIDIDevicesProtocolPAAE6inputsSDyAA10MIDIDeviceVSayAA17MIDIInputEndpointVGGvp::SYNTHESIZED::s:9MIDIKitIO11MIDIDevicesV","extendedModule":"MIDIKitIO","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"inputs","kind":"identifier"},{"text":": [","kind":"text"},{"text":"MIDIDevice","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO10MIDIDeviceV"},{"text":" : [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO17MIDIInputEndpointV","text":"MIDIInputEndpoint"},{"kind":"text","text":"]]"}],"title":"inputs"},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices\/inputs","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices\/MIDIDevicesProtocol-Implementations"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Returns a dictionary keyed by device with value of an array containing all the input"},{"type":"text","text":" "},{"type":"text","text":"endpoints for the device. (Convenience)"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevices\/inputs"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inputs","kind":"identifier"},{"kind":"text","text":": ["},{"text":"MIDIDevice","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO10MIDIDeviceV","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice"},{"text":" : [","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO17MIDIInputEndpointV","kind":"typeIdentifier","text":"MIDIInputEndpoint","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint"},{"kind":"text","text":"]] { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"text":" ","type":"text"},{"text":"and output endpoints.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevices/MIDIDevicesProtocol-Implementations":{"role":"collectionGroup","type":"topic","title":"MIDIDevicesProtocol Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices\/MIDIDevicesProtocol-Implementations","url":"\/documentation\/midikit\/mididevices\/mididevicesprotocol-implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Internals":{"abstract":[],"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/midikit\/midikitio-internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Internals","title":"Internals"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevices":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIDevices"}],"type":"topic","title":"MIDIDevices","abstract":[{"text":"Manages system MIDI devices information cache.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIDevices","kind":"identifier"}],"url":"\/documentation\/midikit\/mididevices"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"title":"MIDIDevice","role":"symbol","type":"topic","url":"\/documentation\/midikit\/mididevice","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevices/inputs":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevices\/inputs","type":"topic","title":"inputs","url":"\/documentation\/midikit\/mididevices\/inputs","abstract":[{"type":"text","text":"Returns a dictionary keyed by device with value of an array containing all the input"},{"text":" ","type":"text"},{"text":"endpoints for the device. (Convenience)","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inputs"},{"text":": [","kind":"text"},{"text":"MIDIDevice","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO10MIDIDeviceV"},{"kind":"text","text":" : ["},{"kind":"typeIdentifier","text":"MIDIInputEndpoint","preciseIdentifier":"s:9MIDIKitIO17MIDIInputEndpointV"},{"text":"]]","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"url":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"topic","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint":{"url":"\/documentation\/midikit\/midiinputendpoint","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIInputEndpoint","kind":"identifier"}],"title":"MIDIInputEndpoint","type":"topic","abstract":[{"type":"text","text":"A MIDI input endpoint in the system, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIEndpointRef"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","role":"symbol","navigatorTitle":[{"text":"MIDIInputEndpoint","kind":"identifier"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"kind":"symbol","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","title":"MIDIManager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"}}}