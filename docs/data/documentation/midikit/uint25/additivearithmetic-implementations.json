{"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/AdditiveArithmetic-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"MIDIKit"}],"title":"AdditiveArithmetic Implementations","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25"]]},"topicSections":[{"generated":true,"title":"Operators","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/+(_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/+=(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/-=(_:_:)"]},{"title":"Type Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/zero"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/uint25\/additivearithmetic-implementations"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/UInt25/+=(_:_:)":{"title":"+=(_:_:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/+=(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/uint25\/+=(_:_:)","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"role":"collectionGroup","title":"MIDIKit Value Types","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/UInt25/-=(_:_:)":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/midikit\/uint25\/-=(_:_:)","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/-=(_:_:)","title":"-=(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/UInt25/+(_:)":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol","abstract":[],"title":"+(_:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/+(_:)","url":"\/documentation\/midikit\/uint25\/+(_:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"role":"collectionGroup","title":"MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt25","kind":"identifier"}],"kind":"symbol","title":"UInt25","type":"topic","abstract":[{"text":"A 25-bit unsigned integer value type used in ","type":"text"},{"type":"codeVoice","code":"MIDIKit"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"UInt25"}],"url":"\/documentation\/midikit\/uint25","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25"},"doc://MIDIKit/documentation/MIDIKit/UInt25/zero":{"kind":"symbol","title":"zero","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/zero","abstract":[],"url":"\/documentation\/midikit\/uint25\/zero","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"zero","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}