{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/init(integerLiteral:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral.init(integerLiteral:)"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"integerLiteral"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"kind":"text","text":")"}],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/uint25\/init(integerliteral:)"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/ExpressibleByIntegerLiteral-Implementations"]]},"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"integerLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(integerLiteral:)","externalID":"s:11MIDIKitCore19MIDIUnsignedIntegerPAAE14integerLiteralx0dF4TypeQz_tcfc::SYNTHESIZED::s:11MIDIKitCore6UInt25V","modules":[{"relatedModules":["MIDIKitCore"],"name":"MIDIKit"}],"extendedModule":"MIDIKitCore","role":"symbol","roleHeading":"Initializer"},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"role":"collectionGroup","title":"MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt25","kind":"identifier"}],"kind":"symbol","title":"UInt25","type":"topic","abstract":[{"text":"A 25-bit unsigned integer value type used in ","type":"text"},{"type":"codeVoice","code":"MIDIKit"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"UInt25"}],"url":"\/documentation\/midikit\/uint25","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25"},"doc://MIDIKit/documentation/MIDIKit/UInt25/ExpressibleByIntegerLiteral-Implementations":{"title":"ExpressibleByIntegerLiteral Implementations","url":"\/documentation\/midikit\/uint25\/expressiblebyintegerliteral-implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/ExpressibleByIntegerLiteral-Implementations","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/UInt25/init(integerLiteral:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"integerLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/init(integerLiteral:)","type":"topic","role":"symbol","abstract":[],"kind":"symbol","title":"init(integerLiteral:)","url":"\/documentation\/midikit\/uint25\/init(integerliteral:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"role":"collectionGroup","title":"MIDIKit Value Types","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"}}}