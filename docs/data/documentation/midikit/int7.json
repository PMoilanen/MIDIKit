{"metadata":{"roleHeading":"Structure","title":"Int7","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Int7","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"text":"Int7","kind":"identifier"}],"role":"symbol","modules":[{"name":"MIDIKit"}],"externalID":"s:11MIDIKitCore4Int7V"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"]]},"sections":[],"abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":". ("},{"type":"codeVoice","code":"-64 ... 63"},{"type":"text","text":")"}],"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv"],"title":"Initializers"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte"],"title":"Instance Properties"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/MIDIKit\/SL","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"seeAlsoSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord"],"generated":true,"title":"Additional Value Types"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int7"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/midikit\/int7"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-797dv":{"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"truncatingIfNecessary"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SU","text":"UnsignedInteger"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv","url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-797dv","title":"init(truncatingIfNecessary:)","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/Int7":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int7"}],"url":"\/documentation\/midikit\/int7","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int7","kind":"identifier"}],"abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":". ("},{"code":"-64 ... 63","type":"codeVoice"},{"type":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7","role":"symbol","title":"Int7"},"doc://MIDIKit/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP"},"doc://MIDIKit/documentation/MIDIKit/Int7/rawUInt7Byte":{"url":"\/documentation\/midikit\/int7\/rawuint7byte","title":"rawUInt7Byte","type":"topic","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawUInt7Byte"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore5UInt7V","text":"UInt7"}],"abstract":[{"type":"text","text":"Returns the 7-bit signed integer as a raw "},{"code":"UInt7","type":"codeVoice"},{"type":"text","text":" byte bit pattern."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/midikit\/int7\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-8nfhw":{"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(some "},{"text":"UnsignedInteger","preciseIdentifier":"s:SU","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","url":"\/documentation\/midikit\/int7\/init(_:)-8nfhw","title":"init(_:)","abstract":[{"type":"text","text":"Initializes from an unsigned integer value, throwing an exception in the event of overflow"},{"type":"text","text":" "},{"text":"or underflow.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/Int7/init(bitPattern:)":{"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"bitPattern","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"UnsignedInteger","preciseIdentifier":"s:SU","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","url":"\/documentation\/midikit\/int7\/init(bitpattern:)","title":"init(bitPattern:)","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/Int7/CustomStringConvertible-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/midikit\/int7\/customstringconvertible-implementations","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-1ygvi":{"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SZ","text":"SignedInteger"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","url":"\/documentation\/midikit\/int7\/init(_:)-1ygvi","title":"init(_:)","abstract":[{"type":"text","text":"Initializes from a signed integer value, throwing an exception in the event of overflow or"},{"text":" ","type":"text"},{"type":"text","text":"underflow."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-5ki0p":{"url":"\/documentation\/midikit\/int7\/init(exactly:)-5ki0p","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"exactly","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"UnsignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"init(exactly:)","abstract":[{"text":"Initializes from an unsigned integer value, returning nil if the value cannot be preserved","type":"text"},{"text":" ","type":"text"},{"text":"because it would otherwise overflow or underflow.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p"},"doc://MIDIKit/documentation/MIDIKit/Int7/intValue":{"type":"topic","title":"intValue","url":"\/documentation\/midikit\/int7\/intvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"intValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","kind":"symbol","abstract":[{"type":"text","text":"Returns the integer as "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/UInt9":{"role":"symbol","title":"UInt9","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt9","kind":"identifier"}],"url":"\/documentation\/midikit\/uint9","navigatorTitle":[{"text":"UInt9","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9","abstract":[{"type":"text","text":"A 9-bit unsigned integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/UMPWord":{"type":"topic","abstract":[{"text":"Universal MIDI Packet Word: Type representing four 8-bit bytes.","type":"text"}],"navigatorTitle":[{"text":"UMPWord","kind":"identifier"}],"title":"UMPWord","url":"\/documentation\/midikit\/umpword","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UMPWord"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-ec4i":{"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"SignedInteger","preciseIdentifier":"s:SZ"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","url":"\/documentation\/midikit\/int7\/init(exactly:)-ec4i","title":"init(exactly:)","abstract":[{"type":"text","text":"Initializes from a signed integer value, returning nil if the value cannot be preserved"},{"text":" ","type":"text"},{"type":"text","text":"because it would otherwise overflow or underflow."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/binaryString":{"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryString"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","url":"\/documentation\/midikit\/int7\/binarystring","title":"binaryString","abstract":[{"type":"text","text":"Returns the bit pattern as a 7-bit binary string."}]},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt25","kind":"identifier"}],"kind":"symbol","title":"UInt25","type":"topic","abstract":[{"text":"A 25-bit unsigned integer value type used in ","type":"text"},{"type":"codeVoice","code":"MIDIKit"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"UInt25"}],"url":"\/documentation\/midikit\/uint25","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"role":"collectionGroup","title":"MIDIKit Value Types","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Int7/Comparable-Implementations":{"kind":"article","url":"\/documentation\/midikit\/int7\/comparable-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","title":"Comparable Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-6w3ge":{"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNecessary"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"SignedInteger","preciseIdentifier":"s:SZ"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge","url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-6w3ge","title":"init(truncatingIfNecessary:)","abstract":[]},"doc://MIDIKit/SL":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SL","title":"Swift.Comparable"},"doc://MIDIKit/documentation/MIDIKit/Int7/Hashable-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations","url":"\/documentation\/midikit\/int7\/hashable-implementations","title":"Hashable Implementations","abstract":[]},"doc://MIDIKit/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"role":"collectionGroup","title":"MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/SH":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SH","title":"Swift.Hashable"},"doc://MIDIKit/SQ":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SQ","title":"Swift.Equatable"},"doc://MIDIKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP","title":"Swift.Sendable"},"doc://MIDIKit/documentation/MIDIKit/Int7/rawByte":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"rawByte","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte","url":"\/documentation\/midikit\/int7\/rawbyte","title":"rawByte","abstract":[{"text":"Returns the 7-bit signed integer as a raw ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":" byte bit pattern.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The top (8th) bit will always be "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/Equatable-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","url":"\/documentation\/midikit\/int7\/equatable-implementations","abstract":[],"title":"Equatable Implementations"}}}