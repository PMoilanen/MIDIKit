{"variants":[{"paths":["\/documentation\/midikit\/int7"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"text":". (","type":"text"},{"type":"codeVoice","code":"-64 ... 63"},{"type":"text","text":")"}],"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte"]},{"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations"],"generated":true}],"metadata":{"role":"symbol","symbolKind":"struct","navigatorTitle":[{"text":"Int7","kind":"identifier"}],"externalID":"s:11MIDIKitCore4Int7V","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int7","kind":"identifier"}],"roleHeading":"Structure","title":"Int7","modules":[{"name":"MIDIKit"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"]]},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/MIDIKit\/SL","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"seeAlsoSections":[{"title":"Additional Value Types","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int7"}],"languages":["swift"]}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/UMPWord":{"abstract":[{"type":"text","text":"Universal MIDI Packet Word: Type representing four 8-bit bytes."}],"url":"\/documentation\/midikit\/umpword","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UMPWord"}],"navigatorTitle":[{"kind":"identifier","text":"UMPWord"}],"kind":"symbol","type":"topic","title":"UMPWord","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/binaryString":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","kind":"symbol","abstract":[{"type":"text","text":"Returns the bit pattern as a 7-bit binary string."}],"url":"\/documentation\/midikit\/int7\/binarystring","role":"symbol","type":"topic","title":"binaryString","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binaryString"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://MIDIKit/documentation/MIDIKit/Int7/CustomStringConvertible-Implementations":{"url":"\/documentation\/midikit\/int7\/customstringconvertible-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-6w3ge":{"abstract":[],"url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-6w3ge","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNecessary"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SZ","text":"SignedInteger","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","title":"init(truncatingIfNecessary:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","type":"topic","url":"\/documentation\/midikit\/int7\/equatable-implementations","kind":"article","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/Int7/ExpressibleByIntegerLiteral-Implementations":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations","role":"collectionGroup","title":"ExpressibleByIntegerLiteral Implementations","abstract":[],"kind":"article","url":"\/documentation\/midikit\/int7\/expressiblebyintegerliteral-implementations"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-ec4i":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","type":"topic","title":"init(exactly:)","url":"\/documentation\/midikit\/int7\/init(exactly:)-ec4i","abstract":[{"text":"Initializes from a signed integer value, returning nil if the value cannot be preserved","type":"text"},{"type":"text","text":" "},{"text":"because it would otherwise overflow or underflow.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"SignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SZ"},{"text":")","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-797dv":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-797dv","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"truncatingIfNecessary","kind":"externalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SU","text":"UnsignedInteger"},{"kind":"text","text":")"}],"title":"init(truncatingIfNecessary:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv"},"doc://MIDIKit/documentation/MIDIKit/Int7/intValue":{"role":"symbol","title":"intValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"intValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","type":"topic","url":"\/documentation\/midikit\/int7\/intvalue","abstract":[{"text":"Returns the integer as ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/Comparable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/midikit\/int7\/comparable-implementations","title":"Comparable Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/Int7/rawByte":{"title":"rawByte","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawByte"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}],"type":"topic","abstract":[{"type":"text","text":"Returns the 7-bit signed integer as a raw "},{"code":"UInt8","type":"codeVoice"},{"text":" byte bit pattern.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The top (8th) bit will always be "},{"code":"0","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/midikit\/int7\/rawbyte","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int7"}],"type":"topic","url":"\/documentation\/midikit\/int7","title":"Int7","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Int7","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7","abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":". ("},{"code":"-64 ... 63","type":"codeVoice"},{"type":"text","text":")"}]},"doc://MIDIKit/SQ":{"identifier":"doc:\/\/MIDIKit\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://MIDIKit/SL":{"identifier":"doc:\/\/MIDIKit\/SL","type":"unresolvable","title":"Swift.Comparable"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-8nfhw":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(some "},{"text":"UnsignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","abstract":[{"text":"Initializes from an unsigned integer value, throwing an exception in the event of overflow","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or underflow."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","title":"init(_:)","url":"\/documentation\/midikit\/int7\/init(_:)-8nfhw"},"doc://MIDIKit/documentation/MIDIKit/UInt9":{"url":"\/documentation\/midikit\/uint9","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt9"}],"kind":"symbol","navigatorTitle":[{"text":"UInt9","kind":"identifier"}],"abstract":[{"type":"text","text":"A 9-bit unsigned integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":"."}],"role":"symbol","title":"UInt9","type":"topic"},"doc://MIDIKit/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral"},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UInt25","kind":"identifier"}],"url":"\/documentation\/midikit\/uint25","role":"symbol","abstract":[{"type":"text","text":"A 25-bit unsigned integer value type used in "},{"code":"MIDIKit","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"UInt25","navigatorTitle":[{"text":"UInt25","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-1ygvi":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","type":"topic","title":"init(_:)","url":"\/documentation\/midikit\/int7\/init(_:)-1ygvi","abstract":[{"type":"text","text":"Initializes from a signed integer value, throwing an exception in the event of overflow or"},{"type":"text","text":" "},{"type":"text","text":"underflow."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"SignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SZ"},{"text":")","kind":"text"}]},"doc://MIDIKit/SH":{"identifier":"doc:\/\/MIDIKit\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://MIDIKit/s23CustomStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://MIDIKit/documentation/MIDIKit/Int7/rawUInt7Byte":{"title":"rawUInt7Byte","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"rawUInt7Byte","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MIDIKitCore5UInt7V","kind":"typeIdentifier","text":"UInt7"}],"type":"topic","abstract":[{"type":"text","text":"Returns the 7-bit signed integer as a raw "},{"code":"UInt7","type":"codeVoice"},{"type":"text","text":" byte bit pattern."}],"kind":"symbol","url":"\/documentation\/midikit\/int7\/rawuint7byte","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/Hashable-Implementations":{"title":"Hashable Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations","url":"\/documentation\/midikit\/int7\/hashable-implementations"},"doc://MIDIKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","role":"collectionGroup","kind":"article","title":"MIDIKitCore","type":"topic","url":"\/documentation\/midikit\/midikitcore","abstract":[{"text":"Essential MIDI types used by all modules in MIDIKit.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-5ki0p":{"url":"\/documentation\/midikit\/int7\/init(exactly:)-5ki0p","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"UnsignedInteger","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","title":"init(exactly:)","abstract":[{"text":"Initializes from an unsigned integer value, returning nil if the value cannot be preserved","type":"text"},{"type":"text","text":" "},{"text":"because it would otherwise overflow or underflow.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(bitPattern:)":{"title":"init(bitPattern:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bitPattern"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SU","kind":"typeIdentifier","text":"UnsignedInteger"},{"text":")","kind":"text"}],"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/midikit\/int7\/init(bitpattern:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"title":"MIDIKit Value Types","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"}}}