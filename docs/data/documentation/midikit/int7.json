{"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":". ("},{"code":"-64 ... 63","type":"codeVoice"},{"text":")","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte"],"title":"Instance Properties"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/int7"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/MIDIKit\/SL","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","doc:\/\/MIDIKit\/SH","doc:\/\/MIDIKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"seeAlsoSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord"],"generated":true,"title":"Additional Value Types"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int7"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7"},"metadata":{"title":"Int7","modules":[{"name":"MIDIKit"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int7"}],"navigatorTitle":[{"text":"Int7","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","externalID":"s:11MIDIKitCore4Int7V","symbolKind":"struct"},"references":{"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-1ygvi":{"url":"\/documentation\/midikit\/int7\/init(_:)-1ygvi","type":"topic","role":"symbol","title":"init(_:)","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-1ygvi","abstract":[{"type":"text","text":"Initializes from a signed integer value, throwing an exception in the event of overflow or"},{"type":"text","text":" "},{"type":"text","text":"underflow."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:SZ","text":"SignedInteger","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/UMPWord":{"navigatorTitle":[{"kind":"identifier","text":"UMPWord"}],"kind":"symbol","role":"symbol","type":"topic","title":"UMPWord","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UMPWord","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UMPWord","kind":"identifier"}],"abstract":[{"text":"Universal MIDI Packet Word: Type representing four 8-bit bytes.","type":"text"}],"url":"\/documentation\/midikit\/umpword"},"doc://MIDIKit/SQ":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SQ","title":"Swift.Equatable"},"doc://MIDIKit/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://MIDIKit/documentation/MIDIKit/Int7/binaryString":{"title":"binaryString","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"binaryString","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/binaryString","abstract":[{"type":"text","text":"Returns the bit pattern as a 7-bit binary string."}],"url":"\/documentation\/midikit\/int7\/binarystring","role":"symbol","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Int7":{"abstract":[{"type":"text","text":"A 7-bit signed integer value type used in "},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":". ("},{"type":"codeVoice","code":"-64 ... 63"},{"text":")","type":"text"}],"title":"Int7","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int7"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7","navigatorTitle":[{"kind":"identifier","text":"Int7"}],"kind":"symbol","url":"\/documentation\/midikit\/int7","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/UInt9":{"type":"topic","url":"\/documentation\/midikit\/uint9","role":"symbol","kind":"symbol","abstract":[{"text":"A 9-bit unsigned integer value type used in ","type":"text"},{"type":"codeVoice","code":"MIDIKit"},{"text":".","type":"text"}],"title":"UInt9","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt9"}],"navigatorTitle":[{"text":"UInt9","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt9"},"doc://MIDIKit/documentation/MIDIKit/Int7/Hashable-Implementations":{"url":"\/documentation\/midikit\/int7\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Hashable-Implementations","type":"topic","kind":"article","title":"Hashable Implementations","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-6w3ge":{"title":"init(truncatingIfNecessary:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"truncatingIfNecessary"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:SZ","text":"SignedInteger","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-6w3ge","type":"topic","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-6w3ge"},"doc://MIDIKit/documentation/MIDIKit/Int7/rawByte":{"kind":"symbol","title":"rawByte","role":"symbol","abstract":[{"type":"text","text":"Returns the 7-bit signed integer as a raw "},{"code":"UInt8","type":"codeVoice"},{"text":" byte bit pattern.","type":"text"},{"text":" ","type":"text"},{"text":"The top (8th) bit will always be ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/midikit\/int7\/rawbyte","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawByte"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawByte"},"doc://MIDIKit/SH":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/SH","title":"Swift.Hashable"},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"kind":"symbol","url":"\/documentation\/midikit\/uint25","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","navigatorTitle":[{"kind":"identifier","text":"UInt25"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt25","kind":"identifier"}],"title":"UInt25","abstract":[{"text":"A 25-bit unsigned integer value type used in ","type":"text"},{"type":"codeVoice","code":"MIDIKit"},{"type":"text","text":"."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Equatable-Implementations","kind":"article","url":"\/documentation\/midikit\/int7\/equatable-implementations","type":"topic","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/Int7/intValue":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/intValue","title":"intValue","type":"topic","abstract":[{"text":"Returns the integer as ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"url":"\/documentation\/midikit\/int7\/intvalue","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"intValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://MIDIKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP","title":"Swift.Sendable"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","kind":"article","role":"collectionGroup","title":"MIDIKitCore","type":"topic","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}]},"doc://MIDIKit/documentation/MIDIKit/Int7/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/midikit\/int7\/customstringconvertible-implementations","abstract":[],"role":"collectionGroup","kind":"article","title":"CustomStringConvertible Implementations"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-5ki0p":{"title":"init(exactly:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SU","text":"UnsignedInteger"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","abstract":[{"type":"text","text":"Initializes from an unsigned integer value, returning nil if the value cannot be preserved"},{"type":"text","text":" "},{"type":"text","text":"because it would otherwise overflow or underflow."}],"url":"\/documentation\/midikit\/int7\/init(exactly:)-5ki0p","role":"symbol","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/Int7/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/midikit\/int7\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/ExpressibleByIntegerLiteral-Implementations"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(truncatingIfNecessary:)-797dv":{"url":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-797dv","type":"topic","role":"symbol","kind":"symbol","title":"init(truncatingIfNecessary:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(truncatingIfNecessary:)-797dv","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNecessary"},{"text":": some ","kind":"text"},{"text":"UnsignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}]},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"url":"\/documentation\/midikit\/midikitcore-value-types","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","title":"MIDIKit Value Types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(bitPattern:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(bitPattern:)","abstract":[],"type":"topic","title":"init(bitPattern:)","url":"\/documentation\/midikit\/int7\/init(bitpattern:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bitPattern"},{"text":": some ","kind":"text"},{"text":"UnsignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}]},"doc://MIDIKit/SL":{"identifier":"doc:\/\/MIDIKit\/SL","type":"unresolvable","title":"Swift.Comparable"},"doc://MIDIKit/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/MIDIKit\/s27ExpressibleByIntegerLiteralP","type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral"},"doc://MIDIKit/documentation/MIDIKit/Int7/Comparable-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/midikit\/int7\/comparable-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/Comparable-Implementations","abstract":[],"title":"Comparable Implementations"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-ec4i":{"abstract":[{"type":"text","text":"Initializes from a signed integer value, returning nil if the value cannot be preserved"},{"text":" ","type":"text"},{"type":"text","text":"because it would otherwise overflow or underflow."}],"role":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-ec4i","url":"\/documentation\/midikit\/int7\/init(exactly:)-ec4i","title":"init(exactly:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"SignedInteger","preciseIdentifier":"s:SZ","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://MIDIKit/documentation/MIDIKit/Int7/rawUInt7Byte":{"url":"\/documentation\/midikit\/int7\/rawuint7byte","abstract":[{"type":"text","text":"Returns the 7-bit signed integer as a raw "},{"code":"UInt7","type":"codeVoice"},{"type":"text","text":" byte bit pattern."}],"title":"rawUInt7Byte","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/rawUInt7Byte","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"rawUInt7Byte","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MIDIKitCore5UInt7V","kind":"typeIdentifier","text":"UInt7"}],"type":"topic","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(_:)-8nfhw":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SU","text":"UnsignedInteger"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(_:)-8nfhw","type":"topic","url":"\/documentation\/midikit\/int7\/init(_:)-8nfhw","kind":"symbol","role":"symbol","abstract":[{"text":"Initializes from an unsigned integer value, throwing an exception in the event of overflow","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or underflow."}]}}}