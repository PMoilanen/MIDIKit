{"abstract":[{"text":"Convenience constructor to return an instance of ","type":"text"},{"code":"owned == true","type":"codeVoice"},{"type":"text","text":" and empty criteria."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"owned","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MIDIEndpointFilter","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter\/owned()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midiendpointfilter\/owned()"]}],"metadata":{"symbolKind":"method","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"owned"},{"text":"() -> ","kind":"text"},{"text":"MIDIEndpointFilter","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV"}],"extendedModule":"MIDIKitIO","roleHeading":"Type Method","title":"owned()","externalID":"s:9MIDIKitIO18MIDIEndpointFilterV5ownedACyFZ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter"]]},"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"role":"collectionGroup","title":"Working With Endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}],"url":"\/documentation\/midikit\/midikitio-endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointFilter/owned()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Convenience constructor to return an instance of "},{"type":"codeVoice","code":"owned == true"},{"text":" and empty criteria.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"owned","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"MIDIEndpointFilter","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV"}],"title":"owned()","url":"\/documentation\/midikit\/midiendpointfilter\/owned()","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter\/owned()"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointFilter":{"title":"MIDIEndpointFilter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEndpointFilter"}],"abstract":[{"type":"text","text":"Endpoint filter rules."}],"kind":"symbol","navigatorTitle":[{"text":"MIDIEndpointFilter","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter","url":"\/documentation\/midikit\/midiendpointfilter","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]}}}