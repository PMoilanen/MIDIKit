{"abstract":[{"text":"Convenience constructor to return an instance of ","type":"text"},{"code":"owned == true","type":"codeVoice"},{"text":" and empty criteria.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"owned","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MIDIEndpointFilter","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","variants":[{"paths":["\/documentation\/midikit\/midiendpointfilter\/owned()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"roleHeading":"Type Method","title":"owned()","extendedModule":"MIDIKitIO","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"owned","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV","text":"MIDIEndpointFilter"}],"externalID":"s:9MIDIKitIO18MIDIEndpointFilterV5ownedACyFZ"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter\/owned()"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointFilter/owned()":{"role":"symbol","title":"owned()","abstract":[{"type":"text","text":"Convenience constructor to return an instance of "},{"code":"owned == true","type":"codeVoice"},{"type":"text","text":" and empty criteria."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter\/owned()","url":"\/documentation\/midikit\/midiendpointfilter\/owned()","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"owned"},{"text":"() -> ","kind":"text"},{"text":"MIDIEndpointFilter","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO18MIDIEndpointFilterV"}]},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointFilter":{"navigatorTitle":[{"kind":"identifier","text":"MIDIEndpointFilter"}],"url":"\/documentation\/midikit\/midiendpointfilter","title":"MIDIEndpointFilter","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEndpointFilter"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointFilter","abstract":[{"text":"Endpoint filter rules.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","title":"Working With Endpoints","role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]}}}