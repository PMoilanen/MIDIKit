{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.focusable(_:onFocusChange:)"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","title":"focusable(_:onFocusChange:)","extendedModule":"SwiftUI","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"focusable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"onFocusChange","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"roleHeading":"Instance Method","modules":[{"name":"MIDIKit","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewPAAE9focusable_13onFocusChangeQrSb_ySbctF::SYNTHESIZED::s:9MIDIKitUI15MIDIOutputsListV","platforms":[{"deprecated":false,"introducedAt":"10.15","message":"Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter.","deprecatedAt":"12.0","unavailable":false,"name":"macOS","beta":false},{"unavailable":false,"deprecated":false,"name":"tvOS","beta":false,"deprecatedAt":"15.0","introducedAt":"13.0","message":"Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter."},{"name":"watchOS","deprecatedAt":"8.0","beta":false,"introducedAt":"6.0","deprecated":false,"unavailable":false,"message":"Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter."}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"focusable"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isFocusable"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true, ","kind":"text"},{"text":"onFocusChange","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":" = { _ in }) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/focusable(_:onFocusChange:)"},"variants":[{"paths":["\/documentation\/midikit\/midioutputslist\/focusable(_:onfocuschange:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList/focusable(_:onFocusChange:)":{"deprecated":true,"url":"\/documentation\/midikit\/midioutputslist\/focusable(_:onfocuschange:)","abstract":[],"kind":"symbol","title":"focusable(_:onFocusChange:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/focusable(_:onFocusChange:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"focusable","kind":"identifier"},{"kind":"text","text":"("},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"onFocusChange","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitUI":{"type":"topic","kind":"article","role":"collectionGroup","title":"MIDIKitUI","url":"\/documentation\/midikit\/midikitui","abstract":[{"type":"text","text":"Reusable user interface components for convenience."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList/View-Implementations":{"role":"collectionGroup","title":"View Implementations","url":"\/documentation\/midikit\/midioutputslist\/view-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/View-Implementations","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList":{"url":"\/documentation\/midikit\/midioutputslist","role":"symbol","type":"topic","abstract":[{"text":"SwiftUI ","type":"text"},{"code":"List","type":"codeVoice"},{"type":"text","text":" view for selecting MIDI output endpoints."}],"kind":"symbol","title":"MIDIOutputsList","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList","navigatorTitle":[{"kind":"identifier","text":"MIDIOutputsList"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIOutputsList","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"}}}