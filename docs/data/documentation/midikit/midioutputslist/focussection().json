{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midioutputslist\/focussection()"]}],"metadata":{"platforms":[{"introducedAt":"13.0","name":"macOS","unavailable":false,"deprecated":false,"beta":false},{"unavailable":false,"beta":false,"introducedAt":"15.0","name":"tvOS","deprecated":false}],"role":"symbol","modules":[{"name":"MIDIKit","relatedModules":["SwiftUI"]}],"extendedModule":"SwiftUI","roleHeading":"Instance Method","title":"focusSection()","externalID":"s:7SwiftUI4ViewPAAE12focusSectionQryF::SYNTHESIZED::s:9MIDIKitUI15MIDIOutputsListV","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"focusSection","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"kind":"symbol","identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/focusSection()","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.focusSection()"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"focusSection"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/View-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList":{"url":"\/documentation\/midikit\/midioutputslist","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIOutputsList"}],"title":"MIDIOutputsList","type":"topic","abstract":[{"text":"SwiftUI ","type":"text"},{"code":"List","type":"codeVoice"},{"type":"text","text":" view for selecting MIDI output endpoints."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList","role":"symbol","navigatorTitle":[{"text":"MIDIOutputsList","kind":"identifier"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitUI":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitUI","abstract":[{"text":"Reusable user interface components for convenience.","type":"text"}],"title":"MIDIKitUI","url":"\/documentation\/midikit\/midikitui","type":"topic","kind":"article","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList/View-Implementations":{"url":"\/documentation\/midikit\/midioutputslist\/view-implementations","title":"View Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/View-Implementations","role":"collectionGroup","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputsList/focusSection()":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputsList\/focusSection()","kind":"symbol","abstract":[],"url":"\/documentation\/midikit\/midioutputslist\/focussection()","role":"symbol","type":"topic","title":"focusSection()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"focusSection","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}}}