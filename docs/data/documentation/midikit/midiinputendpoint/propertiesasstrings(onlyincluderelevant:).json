{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MIDIIOObject.propertiesAsStrings(onlyIncludeRelevant:)"},{"text":".","type":"text"}],"metadata":{"extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE19propertiesAsStrings19onlyIncludeRelevantSaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO17MIDIInputEndpointV","title":"propertiesAsStrings(onlyIncludeRelevant:)","roleHeading":"Instance Method","role":"symbol","platforms":[],"symbolKind":"method","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"propertiesAsStrings","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onlyIncludeRelevant","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> [(key","kind":"text"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", value"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")]"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertiesAsStrings(onlyIncludeRelevant:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/midikit\/midiinputendpoint\/propertiesasstrings(onlyincluderelevant:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertiesAsStrings"},{"text":"(","kind":"text"},{"text":"onlyIncludeRelevant","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")]","kind":"text"}],"platforms":["macOS"]}]}],"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/MIDIIOObject-Implementations":{"title":"MIDIIOObject Implementations","url":"\/documentation\/midikit\/midiinputendpoint\/midiioobject-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations","kind":"article","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","title":"Working With Endpoints","role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints","type":"topic","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIInputEndpoint","kind":"identifier"}],"abstract":[{"text":"A MIDI input endpoint in the system, wrapping a Core MIDI ","type":"text"},{"type":"codeVoice","code":"MIDIEndpointRef"},{"text":".","type":"text"}],"url":"\/documentation\/midikit\/midiinputendpoint","kind":"symbol","type":"topic","navigatorTitle":[{"text":"MIDIInputEndpoint","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","title":"MIDIInputEndpoint","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/propertiesAsStrings(onlyIncludeRelevant:)":{"type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertiesAsStrings(onlyIncludeRelevant:)","url":"\/documentation\/midikit\/midiinputendpoint\/propertiesasstrings(onlyincluderelevant:)","title":"propertiesAsStrings(onlyIncludeRelevant:)","role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"propertiesAsStrings","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onlyIncludeRelevant","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> [(key"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")]"}],"kind":"symbol"}}}