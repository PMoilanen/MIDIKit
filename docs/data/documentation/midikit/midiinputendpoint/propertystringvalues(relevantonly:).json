{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"propertyStringValues(relevantOnly:)","extendedModule":"MIDIKitIO","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"relevantOnly"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")]"}],"role":"symbol","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO17MIDIInputEndpointV","roleHeading":"Instance Method"},"abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"text":" ","type":"text"},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"relevantOnly"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true) -> [(key","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")]"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midiinputendpoint\/propertystringvalues(relevantonly:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertyStringValues(relevantOnly:)","interfaceLanguage":"swift"},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","title":"MIDIKitIO","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"type":"topic","title":"MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint":{"type":"topic","title":"MIDIInputEndpoint","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","kind":"symbol","abstract":[{"type":"text","text":"A MIDI input endpoint in the system, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIEndpointRef"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIInputEndpoint","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIInputEndpoint"}],"url":"\/documentation\/midikit\/midiinputendpoint"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","type":"topic","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/MIDIIOObject-Implementations":{"title":"MIDIIOObject Implementations","url":"\/documentation\/midikit\/midiinputendpoint\/midiioobject-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","title":"Working With Endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/propertyStringValues(relevantOnly:)":{"url":"\/documentation\/midikit\/midiinputendpoint\/propertystringvalues(relevantonly:)","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertyStringValues(relevantOnly:)","title":"propertyStringValues(relevantOnly:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", value","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")]"}],"abstract":[{"type":"text","text":"Get all properties as a key\/value pair array, formatted as human-readable strings."},{"type":"text","text":" "},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"type":"text","text":" "},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"role":"symbol"}}}