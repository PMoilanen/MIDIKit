{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/observablemidimanager"]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"]},{"kind":"relationships","identifiers":["doc:\/\/MIDIKit\/7Combine16ObservableObjectP","doc:\/\/MIDIKit\/objc(pl)NSObject","doc:\/\/MIDIKit\/s7CVarArgP","doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH"],"title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/init(clientName:model:manufacturer:notificationHandler:)"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/updateObjectsCache()"]},{"title":"Type Aliases","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableNotificationHandler"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"],"title":"Manager","generated":true}],"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"text":"Two new properties are available: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"reference"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","type":"reference"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"Generally it is recommended to install the manager instance in the ","type":"text"},{"code":"App","type":"codeVoice"},{"type":"text","text":" struct."}],"type":"paragraph"},{"code":["@main","struct MyApp: App {","    @ObservedObject var midiManager = ObservableMIDIManager(","        clientName: \"MyApp\",","        model: \"MyApp\",","        manufacturer: \"MyCompany\"","    )","","    WindowGroup {","        ContentView()","            .environmentObject(midiManager)","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The observable properties can then be used to update view state as a result of changes in the"},{"text":" ","type":"text"},{"type":"text","text":"systemâ€™s MIDI devices and endpoints."}],"type":"paragraph"},{"code":["struct ContentView: View {","    @EnvironmentObject var midiManager: ObservableMIDIManager","","    var body: some View {","        List(midiManager.observableDevices.devices) { device in","            Text(device.name)","        }","        List(midiManager.observableEndpoints.inputs) { input in","            Text(input.name)","        }","        List(midiManager.observableEndpoints.outputs) { output in","            Text(output.name)","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"platforms":[{"introducedAt":"13.0","deprecated":false,"unavailable":false,"name":"iOS","beta":false},{"unavailable":false,"beta":false,"name":"macOS","introducedAt":"10.15","deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false,"name":"Mac Catalyst"}],"externalID":"c:@M@MIDIKitIO@objc(cs)ObservableMIDIManager","title":"ObservableMIDIManager","roleHeading":"Class","role":"symbol","modules":[{"name":"MIDIKit"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"url":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"topic","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","role":"collectionGroup","kind":"article"},"doc://MIDIKit/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/MIDIKit\/SQ","type":"unresolvable"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableMIDIManager"}],"abstract":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"text":"Two new properties are available: ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints"},{"type":"text","text":"."}],"title":"ObservableMIDIManager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","navigatorTitle":[{"text":"ObservableMIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"role":"collectionGroup","url":"\/documentation\/midikit\/midimanager-receiving-notifications","title":"Receiving Notifications","kind":"article","type":"topic","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/init(clientName:model:manufacturer:notificationHandler:)":{"url":"\/documentation\/midikit\/observablemidimanager\/init(clientname:model:manufacturer:notificationhandler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"clientName","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"model","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"manufacturer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"notificationHandler"},{"kind":"text","text":": "},{"text":"ObservableMIDIManager","kind":"typeIdentifier","preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)ObservableMIDIManager"},{"text":".","kind":"text"},{"text":"ObservableNotificationHandler","preciseIdentifier":"s:9MIDIKitIO21ObservableMIDIManagerC0C19NotificationHandlera","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/init(clientName:model:manufacturer:notificationHandler:)","title":"init(clientName:model:manufacturer:notificationHandler:)","abstract":[{"text":"Initialize the MIDI manager (and Core MIDI client).","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://MIDIKit/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/MIDIKit\/objc(pl)NSObject","type":"unresolvable"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","kind":"article","title":"Creating Ports","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/updateObjectsCache()":{"url":"\/documentation\/midikit\/observablemidimanager\/updateobjectscache()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"updateObjectsCache","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/updateObjectsCache()","title":"updateObjectsCache()","abstract":[],"role":"symbol","type":"topic","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableEndpoints"},{"kind":"text","text":": "},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","type":"topic","title":"observableEndpoints","abstract":[{"text":"MIDI input and output endpoints in the system.","type":"text"},{"text":" ","type":"text"},{"text":"This is an observable implementation of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/endpoints":{"url":"\/documentation\/midikit\/midimanager\/endpoints","role":"symbol","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","kind":"typeIdentifier","text":"MIDIEndpoints"}],"title":"endpoints","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"kind":"symbol","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","title":"MIDIManager","role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},"doc://MIDIKit/SH":{"identifier":"doc:\/\/MIDIKit\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/ObservableNotificationHandler":{"url":"\/documentation\/midikit\/observablemidimanager\/observablenotificationhandler","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableNotificationHandler"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableNotificationHandler","navigatorTitle":[{"text":"ObservableNotificationHandler","kind":"identifier"}],"title":"ObservableMIDIManager.ObservableNotificationHandler","abstract":[{"text":"Handler that is called when state has changed in the manager.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://MIDIKit/s7CVarArgP":{"identifier":"doc:\/\/MIDIKit\/s7CVarArgP","title":"Swift.CVarArg","type":"unresolvable"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/midikit\/midimanager-creating-connections","abstract":[{"text":"Managed connections are smart MIDI connections owned and maintained by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system.","type":"text"}],"title":"Creating Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"url":"\/documentation\/midikit\/midimanager\/devices","role":"symbol","abstract":[{"type":"text","text":"MIDI devices in the system."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"devices"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"title":"devices","type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","type":"topic","title":"Removing Ports and Connections","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"abstract":[{"text":"MIDI devices in the system.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","kind":"typeIdentifier"}],"title":"observableDevices","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices"},"doc://MIDIKit/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://MIDIKit/7Combine16ObservableObjectP":{"identifier":"doc:\/\/MIDIKit\/7Combine16ObservableObjectP","type":"unresolvable","title":"Combine.ObservableObject"},"doc://MIDIKit/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/ObservableObject-Implementations":{"title":"ObservableObject Implementations","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/midikit\/observablemidimanager\/observableobject-implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"role":"article","title":"Combine and SwiftUI Features","url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","kind":"article","type":"topic","abstract":[{"text":"Certain objects and properties are observable.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"}}}