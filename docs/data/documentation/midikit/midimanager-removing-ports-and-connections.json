{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midimanager-removing-ports-and-connections"]}],"topicSections":[{"title":"MIDIManager Methods","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()"]}],"metadata":{"modules":[{"name":"MIDIKit"}],"role":"collectionGroup","title":"Removing Ports and Connections"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Remove Individual Virtual Port or Connection","type":"heading","anchor":"Remove-Individual-Virtual-Port-or-Connection"},{"type":"paragraph","inlineContent":[{"text":"To remove an individual virtual port or connection owned by the ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" and dispose of it in the system, call the relevant remove method:","type":"text"}]},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","isActive":true}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["midiManager.remove(.input, .withTag(\"VirtualInputTagHere\"))","midiManager.remove(.output, .withTag(\"VirtualOutputTagHere\"))","midiManager.remove(.inputConnection, .withTag(\"InConnTagHere\"))","midiManager.remove(.outputConnection, .withTag(\"OutConnTagHere\"))","midiManager.remove(.nonPersistentThruConnection, .withTag(\"ThruConnTagHere\"))"]},{"text":"Remove All of a Type","level":2,"type":"heading","anchor":"Remove-All-of-a-Type"},{"inlineContent":[{"text":"Additionally, you can remove all of a certain type:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["midiManager.remove(.input, .all)","midiManager.remove(.output, .all)","midiManager.remove(.inputConnection, .all)","midiManager.remove(.outputConnection, .all)","midiManager.remove(.nonPersistentThruConnection, .all)"]},{"type":"paragraph","inlineContent":[{"text":"To remove all persistent thru connections belonging to a specific owner ID, see ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)","isActive":true,"type":"reference"}]},{"text":"Remove All","type":"heading","level":2,"anchor":"Remove-All"},{"inlineContent":[{"type":"text","text":"Or remove all ports and connections that are owned by the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" at once:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()","isActive":true}]},{"syntax":"swift","type":"codeListing","code":["midiManager.removeAll()"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","seeAlsoSections":[{"title":"Manager","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"role":"symbol","abstract":[{"text":"MIDI devices in the system.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","kind":"symbol","title":"observableDevices"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"kind":"article","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"url":"\/documentation\/midikit\/midimanager-creating-connections","role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"kind":"article","abstract":[{"type":"text","text":"Certain objects and properties are observable."}],"url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","role":"article","title":"Combine and SwiftUI Features","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"kind":"article","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","title":"Creating Ports","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/removeAll()":{"type":"topic","url":"\/documentation\/midikit\/midimanager\/removeall()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeAll","kind":"identifier"},{"text":"()","kind":"text"}],"title":"removeAll()","kind":"symbol","abstract":[{"type":"text","text":"Remove all managed MIDI endpoints and connections."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/remove(_:_:)":{"url":"\/documentation\/midikit\/midimanager\/remove(_:_:)","abstract":[{"text":"Remove a managed MIDI endpoint or connection.","type":"text"}],"title":"remove(_:_:)","role":"symbol","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"remove","kind":"identifier"},{"kind":"text","text":"("},{"text":"MIDIManager","preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC11ManagedTypeO","text":"ManagedType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager","text":"MIDIManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC12TagSelectionO","text":"TagSelection"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableMIDIManager"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"type":"text","text":"Two new properties are available: "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager","title":"ObservableMIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/removeAllUnmanagedPersistentThruConnections(ownerID:)":{"type":"topic","url":"\/documentation\/midikit\/midimanager\/removeallunmanagedpersistentthruconnections(ownerid:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removeAllUnmanagedPersistentThruConnections","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ownerID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"removeAllUnmanagedPersistentThruConnections(ownerID:)","kind":"symbol","abstract":[{"type":"text","text":"Removes all unmanaged persistent MIDI thru connections stored in the system matching the"},{"type":"text","text":" "},{"text":"given owner ID.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"observableEndpoints","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"role":"symbol","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","title":"observableEndpoints"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","title":"Receiving Notifications","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"url":"\/documentation\/midikit\/midimanager-receiving-notifications"}}}