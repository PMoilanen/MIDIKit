{"sections":[],"kind":"article","metadata":{"title":"Removing Ports and Connections","modules":[{"name":"MIDIKit"}],"role":"collectionGroup"},"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()"],"title":"MIDIManager Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midimanager-removing-ports-and-connections"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"seeAlsoSections":[{"title":"Manager","generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Remove-Individual-Virtual-Port-or-Connection","text":"Remove Individual Virtual Port or Connection"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To remove an individual virtual port or connection owned by the "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" and dispose of it in the system, call the relevant remove method:"}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","type":"reference","isActive":true}]},{"syntax":"swift","type":"codeListing","code":["midiManager.remove(.input, .withTag(\"VirtualInputTagHere\"))","midiManager.remove(.output, .withTag(\"VirtualOutputTagHere\"))","midiManager.remove(.inputConnection, .withTag(\"InConnTagHere\"))","midiManager.remove(.outputConnection, .withTag(\"OutConnTagHere\"))","midiManager.remove(.nonPersistentThruConnection, .withTag(\"ThruConnTagHere\"))"]},{"level":2,"text":"Remove All of a Type","type":"heading","anchor":"Remove-All-of-a-Type"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, you can remove all of a certain type:"}]},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","isActive":true}],"type":"paragraph"},{"type":"codeListing","code":["midiManager.remove(.input, .all)","midiManager.remove(.output, .all)","midiManager.remove(.inputConnection, .all)","midiManager.remove(.outputConnection, .all)","midiManager.remove(.nonPersistentThruConnection, .all)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To remove all persistent thru connections belonging to a specific owner ID, see "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)","isActive":true,"type":"reference"}]},{"type":"heading","level":2,"anchor":"Remove-All","text":"Remove All"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or remove all ports and connections that are owned by the "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" at once:"}]},{"inlineContent":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()","isActive":true,"type":"reference"}],"type":"paragraph"},{"code":["midiManager.removeAll()"],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections"},"references":{"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"type":"topic","abstract":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"text":" subclass that is observable in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Two new properties are available: "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","url":"\/documentation\/midikit\/observablemidimanager","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableMIDIManager"}],"title":"ObservableMIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/removeAll()":{"type":"topic","abstract":[{"text":"Remove all managed MIDI endpoints and connections.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAll()","url":"\/documentation\/midikit\/midimanager\/removeall()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAll","kind":"identifier"},{"kind":"text","text":"()"}],"title":"removeAll()"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features","type":"topic","title":"Combine and SwiftUI Features","role":"article","abstract":[{"type":"text","text":"Certain objects and properties are observable."}],"kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"title":"Receiving Notifications","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","type":"topic","abstract":[{"text":"Specify a handler to receive Core MIDI system notifications.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/midikit\/midimanager-receiving-notifications","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"type":"topic","url":"\/documentation\/midikit\/midimanager-creating-connections","title":"Creating Connections","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","url":"\/documentation\/midikit\/midimanager-creating-ports","kind":"article","role":"collectionGroup","title":"Creating Ports"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/removeAllUnmanagedPersistentThruConnections(ownerID:)":{"title":"removeAllUnmanagedPersistentThruConnections(ownerID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeAllUnmanagedPersistentThruConnections"},{"text":"(","kind":"text"},{"text":"ownerID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/midikit\/midimanager\/removeallunmanagedpersistentthruconnections(ownerid:)","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)","kind":"symbol","abstract":[{"type":"text","text":"Removes all unmanaged persistent MIDI thru connections stored in the system matching the"},{"type":"text","text":" "},{"type":"text","text":"given owner ID."}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/remove(_:_:)":{"type":"topic","abstract":[{"type":"text","text":"Remove a managed MIDI endpoint or connection."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/remove(_:_:)","url":"\/documentation\/midikit\/midimanager\/remove(_:_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remove"},{"text":"(","kind":"text"},{"text":"MIDIManager","kind":"typeIdentifier","preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ManagedType","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC11ManagedTypeO"},{"text":", ","kind":"text"},{"preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager","kind":"typeIdentifier","text":"MIDIManager"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC12TagSelectionO","text":"TagSelection"},{"text":")","kind":"text"}],"title":"remove(_:_:)"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"topic","title":"observableDevices","role":"symbol","abstract":[{"type":"text","text":"MIDI devices in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"type":"topic","abstract":[{"text":"MIDI input and output endpoints in the system.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableEndpoints"},{"kind":"text","text":": "},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"title":"observableEndpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"}}}