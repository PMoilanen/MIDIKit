{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Background","level":2,"type":"heading","text":"Background"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The MIDI Show Control spec says:"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"MIDI Show Control uses a single Universal Real Time System Exclusive ID number (sub-ID #1 = 0x02) for all Show commands (transmissions from Controller to Controlled Device)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The format of a Show Control message is as follows:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"F0 7F <device_ID> <msc> <command_format> <command> <data> F7"}]}],"type":"aside","name":"Note"},{"anchor":"Constructing-Events","level":2,"type":"heading","text":"Constructing Events"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are three options that can work to construct these messages."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the example Show Control SysEx bytes "},{"type":"codeVoice","code":"F0 7F 01 02 01 07 0A F7"},{"type":"text","text":", the following examples all construct exactly the same message."}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/sysEx7(rawBytes:group:)"},{"type":"text","text":" constructor will take an array of MIDI 1.0 SysEx bytes."}]},{"type":"codeListing","syntax":"swift","code":["let event: MIDIEvent = try .sysEx7(","    rawBytes: [0xF0, 0x7F, 0x01, 0x02, 0x01, 0x07, 0x0A, 0xF7]",")"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/sysEx7(rawHexString:group:)"},{"type":"text","text":" constructor does the same thing, but conveniently takes a hex byte string. Hex bytes can be contiguous or padded with a space between them."}]},{"type":"codeListing","syntax":"swift","code":["let event: MIDIEvent = try .sysEx7(","    rawHexString: \"F07F010201070AF7\"",")","let event: MIDIEvent = try .sysEx7(","    rawHexString: \"F0 7F 01 02 01 07 0A F7\"",")"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/universalSysEx7(universalType:deviceID:subID1:subID2:data:group:)-1p0x1"},{"type":"text","text":" constructor will also work since MIDI Show Control specifically uses Universal SysEx format. It just separates the header parts into more descriptive types, as per the MIDI spec. (With this one, you only supply the inner data bytes, so the F0\/F7 trailing SysEx bytes and header info is taken care of for you.)"}]},{"type":"codeListing","syntax":"swift","code":["let event: MIDIEvent = try .universalSysEx7(","    universalType: .realTime, \/\/ byte two (0x7F)","    deviceID: 0x01, \/\/ byte three (<device_ID>)","    subID1: 0x02, \/\/ byte four (<msc>)","    subID2: 0x01, \/\/ byte five (<command_format>)","    data: [0x07, 0x0A] \/\/ byte six and onward; omit trailing 0xF7",")"]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/midikit\/midi-show-control"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDI-Show-Control","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Construct MIDI Show Control messages."}],"kind":"article","metadata":{"roleHeading":"Article","title":"MIDI Show Control","role":"article","modules":[{"name":"MIDIKit"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/sysEx7(rawBytes:group:)":{"role":"symbol","title":"sysEx7(rawBytes:group:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sysEx7"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawBytes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt4","preciseIdentifier":"s:11MIDIKitCore5UInt4V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"}],"abstract":[{"type":"text","text":"Parse a complete raw MIDI 1.0 System Exclusive 7 message and return a"},{"type":"text","text":" "},{"type":"text","text":"system exclusive "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent"},{"type":"text","text":" if successful."},{"type":"text","text":" "},{"type":"text","text":"Message must begin with "},{"type":"codeVoice","code":"0xF0"},{"type":"text","text":" but terminating "},{"type":"codeVoice","code":"0xF7"},{"type":"text","text":" byte is optional."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/sysEx7(rawBytes:group:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midievent\/sysex7(rawbytes:group:)"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"role":"collectionGroup","title":"MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitcore"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/sysEx7(rawHexString:group:)":{"role":"symbol","title":"sysEx7(rawHexString:group:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sysEx7"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"rawHexString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt4","preciseIdentifier":"s:11MIDIKitCore5UInt4V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"}],"abstract":[{"type":"text","text":"Parse a complete raw MIDI 1.0 System Exclusive 7 message in the form of a hex string and"},{"type":"text","text":" "},{"type":"text","text":"return a system exclusive "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent"},{"type":"text","text":" if successful."},{"type":"text","text":" "},{"type":"text","text":"Message must begin with "},{"type":"codeVoice","code":"\"F0\""},{"type":"text","text":" but terminating "},{"type":"codeVoice","code":"\"F7\""},{"type":"text","text":" byte is optional."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/sysEx7(rawHexString:group:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midievent\/sysex7(rawhexstring:group:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/universalSysEx7(universalType:deviceID:subID1:subID2:data:group:)-1p0x1":{"role":"symbol","title":"universalSysEx7(universalType:deviceID:subID1:subID2:data:group:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"universalSysEx7"},{"kind":"text","text":"("},{"kind":"externalParam","text":"universalType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UniversalSysExType","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO18UniversalSysExTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"deviceID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt7","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"subID1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt7","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"subID2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt7","preciseIdentifier":"s:11MIDIKitCore5UInt7V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt4","preciseIdentifier":"s:11MIDIKitCore5UInt4V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"}],"abstract":[{"type":"text","text":"System Exclusive: Universal SysEx (7-bit)"},{"type":"text","text":" "},{"type":"text","text":"(MIDI 1.0 \/ 2.0)"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/universalSysEx7(universalType:deviceID:subID1:subID2:data:group:)-1p0x1","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)-1p0x1"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent":{"role":"symbol","title":"MIDIEvent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEvent"}],"abstract":[{"type":"text","text":"MIDI Event."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEvent"}],"url":"\/documentation\/midikit\/midievent"},"https://www.midi.org/specifications/midi1-specifications/midi-show-control-2":{"title":"MIDI Show Control Specification","titleInlineContent":[{"type":"text","text":"MIDI Show Control Specification"}],"type":"link","identifier":"https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2","url":"https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2"}}}