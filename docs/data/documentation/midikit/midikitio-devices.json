{"kind":"article","primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device 1"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity 1"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Input Endpoint 1","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Input Endpoint 2","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]},{"content":[{"inlineContent":[{"text":"Output Endpoint 2","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Entity 2","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Input Endpoint 1"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]}],"type":"unorderedList"}]}]}]},{"content":[{"inlineContent":[{"text":"Device 2","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Entity 1","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Output Endpoint 1","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Output Endpoint 2"}],"type":"paragraph"}]}]}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"etc."}]},{"inlineContent":[{"text":"In most use cases, it is not necessary work with devices and entities. A single pair of endpoint collections (inputs and outputs) may be accessed directly which contains all endpoints that exist in the system. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","isActive":true},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/midikit\/midikitio-devices"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"Working with Devices","modules":[{"name":"MIDIKit"}],"role":"collectionGroup"},"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices"],"title":"Devices in the System"},{"title":"Device and Entity Objects","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity"]}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"url":"\/documentation\/midikit\/midikitio-endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"kind":"article","type":"topic","title":"Working With Endpoints","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"type":"topic","abstract":[{"text":"A MIDI device, wrapping a Core MIDI ","type":"text"},{"type":"codeVoice","code":"MIDIDeviceRef"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIDevice","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIDevice"}],"url":"\/documentation\/midikit\/mididevice","title":"MIDIDevice","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"title":"MIDIManager","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","url":"\/documentation\/midikit\/midimanager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"type":"topic","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"kind":"symbol","url":"\/documentation\/midikit\/midimanager\/devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","title":"devices","abstract":[{"type":"text","text":"MIDI devices in the system."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"devices"},{"text":": ","kind":"text"},{"text":"MIDIDevicesProtocol","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO19MIDIDevicesProtocolP"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","type":"topic","title":"MIDIEntity","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIEntityRef"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"navigatorTitle":[{"text":"MIDIEntity","kind":"identifier"}],"url":"\/documentation\/midikit\/midientity","kind":"symbol","role":"symbol"}}}