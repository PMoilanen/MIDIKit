{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device 1"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity 1"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Input Endpoint 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Input Endpoint 2"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 2"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity 2"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Input Endpoint 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device 2"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity 1"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 2"}]}]}]}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In most use cases, it is not necessary work with devices and entities. A single pair of endpoint collections (inputs and outputs) may be accessed directly which contains all endpoints that exist in the system. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints"},{"type":"text","text":" for more information."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/midikit\/midikitio-devices"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"kind":"article","metadata":{"modules":[{"name":"MIDIKit"}],"role":"collectionGroup","title":"Working with Devices"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"topicSections":[{"title":"Devices in the System","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices"]},{"title":"Device and Entity Objects","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"role":"symbol","title":"MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"role":"symbol","title":"devices","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"devices"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MIDIDevicesProtocol","preciseIdentifier":"s:9MIDIKitIO19MIDIDevicesProtocolP"}],"abstract":[{"type":"text","text":"MIDI devices in the system."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midimanager\/devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"role":"collectionGroup","title":"MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"role":"symbol","title":"MIDIEntity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEntity"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIEntityRef"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"url":"\/documentation\/midikit\/midientity"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"role":"symbol","title":"MIDIDevice","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIDevice"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"type":"codeVoice","code":"MIDIDeviceRef"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIDevice"}],"url":"\/documentation\/midikit\/mididevice"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"role":"collectionGroup","title":"Working With Endpoints","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-endpoints"}}}