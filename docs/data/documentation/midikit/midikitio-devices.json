{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Device 1","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Entity 1"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Input Endpoint 1"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Input Endpoint 2"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 2"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Entity 2"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Input Endpoint 1","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 1"}]}]}],"type":"unorderedList"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device 2"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity 1"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Output Endpoint 1","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output Endpoint 2"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}]},{"type":"paragraph","inlineContent":[{"text":"etc.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In most use cases, it is not necessary work with devices and entities. A single pair of endpoint collections (inputs and outputs) may be accessed directly which contains all endpoints that exist in the system. See ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","type":"reference","isActive":true},{"type":"text","text":" for more information."}]}]}],"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices"],"title":"Devices in the System"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity"],"title":"Device and Entity Objects"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"kind":"article","abstract":[{"text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s).","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midikitio-devices"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"Working with Devices","role":"collectionGroup","modules":[{"name":"MIDIKit"}]},"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEntity":{"url":"\/documentation\/midikit\/midientity","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEntity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MIDIEntity","kind":"identifier"}],"title":"MIDIEntity","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIEntity"}],"abstract":[{"text":"A MIDI device, wrapping a Core MIDI ","type":"text"},{"type":"codeVoice","code":"MIDIEntityRef"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"type":"topic","title":"MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"A device can contain zero or more entities, and an entity can contain zero or more inputs","type":"text"},{"type":"text","text":" "},{"text":"and output endpoints.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIDevice"}],"title":"MIDIDevice","kind":"symbol","url":"\/documentation\/midikit\/mididevice","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"abstract":[{"text":"MIDI devices in the system.","type":"text"}],"url":"\/documentation\/midikit\/midimanager\/devices","title":"devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"devices"},{"text":": ","kind":"text"},{"text":"MIDIDevicesProtocol","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO19MIDIDevicesProtocolP"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","title":"MIDIKitIO","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","type":"topic","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"url":"\/documentation\/midikit\/midimanager","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","title":"Working With Endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"role":"collectionGroup","url":"\/documentation\/midikit\/midikitio-endpoints"}}}