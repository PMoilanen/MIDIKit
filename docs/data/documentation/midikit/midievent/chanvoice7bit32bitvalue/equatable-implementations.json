{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"title":"Equatable Implementations","role":"collectionGroup","modules":[{"name":"MIDIKit"}]},"variants":[{"paths":["\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue\/Equatable-Implementations","interfaceLanguage":"swift"},"kind":"article","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue\/!=(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue\/==(_:_:)"],"title":"Operators"}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","kind":"article","role":"collectionGroup","title":"MIDIKitCore","type":"topic","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice7Bit32BitValue/==(_:_:)":{"type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue\/==(_:_:)","url":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/==(_:_:)","title":"==(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11MIDIKitCore9MIDIEventO23ChanVoice7Bit32BitValueO","kind":"typeIdentifier","text":"ChanVoice7Bit32BitValue"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO23ChanVoice7Bit32BitValueO","text":"ChanVoice7Bit32BitValue"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice7Bit32BitValue":{"navigatorTitle":[{"text":"ChanVoice7Bit32BitValue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue","abstract":[{"type":"text","text":"Channel Voice 7-Bit (MIDI 1.0) \/ 32-Bit (MIDI 2.0) Value."}],"url":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue","title":"MIDIEvent.ChanVoice7Bit32BitValue","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ChanVoice7Bit32BitValue","kind":"identifier"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice7Bit32BitValue/!=(_:_:)":{"role":"symbol","url":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/!=(_:_:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice7Bit32BitValue\/!=(_:_:)","abstract":[],"title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"url":"\/documentation\/midikit\/midikitcore-value-types","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","title":"MIDIKit Value Types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"}}}