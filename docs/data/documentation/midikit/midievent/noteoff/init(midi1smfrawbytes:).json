{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff\/init(midi1SMFRawBytes:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"symbolKind":"init","extendedModule":"MIDIKitCore","roleHeading":"Initializer","role":"symbol","title":"init(midi1SMFRawBytes:)","externalID":"s:11MIDIKitCore9MIDIEventO7NoteOffV0A3SMFE16midi1SMFRawBytesAEx_tKc10Foundation12DataProtocolRzlufc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"midi1SMFRawBytes","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"DataProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"modules":[{"relatedModules":["MIDIKitCore"],"name":"MIDIKit"}]},"sections":[],"abstract":[{"type":"text","text":"Initialize from raw event bytes."},{"type":"text","text":" "},{"type":"text","text":"Returns nil if data is malformed or cannot otherwise be used to construct the event."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"midi1SMFRawBytes","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"rawBytes","kind":"internalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"DataProtocol","preciseIdentifier":"s:10Foundation12DataProtocolP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff\/MIDIFileEventPayload-Implementations"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff\/MIDIFileEventPayload-Implementations"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEvent":{"navigatorTitle":[{"text":"MIDIEvent","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","url":"\/documentation\/midikit\/midievent","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEvent"}],"role":"symbol","title":"MIDIEvent","type":"topic","abstract":[{"type":"text","text":"An individual MIDI Event."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","kind":"article","role":"collectionGroup","title":"MIDIKitCore","type":"topic","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/NoteOff":{"navigatorTitle":[{"text":"NoteOff","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NoteOff"}],"abstract":[{"type":"text","text":"Channel Voice Message: Note Off"},{"text":" ","type":"text"},{"text":"(MIDI 1.0 \/ 2.0)","type":"text"}],"url":"\/documentation\/midikit\/midievent\/noteoff","kind":"symbol","title":"MIDIEvent.NoteOff","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF-Internals":{"type":"topic","url":"\/documentation\/midikit\/midikitsmf-internals","role":"collectionGroup","abstract":[],"kind":"article","title":"Internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/NoteOff/MIDIFileEventPayload-Implementations":{"title":"MIDIFileEventPayload Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/midikit\/midievent\/noteoff\/midifileeventpayload-implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff\/MIDIFileEventPayload-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-Channel-Voice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","url":"\/documentation\/midikit\/midievent-channel-voice","kind":"article","role":"collectionGroup","title":"Channel Voice","type":"topic","abstract":[{"type":"text","text":"Channel Voice events include notes, continuous controllers, pressure (aftertouch), program changes, and registered parameters (RPN\/NRPN). Additional per-note controllers are available when communicating with a device that supports MIDI 2.0."}]},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"title":"MIDIKitSMF","url":"\/documentation\/midikit\/midikitsmf","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Standard MIDI File extension for MIDIKit."}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/NoteOff/init(midi1SMFRawBytes:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/NoteOff\/init(midi1SMFRawBytes:)","url":"\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)","role":"symbol","title":"init(midi1SMFRawBytes:)","type":"topic","abstract":[{"type":"text","text":"Initialize from raw event bytes."},{"type":"text","text":" "},{"type":"text","text":"Returns nil if data is malformed or cannot otherwise be used to construct the event."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"midi1SMFRawBytes","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"DataProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}