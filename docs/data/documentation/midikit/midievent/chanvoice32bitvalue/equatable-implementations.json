{"sections":[],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue\/Equatable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue"]]},"metadata":{"title":"Equatable Implementations","role":"collectionGroup","modules":[{"name":"MIDIKit"}]},"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue\/!=(_:_:)","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue\/==(_:_:)"],"generated":true,"title":"Operators"}],"variants":[{"paths":["\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"title":"MIDIKit Value Types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","url":"\/documentation\/midikit\/midikitcore-value-types","kind":"article","role":"collectionGroup","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"title":"MIDIKitCore","role":"collectionGroup","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","type":"topic","kind":"article","url":"\/documentation\/midikit\/midikitcore"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice32BitValue":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue","title":"MIDIEvent.ChanVoice32BitValue","type":"topic","navigatorTitle":[{"text":"ChanVoice32BitValue","kind":"identifier"}],"url":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChanVoice32BitValue"}],"abstract":[{"type":"text","text":"Channel Voice 32-Bit (MIDI 2.0) Value"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice32BitValue/==(_:_:)":{"title":"==(_:_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue\/==(_:_:)","url":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/==(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","text":"MIDIEvent","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ChanVoice32BitValue","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO19ChanVoice32BitValueO"},{"kind":"text","text":", "},{"text":"MIDIEvent","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO"},{"kind":"text","text":"."},{"text":"ChanVoice32BitValue","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO19ChanVoice32BitValueO"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[]},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"type":"topic","title":"MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice32BitValue/!=(_:_:)":{"title":"!=(_:_:)","abstract":[],"url":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/!=(_:_:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice32BitValue\/!=(_:_:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}