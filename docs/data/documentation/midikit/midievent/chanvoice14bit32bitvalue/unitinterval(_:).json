{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"unitInterval","kind":"identifier"},{"kind":"text","text":"("},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue\/unitInterval(_:)"},"abstract":[{"type":"text","text":"Protocol-agnostic unit interval  ("},{"code":"0.0 ... 1.0","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Scaled automatically depending on MIDI protocol (1.0\/2.0) in use."}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue"]]},"metadata":{"modules":[{"name":"MIDIKit"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unitInterval"},{"text":"(","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","symbolKind":"case","roleHeading":"Case","title":"MIDIEvent.ChanVoice14Bit32BitValue.unitInterval(_:)","externalID":"s:11MIDIKitCore9MIDIEventO24ChanVoice14Bit32BitValueO12unitIntervalyAESdcAEmF"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitinterval(_:)"]}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","title":"MIDIKit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"type":"topic","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice14Bit32BitValue":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChanVoice14Bit32BitValue"}],"kind":"symbol","role":"symbol","title":"MIDIEvent.ChanVoice14Bit32BitValue","navigatorTitle":[{"kind":"identifier","text":"ChanVoice14Bit32BitValue"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue","url":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue","abstract":[{"text":"Channel Voice 14-Bit (MIDI 1.0) \/ 32-Bit (MIDI 2.0) Value","type":"text"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice14Bit32BitValue/unitInterval(_:)":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue\/unitInterval(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"unitInterval","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Protocol-agnostic unit interval  ("},{"code":"0.0 ... 1.0","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"Scaled automatically depending on MIDI protocol (1.0\/2.0) in use.","type":"text"}],"url":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitinterval(_:)","role":"symbol","type":"topic","title":"MIDIEvent.ChanVoice14Bit32BitValue.unitInterval(_:)","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"role":"collectionGroup","title":"MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"role":"collectionGroup","title":"MIDIKit Value Types","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article","type":"topic"}}}