{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitintervalvalue"]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue\/bipolarUnitIntervalValue","interfaceLanguage":"swift"},"sections":[],"metadata":{"role":"symbol","extendedModule":"MIDIKitCore","symbolKind":"property","roleHeading":"Instance Property","externalID":"s:11MIDIKitCore9MIDIEventO24ChanVoice14Bit32BitValueO019bipolarUnitIntervalH0Sdvp","title":"bipolarUnitIntervalValue","modules":[{"relatedModules":["MIDIKitCore"],"name":"MIDIKit"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bipolarUnitIntervalValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue"]]},"abstract":[{"type":"text","text":"Returns value as MIDI protocol-agnostic bipolar unit interval, converting if necessary."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bipolarUnitIntervalValue"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"kind":"article","url":"\/documentation\/midikit\/midikitcore","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"title":"MIDIKitCore"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice14Bit32BitValue/bipolarUnitIntervalValue":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bipolarUnitIntervalValue"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"title":"bipolarUnitIntervalValue","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue\/bipolarUnitIntervalValue","abstract":[{"type":"text","text":"Returns value as MIDI protocol-agnostic bipolar unit interval, converting if necessary."}],"role":"symbol","url":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitintervalvalue","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/ChanVoice14Bit32BitValue":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/ChanVoice14Bit32BitValue","title":"MIDIEvent.ChanVoice14Bit32BitValue","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChanVoice14Bit32BitValue"}],"kind":"symbol","url":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue","abstract":[{"text":"Channel Voice 14-Bit (MIDI 1.0) \/ 32-Bit (MIDI 2.0) Value","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChanVoice14Bit32BitValue"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"title":"MIDIKit Value Types","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","url":"\/documentation\/midikit\/midikitcore-value-types","type":"topic","abstract":[{"type":"text","text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit."}],"kind":"article"}}}