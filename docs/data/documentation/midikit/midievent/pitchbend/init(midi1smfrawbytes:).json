{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)"]}],"metadata":{"symbolKind":"init","extendedModule":"MIDIKitCore","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"midi1SMFRawBytes"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:10Foundation12DataProtocolP","text":"DataProtocol","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"roleHeading":"Initializer","role":"symbol","title":"init(midi1SMFRawBytes:)","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitCore"]}],"externalID":"s:11MIDIKitCore9MIDIEventO9PitchBendV0A3SMFE16midi1SMFRawBytesAEx_tKc10Foundation12DataProtocolRzlufc"},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend\/MIDIFileEventPayload-Implementations"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend\/MIDIFileEventPayload-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend\/init(midi1SMFRawBytes:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Initialize from raw event bytes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Returns nil if data is malformed or cannot otherwise be used to construct the event."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"midi1SMFRawBytes","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"rawBytes"},{"kind":"text","text":": some "},{"text":"DataProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/PitchBend":{"kind":"symbol","type":"topic","title":"MIDIEvent.PitchBend","navigatorTitle":[{"kind":"identifier","text":"PitchBend"}],"url":"\/documentation\/midikit\/midievent\/pitchbend","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend","abstract":[{"text":"Channel Voice Message: Pitch Bend","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PitchBend","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/PitchBend/init(midi1SMFRawBytes:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"midi1SMFRawBytes","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:10Foundation12DataProtocolP","text":"DataProtocol","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend\/init(midi1SMFRawBytes:)","abstract":[{"type":"text","text":"Initialize from raw event bytes."},{"type":"text","text":" "},{"text":"Returns nil if data is malformed or cannot otherwise be used to construct the event.","type":"text"}],"title":"init(midi1SMFRawBytes:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent":{"navigatorTitle":[{"text":"MIDIEvent","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent","url":"\/documentation\/midikit\/midievent","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIEvent"}],"role":"symbol","title":"MIDIEvent","type":"topic","abstract":[{"type":"text","text":"An individual MIDI Event."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore","kind":"article","role":"collectionGroup","title":"MIDIKitCore","type":"topic","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF-Internals":{"type":"topic","url":"\/documentation\/midikit\/midikitsmf-internals","role":"collectionGroup","abstract":[],"kind":"article","title":"Internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent-Channel-Voice":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent-Channel-Voice","url":"\/documentation\/midikit\/midievent-channel-voice","kind":"article","role":"collectionGroup","title":"Channel Voice","type":"topic","abstract":[{"type":"text","text":"Channel Voice events include notes, continuous controllers, pressure (aftertouch), program changes, and registered parameters (RPN\/NRPN). Additional per-note controllers are available when communicating with a device that supports MIDI 2.0."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"title":"MIDIKitSMF","url":"\/documentation\/midikit\/midikitsmf","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Standard MIDI File extension for MIDIKit."}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEvent/PitchBend/MIDIFileEventPayload-Implementations":{"title":"MIDIFileEventPayload Implementations","url":"\/documentation\/midikit\/midievent\/pitchbend\/midifileeventpayload-implementations","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEvent\/PitchBend\/MIDIFileEventPayload-Implementations","role":"collectionGroup","type":"topic","kind":"article"}}}