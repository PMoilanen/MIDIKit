{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"locate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"kind":"internalParam","text":"endpoints"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpoint","preciseIdentifier":"s:9MIDIKitIO12MIDIEndpointP","text":"MIDIEndpoint"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/midikit\/midiendpointidentity\/locate(in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity\/locate(in:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Uses the identity criteria to find the first match in an endpoint collection."},{"type":"text","text":" "},{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no matches are found."}],"kind":"symbol","metadata":{"role":"symbol","title":"locate(in:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"locate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:9MIDIKitIO20MIDIEndpointIdentityO6locate2inxSgSayxG_tAA0C0RzlF","extendedModule":"MIDIKitIO","modules":[{"name":"MIDIKit"}]},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity"]]},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIEndpoint":{"role":"symbol","title":"MIDIEndpoint","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEndpoint"}],"abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpoint","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEndpoint"}],"url":"\/documentation\/midikit\/midiendpoint"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"role":"collectionGroup","title":"MIDIKitIO","abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"role":"symbol","title":"MIDIManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"role":"collectionGroup","title":"Working With Endpoints","abstract":[{"type":"text","text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources)."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","type":"topic","url":"\/documentation\/midikit\/midikitio-endpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointIdentity":{"role":"symbol","title":"MIDIEndpointIdentity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIEndpointIdentity"}],"abstract":[{"type":"text","text":"Criterium with which to identify a MIDI endpoint."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIEndpointIdentity"}],"url":"\/documentation\/midikit\/midiendpointidentity"},"doc://MIDIKit/documentation/MIDIKit":{"role":"collection","title":"MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","kind":"symbol","type":"topic","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointIdentity/locate(in:)":{"role":"symbol","title":"locate(in:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"locate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Uses the identity criteria to find the first match in an endpoint collection."},{"type":"text","text":" "},{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no matches are found."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity\/locate(in:)","kind":"symbol","type":"topic","url":"\/documentation\/midikit\/midiendpointidentity\/locate(in:)"}}}