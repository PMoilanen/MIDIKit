{"metadata":{"externalID":"s:11TimecodeKit0A9FrameRateO15CompatibleGroupO","symbolKind":"enum","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CompatibleGroup"}],"roleHeading":"Enumeration","title":"TimecodeFrameRate.CompatibleGroup","modules":[{"relatedModules":["TimecodeKit"],"name":"MIDIKit"}],"extendedModule":"TimecodeKit","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CompatibleGroup","kind":"identifier"}]},"abstract":[{"text":"Enum describing compatible groupings of frame rates.","type":"text"}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscColor","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscColorWallTime","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscDrop","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/whole"]},{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/stringValue"]},{"title":"Type Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/table"]},{"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/CustomStringConvertible-Implementations","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/Equatable-Implementations"],"generated":true}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate"],["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/MIDIKit\/s12CaseIterableP","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompatibleGroup","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"These groupings assert that amidst each group the hours, minutes, and seconds values will always be identical.","type":"text"},{"text":" ","type":"text"},{"text":"Frames values may not literally match but will always correspond to the same duration of a timecode-second.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"At 1 hour of elapsed real (wall-clock) time, 30 and 60 fps are compatible with each other, but 29.97 is not:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"01:00:00:00 @ 30 fps \/\/ group A","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"01:00:00:00 @ 60 fps \/\/ group A"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"00:59:56:12 @ 29.97 fps \/\/ group B","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"30 and 60 fps both reach "},{"code":"01:00:00:00","type":"codeVoice"},{"type":"text","text":" at exactly the same time, then until the next timecode-second only the"},{"text":" ","type":"text"},{"type":"text","text":"frame number will differ. They will then both reach "},{"type":"codeVoice","code":"01:00:01:00"},{"type":"text","text":" at exactly the same time, and so on."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"These are intended for internal logic and not for end-user user interface."}]}],"type":"aside","name":"Note","style":"note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF-Internals":{"url":"\/documentation\/midikit\/midikitsmf-internals","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF-Internals","title":"Internals","kind":"article","abstract":[],"type":"topic","role":"collectionGroup"},"doc://MIDIKit/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/ntscColorWallTime":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscColorWallTime","url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolorwalltime","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ntscColorWallTime"}],"kind":"symbol","title":"TimecodeFrameRate.CompatibleGroup.ntscColorWallTime"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/whole":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/whole","abstract":[],"url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/whole","kind":"symbol","title":"TimecodeFrameRate.CompatibleGroup.whole","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"whole"}],"type":"topic","role":"symbol"},"doc://MIDIKit/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/MIDIKit\/SQ"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/Equatable-Implementations":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/Equatable-Implementations","kind":"article","abstract":[],"url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/equatable-implementations","role":"collectionGroup","type":"topic","title":"Equatable Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSync":{"title":"MIDIKitSync","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSync","url":"\/documentation\/midikit\/midikitsync","role":"collectionGroup","abstract":[{"type":"text","text":"MIDI synchronization protocol abstractions (MTC, etc.) for MIDIKit."}],"kind":"article","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate":{"role":"symbol","navigatorTitle":[{"text":"TimecodeFrameRate","kind":"identifier"}],"title":"TimecodeFrameRate","type":"topic","abstract":[{"text":"Industry-standard BITC (burn-in timecode) display rates.","type":"text"},{"type":"text","text":" "},{"text":"Certain rates may be drop-frame or non-drop-frame.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TimecodeFrameRate","kind":"identifier"}],"url":"\/documentation\/midikit\/timecodeframerate"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum","title":"TimecodeFrameRate.CompatibleGroup","url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum","kind":"symbol","abstract":[{"text":"Enum describing compatible groupings of frame rates.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompatibleGroup"}],"navigatorTitle":[{"kind":"identifier","text":"CompatibleGroup"}],"type":"topic","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/ntscColor":{"role":"symbol","url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolor","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ntscColor"}],"title":"TimecodeFrameRate.CompatibleGroup.ntscColor","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscColor","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/stringValue":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/stringValue","kind":"symbol","abstract":[{"type":"text","text":"Returns human-readable group string."}],"url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/stringvalue","role":"symbol","type":"topic","title":"stringValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValue"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://MIDIKit/s12CaseIterableP":{"type":"unresolvable","title":"Swift.CaseIterable","identifier":"doc:\/\/MIDIKit\/s12CaseIterableP"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/ntscDrop":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/ntscDrop","kind":"symbol","abstract":[],"url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntscdrop","role":"symbol","type":"topic","title":"TimecodeFrameRate.CompatibleGroup.ntscDrop","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ntscDrop","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/table":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/table","kind":"symbol","abstract":[{"text":"Constants table of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate"},{"type":"text","text":" groups that share HH:MM:SS alignment between them."}],"url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/table","role":"symbol","type":"topic","title":"table","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"table"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"TimecodeFrameRate","preciseIdentifier":"s:11TimecodeKit0A9FrameRateO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CompatibleGroup","preciseIdentifier":"s:11TimecodeKit0A9FrameRateO15CompatibleGroupO"},{"kind":"text","text":" : ["},{"kind":"typeIdentifier","text":"TimecodeFrameRate","preciseIdentifier":"s:11TimecodeKit0A9FrameRateO"},{"text":"]]","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitSMF":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitSMF","role":"collectionGroup","title":"MIDIKitSMF","kind":"article","type":"topic","abstract":[{"type":"text","text":"Standard MIDI File extension for MIDIKit."}],"url":"\/documentation\/midikit\/midikitsmf"},"doc://MIDIKit/documentation/MIDIKit/TimecodeFrameRate/CompatibleGroup-swift.enum/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/customstringconvertible-implementations","abstract":[],"kind":"article"},"doc://MIDIKit/SH":{"identifier":"doc:\/\/MIDIKit\/SH","type":"unresolvable","title":"Swift.Hashable"}}}