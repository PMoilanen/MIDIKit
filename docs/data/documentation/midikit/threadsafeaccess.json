{"metadata":{"externalID":"s:11MIDIKitCore16ThreadSafeAccessC","symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ThreadSafeAccess"}],"roleHeading":"Class","title":"ThreadSafeAccess","modules":[{"name":"MIDIKit"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThreadSafeAccess"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess"},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/wrappedValue"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"title":"Utilities","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIParameterNumberUtils"],"generated":true}],"abstract":[{"type":"codeVoice","code":"ThreadSafeAccess"},{"type":"text","text":": A property wrapper that ensures thread-safe atomic access to a value."},{"text":" ","type":"text"},{"text":"Multiple read accesses can potentially read at the same time, just not during a write.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/MIDIKit\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Internals"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ThreadSafeAccess","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"By using ","type":"text"},{"code":"pthread","type":"codeVoice"},{"text":" to do the locking, this safer than using a ","type":"text"},{"code":"DispatchQueue\/barrier","type":"codeVoice"},{"type":"text","text":" as there"},{"type":"text","text":" "},{"type":"text","text":"isnâ€™t a chance of priority inversion."}]},{"inlineContent":[{"text":"This is safe to use on collection types (","type":"text"},{"type":"codeVoice","code":"Array"},{"type":"text","text":", "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":", etc.)."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not instantiate this wrapper on a variable declaration inside a function body or"},{"type":"text","text":" "},{"text":"closure body. Only wrap static or instance variables.","type":"text"}]}],"type":"aside","name":"Warning","style":"warning"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/threadsafeaccess"]}],"references":{"doc://MIDIKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP","title":"Swift.Sendable"},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess/init(wrappedValue:)":{"type":"topic","title":"init(wrappedValue:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/init(wrappedValue:)","abstract":[],"url":"\/documentation\/midikit\/threadsafeaccess\/init(wrappedvalue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","role":"collectionGroup","kind":"article","title":"MIDIKitCore","type":"topic","url":"\/documentation\/midikit\/midikitcore","abstract":[{"text":"Essential MIDI types used by all modules in MIDIKit.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess":{"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess","abstract":[{"code":"ThreadSafeAccess","type":"codeVoice"},{"type":"text","text":": A property wrapper that ensures thread-safe atomic access to a value."},{"text":" ","type":"text"},{"type":"text","text":"Multiple read accesses can potentially read at the same time, just not during a write."}],"type":"topic","navigatorTitle":[{"text":"ThreadSafeAccess","kind":"identifier"}],"url":"\/documentation\/midikit\/threadsafeaccess","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThreadSafeAccess"}],"title":"ThreadSafeAccess"},"doc://MIDIKit/documentation/MIDIKit/MIDIParameterNumberUtils":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIParameterNumberUtils","kind":"symbol","abstract":[],"url":"\/documentation\/midikit\/midiparameternumberutils","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIParameterNumberUtils"}],"title":"MIDIParameterNumberUtils","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIParameterNumberUtils","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Internals":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Internals","url":"\/documentation\/midikit\/midikitcore-internals","title":"Internals","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit":{"kind":"symbol","type":"topic","url":"\/documentation\/midikit","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"title":"MIDIKit","role":"collection"},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess/wrappedValue":{"type":"topic","url":"\/documentation\/midikit\/threadsafeaccess\/wrappedvalue","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"title":"wrappedValue","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/wrappedValue","role":"symbol","abstract":[]}}}