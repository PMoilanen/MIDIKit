{"abstract":[{"type":"codeVoice","code":"ThreadSafeAccess"},{"type":"text","text":": A property wrapper that ensures thread-safe atomic access to a value."},{"type":"text","text":" "},{"type":"text","text":"Multiple read accesses can potentially read at the same time, just not during a write."}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Internals"]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/wrappedValue"],"title":"Instance Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/threadsafeaccess"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThreadSafeAccess"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By using "},{"code":"pthread","type":"codeVoice"},{"text":" to do the locking, this safer than using a ","type":"text"},{"type":"codeVoice","code":"DispatchQueue\/barrier"},{"text":" as there","type":"text"},{"type":"text","text":" "},{"type":"text","text":"isnâ€™t a chance of priority inversion."}]},{"inlineContent":[{"text":"This is safe to use on collection types (","type":"text"},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":", etc.).","type":"text"}],"type":"paragraph"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not instantiate this wrapper on a variable declaration inside a function body or"},{"text":" ","type":"text"},{"text":"closure body. Only wrap static or instance variables.","type":"text"}]}],"style":"warning"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Utilities","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIParameterNumberUtils"]}],"metadata":{"navigatorTitle":[{"text":"ThreadSafeAccess","kind":"identifier"}],"externalID":"s:11MIDIKitCore16ThreadSafeAccessC","roleHeading":"Class","role":"symbol","title":"ThreadSafeAccess","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ThreadSafeAccess","kind":"identifier"}],"modules":[{"name":"MIDIKit"}]},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/MIDIKit\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Internals":{"title":"Internals","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Internals","role":"collectionGroup","url":"\/documentation\/midikit\/midikitcore-internals","kind":"article","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"kind":"article","url":"\/documentation\/midikit\/midikitcore","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"title":"MIDIKitCore"},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess/wrappedValue":{"url":"\/documentation\/midikit\/threadsafeaccess\/wrappedvalue","type":"topic","kind":"symbol","abstract":[],"title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/wrappedValue"},"doc://MIDIKit/documentation/MIDIKit/MIDIParameterNumberUtils":{"role":"symbol","abstract":[],"url":"\/documentation\/midikit\/midiparameternumberutils","type":"topic","title":"MIDIParameterNumberUtils","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIParameterNumberUtils","kind":"identifier"}],"navigatorTitle":[{"text":"MIDIParameterNumberUtils","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIParameterNumberUtils"},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess\/init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/midikit\/threadsafeaccess\/init(wrappedvalue:)"},"doc://MIDIKit/documentation/MIDIKit/ThreadSafeAccess":{"role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ThreadSafeAccess","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadSafeAccess"}],"navigatorTitle":[{"text":"ThreadSafeAccess","kind":"identifier"}],"title":"ThreadSafeAccess","type":"topic","url":"\/documentation\/midikit\/threadsafeaccess","abstract":[{"type":"codeVoice","code":"ThreadSafeAccess"},{"text":": A property wrapper that ensures thread-safe atomic access to a value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Multiple read accesses can potentially read at the same time, just not during a write."}],"kind":"symbol"},"doc://MIDIKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKit\/s8SendableP","title":"Swift.Sendable"}}}