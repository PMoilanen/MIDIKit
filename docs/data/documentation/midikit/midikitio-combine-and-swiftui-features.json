{"kind":"article","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" is a "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" subclass that contains several instance properties that are observable in a Combine or SwiftUI context. This can be useful in updating user interface displaying a list of MIDI endpoints in real-time as endpoints are added or removed from the system, for example."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where use of Combine is not possible, notifications of changes can be received by storing a handler closure in "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/notificationHandler-swift.property","isActive":true},{"text":" where you might then update user interface to reflect the new collection of endpoints.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"},"abstract":[{"type":"text","text":"Certain objects and properties are observable."}],"metadata":{"role":"article","roleHeading":"Article","title":"Combine and SwiftUI Features","modules":[{"name":"MIDIKit"}]},"variants":[{"paths":["\/documentation\/midikit\/midikitio-combine-and-swiftui-features"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager"],"title":"Manager"}],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"kind":"article","abstract":[],"url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","role":"collectionGroup","title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"role":"symbol","abstract":[{"text":"MIDI devices in the system.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","kind":"symbol","title":"observableDevices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"url":"\/documentation\/midikit\/midikitio","kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/endpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endpoints","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."}],"kind":"symbol","title":"endpoints","url":"\/documentation\/midikit\/midimanager\/endpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"kind":"article","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","title":"Creating Ports","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"kind":"article","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"url":"\/documentation\/midikit\/midimanager-creating-connections","role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"observableEndpoints","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"role":"symbol","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","title":"observableEndpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","url":"\/documentation\/midikit\/midimanager\/devices","abstract":[{"text":"MIDI devices in the system.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"devices"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"role":"symbol","title":"devices"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableMIDIManager"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is observable in a SwiftUI or Combine context."},{"type":"text","text":" "},{"type":"text","text":"Two new properties are available: "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikit\/observablemidimanager","title":"ObservableMIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","role":"symbol","kind":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}],"url":"\/documentation\/midikit\/midimanager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/notificationHandler-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"Handler that is called when state has changed in the manager."}],"url":"\/documentation\/midikit\/midimanager\/notificationhandler-swift.property","role":"symbol","title":"notificationHandler","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/notificationHandler-swift.property","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"notificationHandler","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager","text":"MIDIManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"NotificationHandler","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC19NotificationHandlera"},{"kind":"text","text":"?"}]},"doc://MIDIKit/documentation/MIDIKit":{"url":"\/documentation\/midikit","type":"topic","abstract":[{"type":"text","text":"MIDIKit umbrella import that includes all MIDIKit modules."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","title":"MIDIKit"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","title":"Receiving Notifications","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"url":"\/documentation\/midikit\/midimanager-receiving-notifications"}}}