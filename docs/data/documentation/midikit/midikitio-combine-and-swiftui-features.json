{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midikitio-combine-and-swiftui-features"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager"},{"text":" is a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"text":" subclass that contains several instance properties that are observable in a Combine or SwiftUI context. This can be useful in updating user interface displaying a list of MIDI endpoints in real-time as endpoints are added or removed from the system, for example.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where use of Combine is not possible, notifications of changes can be received by storing a handler closure in "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/notificationHandler-swift.property","type":"reference","isActive":true},{"text":" where you might then update user interface to reflect the new collection of endpoints.","type":"text"}]}]}],"metadata":{"role":"article","modules":[{"name":"MIDIKit"}],"roleHeading":"Article","title":"Combine and SwiftUI Features"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"abstract":[{"text":"Certain objects and properties are observable.","type":"text"}],"seeAlsoSections":[{"title":"Manager","generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager"]}],"kind":"article","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager/notificationHandler-swift.property":{"type":"topic","abstract":[{"type":"text","text":"Handler that is called when state has changed in the manager."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/notificationHandler-swift.property","url":"\/documentation\/midikit\/midimanager\/notificationhandler-swift.property","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationHandler"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)MIDIManager","text":"MIDIManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC19NotificationHandlera","kind":"typeIdentifier","text":"NotificationHandler"},{"text":"?","kind":"text"}],"title":"notificationHandler"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"url":"\/documentation\/midikit\/midimanager\/devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","type":"topic","title":"devices","role":"symbol","abstract":[{"type":"text","text":"MIDI devices in the system."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"type":"topic","url":"\/documentation\/midikit\/midimanager-creating-connections","title":"Creating Connections","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"topic","title":"observableDevices","role":"symbol","abstract":[{"type":"text","text":"MIDI devices in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"observableDevices","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"title":"MIDIKitIO","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"url":"\/documentation\/midikit\/midikitio"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"type":"topic","abstract":[{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true,"type":"reference"},{"text":" subclass that is observable in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Two new properties are available: "},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","url":"\/documentation\/midikit\/observablemidimanager","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableMIDIManager"}],"title":"ObservableMIDIManager"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/endpoints":{"url":"\/documentation\/midikit\/midimanager\/endpoints","type":"topic","role":"symbol","title":"endpoints","kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints","abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints","kind":"typeIdentifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","kind":"article","role":"collectionGroup","title":"Removing Ports and Connections"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"title":"Receiving Notifications","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","type":"topic","abstract":[{"text":"Specify a handler to receive Core MIDI system notifications.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/midikit\/midimanager-receiving-notifications","kind":"article"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"type":"topic","abstract":[{"text":"MIDI input and output endpoints in the system.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"type":"text","text":"."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableEndpoints"},{"kind":"text","text":": "},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"title":"observableEndpoints"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"url":"\/documentation\/midikit\/midimanager","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","url":"\/documentation\/midikit\/midimanager-creating-ports","kind":"article","role":"collectionGroup","title":"Creating Ports"},"doc://MIDIKit/documentation/MIDIKit":{"title":"MIDIKit","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"url":"\/documentation\/midikit"}}}