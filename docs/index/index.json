{"interfaceLanguages":{"swift":[{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikit-getting-started","title":"Getting Started","type":"article"},{"title":"Modules","type":"groupMarker"},{"children":[{"title":"Events","type":"groupMarker"},{"children":[{"title":"Categories","type":"groupMarker"},{"children":[{"title":"Constructors (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-5hwd6","title":"static func noteOn(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-3aq0d","title":"static func noteOn(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-9ntbn","title":"static func noteOff(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-40eu2","title":"static func noteOff(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-8m6c8","title":"static func notePressure(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-9knkb","title":"static func notePressure(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-1r3oe","title":"static func cc(UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-7k06z","title":"static func cc(MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccrpn(_:channel:group:)","title":"static func ccRPN(MIDIEvent.CC.Controller.RPN, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccnrpn(_:channel:group:)","title":"static func ccNRPN(MIDIEvent.CC.Controller.NRPN, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(value:channel:group:)","title":"static func pitchBend(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure(amount:channel:group:)","title":"static func pressure(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange(program:bank:channel:group:)","title":"static func programChange(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-91ea3","title":"static func noteCC(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-8vd58","title":"static func noteCC(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qoa8","title":"static func notePitchBend(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qk4i","title":"static func notePitchBend(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-9f1cj","title":"static func noteManagement(note: UInt7, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-3o4c8","title":"static func noteManagement(note: MIDINote, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:)","title":"case noteOn(MIDIEvent.NoteOn)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-25kbb","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-4s0ia","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1zerovelocityasnoteoff","title":"var midi1ZeroVelocityAsNoteOff: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/==(_:_:)","title":"static func == (MIDIEvent.NoteOn, MIDIEvent.NoteOn) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NoteOn.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteon","title":"MIDIEvent.NoteOn","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:)","title":"case noteOff(MIDIEvent.NoteOff)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-8mn5r","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-99wpk","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NoteOff.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteoff","title":"MIDIEvent.NoteOff","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepressure(_:)","title":"case notePressure(MIDIEvent.NotePressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-4wnrd","title":"init(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-5k2yu","title":"init(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.property","title":"var amount: MIDIEvent.NotePressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/note","title":"var note: MIDINote","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.typealias","title":"MIDIEvent.NotePressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amountvalidated","title":"MIDIEvent.NotePressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NotePressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepressure","title":"MIDIEvent.NotePressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/cc(_:)","title":"case cc(MIDIEvent.CC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-8rt6a","title":"init(controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-b9q8","title":"init(controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.property","title":"var controller: MIDIEvent.CC.Controller","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.property","title":"var value: MIDIEvent.CC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.typealias","title":"MIDIEvent.CC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/cc\/valuevalidated","title":"MIDIEvent.CC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-6s3dq","title":"static func != <T>(T, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-9fgjo","title":"static func != <T>(MIDIEvent.CC.Controller, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-5k5fh","title":"static func == <T>(MIDIEvent.CC.Controller, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-6y8wz","title":"static func == <T>(T, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/datadecrement","title":"case dataDecrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataincrement","title":"case dataIncrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose5","title":"case generalPurpose5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose6","title":"case generalPurpose6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose7","title":"case generalPurpose7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose8","title":"case generalPurpose8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/highresolutionvelocityprefix","title":"case highResolutionVelocityPrefix","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/hold2","title":"case hold2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/legatofootswitch","title":"case legatoFootswitch","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb(for:)","title":"case lsb(for: MIDIEvent.CC.Controller.LSB)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode(_:)","title":"case mode(MIDIEvent.CC.Controller.Mode)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnlsb","title":"case nrpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnmsb","title":"case nrpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamento","title":"case portamento","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentocontrol","title":"case portamentoControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnlsb","title":"case rpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnmsb","title":"case rpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/softpedal","title":"case softPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sostenutopedal","title":"case sostenutoPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sustainpedal","title":"case sustainPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/init(number:)","title":"init(number: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/number","title":"var number: UInt7","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/channelvolume","title":"case channelVolume","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.LSB.Undefined)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc9","title":"case cc9","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/msbcontroller","title":"var msbController: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined","title":"MIDIEvent.CC.Controller.LSB.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb","title":"MIDIEvent.CC.Controller.LSB","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allnotesoff","title":"case allNotesOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allsoundoff","title":"case allSoundOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/localcontrol","title":"case localControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/monomodeon","title":"case monoModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeoff","title":"case omniModeOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeon","title":"case omniModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/polymodeon","title":"case polyModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/resetallcontrollers","title":"case resetAllControllers","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode","title":"MIDIEvent.CC.Controller.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/parameter","title":"var parameter: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/events(channel:group:)","title":"func events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn","title":"MIDIEvent.CC.Controller.NRPN","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/channelcoarsetuning(_:)","title":"case channelCoarseTuning(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/channelfinetuning(_:)","title":"case channelFineTuning(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/modulationdepthrange(dataentrymsb:dataentrylsb:)","title":"case modulationDepthRange(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/mpeconfigurationmessage(dataentrymsb:dataentrylsb:)","title":"case mpeConfigurationMessage(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/pitchbendsensitivity(semitones:cents:)","title":"case pitchBendSensitivity(semitones: UInt7, cents: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalazimuthangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalAzimuthAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionaldistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalelevationangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalElevationAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalgain(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGain(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalgainatmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGainAtMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalpanspreadangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalPanSpreadAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalreferencedistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalReferenceDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalrollangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalRollAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/tuningbankselect(number:)","title":"case tuningBankSelect(number: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/tuningprogramchange(number:)","title":"case tuningProgramChange(number: UInt7)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/parameter","title":"var parameter: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/events(channel:group:)","title":"func events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn","title":"MIDIEvent.CC.Controller.RPN","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc90","title":"case cc90","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined","title":"MIDIEvent.CC.Controller.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.typealias","title":"MIDIEvent.CC.Controller.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.CC.Controller]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-7fi2c","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum","title":"MIDIEvent.CC.Controller","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.CC.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/cc\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc","title":"MIDIEvent.CC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(_:)","title":"case pitchBend(MIDIEvent.PitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(value:channel:group:)","title":"init(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.property","title":"var value: MIDIEvent.PitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.typealias","title":"MIDIEvent.PitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/valuevalidated","title":"MIDIEvent.PitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.PitchBend.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pitchbend","title":"MIDIEvent.PitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pressure(_:)","title":"case pressure(MIDIEvent.Pressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(amount:channel:group:)","title":"init(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.property","title":"var amount: MIDIEvent.Pressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.typealias","title":"MIDIEvent.Pressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amountvalidated","title":"MIDIEvent.Pressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.Pressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pressure","title":"MIDIEvent.Pressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/programchange(_:)","title":"case programChange(MIDIEvent.ProgramChange)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(program:bank:channel:group:)","title":"init(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.property","title":"var bank: MIDIEvent.ProgramChange.Bank","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/program","title":"var program: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(_:)","title":"case bankSelect(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/nobankselect","title":"case noBankSelect","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(msb:lsb:)","title":"static func bankSelect(msb: UInt7, lsb: UInt7) -> MIDIEvent.ProgramChange.Bank","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum","title":"MIDIEvent.ProgramChange.Bank","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.ProgramChange.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/programchange\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange","title":"MIDIEvent.ProgramChange","type":"struct"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(_:)","title":"case noteCC(MIDIEvent.NoteCC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-1cswx","title":"init(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-96y16","title":"init(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/controller","title":"var controller: MIDIEvent.NoteCC.PerNoteController","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.property","title":"var value: MIDIEvent.NoteCC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.typealias","title":"MIDIEvent.NoteCC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notecc\/valuevalidated","title":"MIDIEvent.NoteCC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable(_:)","title":"case assignable(MIDIEvent.NoteCC.PerNoteController.Assignable)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)","title":"case registered(MIDIEvent.NoteCC.PerNoteController.Registered)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/number","title":"var number: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable","title":"MIDIEvent.NoteCC.PerNoteController.Assignable","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/fine","title":"var fine: UInt25","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Pitch7_25","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-2iqvl","title":"static func != <T>(T, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4hg0e","title":"static func != <T>(MIDIEvent.NoteCC.PerNoteController.Registered, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-2j2mi","title":"static func == <T>(T, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-3hpch","title":"static func == <T>(MIDIEvent.NoteCC.PerNoteController.Registered, T) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.enum.case","title":"case pitch7_25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined(_:)","title":"case undefined(MIDIEvent.NoteCC.PerNoteController.Registered.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/init(number:)","title":"init(number: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/number","title":"var number: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc0","title":"case cc0","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc100","title":"case cc100","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc101","title":"case cc101","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc12","title":"case cc12","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc120","title":"case cc120","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc121","title":"case cc121","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc122","title":"case cc122","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc123","title":"case cc123","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc124","title":"case cc124","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc125","title":"case cc125","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc126","title":"case cc126","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc127","title":"case cc127","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc128","title":"case cc128","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc129","title":"case cc129","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc13","title":"case cc13","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc130","title":"case cc130","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc131","title":"case cc131","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc132","title":"case cc132","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc133","title":"case cc133","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc134","title":"case cc134","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc135","title":"case cc135","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc136","title":"case cc136","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc137","title":"case cc137","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc138","title":"case cc138","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc139","title":"case cc139","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc140","title":"case cc140","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc141","title":"case cc141","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc142","title":"case cc142","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc143","title":"case cc143","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc144","title":"case cc144","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc145","title":"case cc145","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc146","title":"case cc146","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc147","title":"case cc147","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc148","title":"case cc148","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc149","title":"case cc149","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc150","title":"case cc150","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc151","title":"case cc151","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc152","title":"case cc152","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc153","title":"case cc153","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc154","title":"case cc154","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc155","title":"case cc155","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc156","title":"case cc156","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc157","title":"case cc157","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc158","title":"case cc158","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc159","title":"case cc159","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc16","title":"case cc16","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc160","title":"case cc160","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc161","title":"case cc161","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc162","title":"case cc162","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc163","title":"case cc163","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc164","title":"case cc164","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc165","title":"case cc165","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc166","title":"case cc166","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc167","title":"case cc167","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc168","title":"case cc168","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc169","title":"case cc169","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc17","title":"case cc17","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc170","title":"case cc170","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc171","title":"case cc171","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc172","title":"case cc172","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc173","title":"case cc173","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc174","title":"case cc174","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc175","title":"case cc175","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc176","title":"case cc176","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc177","title":"case cc177","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc178","title":"case cc178","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc179","title":"case cc179","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc18","title":"case cc18","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc180","title":"case cc180","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc181","title":"case cc181","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc182","title":"case cc182","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc183","title":"case cc183","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc184","title":"case cc184","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc185","title":"case cc185","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc186","title":"case cc186","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc187","title":"case cc187","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc188","title":"case cc188","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc189","title":"case cc189","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc19","title":"case cc19","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc190","title":"case cc190","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc191","title":"case cc191","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc192","title":"case cc192","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc193","title":"case cc193","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc194","title":"case cc194","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc195","title":"case cc195","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc196","title":"case cc196","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc197","title":"case cc197","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc198","title":"case cc198","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc199","title":"case cc199","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc200","title":"case cc200","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc201","title":"case cc201","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc202","title":"case cc202","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc203","title":"case cc203","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc204","title":"case cc204","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc205","title":"case cc205","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc206","title":"case cc206","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc207","title":"case cc207","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc208","title":"case cc208","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc209","title":"case cc209","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc210","title":"case cc210","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc211","title":"case cc211","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc212","title":"case cc212","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc213","title":"case cc213","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc214","title":"case cc214","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc215","title":"case cc215","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc216","title":"case cc216","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc217","title":"case cc217","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc218","title":"case cc218","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc219","title":"case cc219","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc220","title":"case cc220","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc221","title":"case cc221","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc222","title":"case cc222","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc223","title":"case cc223","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc224","title":"case cc224","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc225","title":"case cc225","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc226","title":"case cc226","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc227","title":"case cc227","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc228","title":"case cc228","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc229","title":"case cc229","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc230","title":"case cc230","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc231","title":"case cc231","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc232","title":"case cc232","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc233","title":"case cc233","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc234","title":"case cc234","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc235","title":"case cc235","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc236","title":"case cc236","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc237","title":"case cc237","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc238","title":"case cc238","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc239","title":"case cc239","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc240","title":"case cc240","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc241","title":"case cc241","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc242","title":"case cc242","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc243","title":"case cc243","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc244","title":"case cc244","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc245","title":"case cc245","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc246","title":"case cc246","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc247","title":"case cc247","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc248","title":"case cc248","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc249","title":"case cc249","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc250","title":"case cc250","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc251","title":"case cc251","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc252","title":"case cc252","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc253","title":"case cc253","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc254","title":"case cc254","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc255","title":"case cc255","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc32","title":"case cc32","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc33","title":"case cc33","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc34","title":"case cc34","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc35","title":"case cc35","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc36","title":"case cc36","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc37","title":"case cc37","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc38","title":"case cc38","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc39","title":"case cc39","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc4","title":"case cc4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc40","title":"case cc40","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc41","title":"case cc41","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc42","title":"case cc42","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc43","title":"case cc43","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc44","title":"case cc44","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc45","title":"case cc45","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc46","title":"case cc46","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc47","title":"case cc47","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc48","title":"case cc48","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc49","title":"case cc49","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc5","title":"case cc5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc50","title":"case cc50","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc51","title":"case cc51","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc52","title":"case cc52","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc53","title":"case cc53","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc54","title":"case cc54","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc55","title":"case cc55","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc56","title":"case cc56","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc57","title":"case cc57","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc58","title":"case cc58","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc59","title":"case cc59","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc6","title":"case cc6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc60","title":"case cc60","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc61","title":"case cc61","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc62","title":"case cc62","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc63","title":"case cc63","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc64","title":"case cc64","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc65","title":"case cc65","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc66","title":"case cc66","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc67","title":"case cc67","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc68","title":"case cc68","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc69","title":"case cc69","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc80","title":"case cc80","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc81","title":"case cc81","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc82","title":"case cc82","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc83","title":"case cc83","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc84","title":"case cc84","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc88","title":"case cc88","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc90","title":"case cc90","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc96","title":"case cc96","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc97","title":"case cc97","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc98","title":"case cc98","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc99","title":"case cc99","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/controller","title":"var controller: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.typealias","title":"MIDIEvent.NoteCC.PerNoteController.Registered.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.NoteCC.PerNoteController.Registered]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4uipw","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered","title":"MIDIEvent.NoteCC.PerNoteController.Registered","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller","title":"MIDIEvent.NoteCC.PerNoteController","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc","title":"MIDIEvent.NoteCC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(_:)","title":"case notePitchBend(MIDIEvent.NotePitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-3plbb","title":"init(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-50vvj","title":"init(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.property","title":"var value: MIDIEvent.NotePitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.typealias","title":"MIDIEvent.NotePitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/valuevalidated","title":"MIDIEvent.NotePitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend","title":"MIDIEvent.NotePitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(_:)","title":"case noteManagement(MIDIEvent.NoteManagement)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-4ur90","title":"init(note: MIDINote, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-7mosa","title":"init(note: UInt7, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflags","title":"var optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/detachpernotecontrollers","title":"case detachPerNoteControllers","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/resetpernotecontrollers","title":"case resetPerNoteControllers","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag","title":"MIDIEvent.NoteManagement.OptionFlag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement","title":"MIDIEvent.NoteManagement","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-2kk3a","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-3pzrg","title":"init(BytePair)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-7oxv7","title":"init(Double)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(coarse:fine:)","title":"init(coarse: UInt7, fine: UInt9)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/fine","title":"var fine: UInt9","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9","title":"MIDIEvent.NoteAttribute.Pitch7_9","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/manufacturerspecific(data:)","title":"case manufacturerSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(_:)","title":"case pitch7_9(MIDIEvent.NoteAttribute.Pitch7_9)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/profilespecific(data:)","title":"case profileSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/undefined(attributetype:data:)","title":"case undefined(attributeType: UInt8, data: UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/init(type:data:)","title":"init(type: UInt8, data: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributedata","title":"var attributeData: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributetype","title":"var attributeType: UInt8","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(coarse:fine:)","title":"static func pitch7_9(coarse: UInt7, fine: UInt9) -> MIDIEvent.NoteAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute","title":"MIDIEvent.NoteAttribute","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/notevelocity","title":"MIDIEvent.NoteVelocity","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notevelocityvalidated","title":"MIDIEvent.NoteVelocityValidated","type":"typealias"}],"path":"\/documentation\/midikit\/midievent-channel-voice","title":"Channel Voice","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(midibeat:group:)","title":"static func songPositionPointer(midiBeat: UInt14, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect(number:group:)","title":"static func songSelect(number: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(databyte:group:)","title":"static func timecodeQuarterFrame(dataByte: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(group:)","title":"static func tuneRequest(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(bus:group:)","title":"static func unofficialBusSelect(bus: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(_:)","title":"case songPositionPointer(MIDIEvent.SongPositionPointer)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/init(midibeat:group:)","title":"init(midiBeat: UInt14, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midibeat","title":"var midiBeat: UInt14","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer","title":"MIDIEvent.SongPositionPointer","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/songselect(_:)","title":"case songSelect(MIDIEvent.SongSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/init(number:group:)","title":"init(number: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songselect\/number","title":"var number: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songselect","title":"MIDIEvent.SongSelect","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(_:)","title":"case timecodeQuarterFrame(MIDIEvent.TimecodeQuarterFrame)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/init(databyte:group:)","title":"init(dataByte: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/databyte","title":"var dataByte: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe","title":"MIDIEvent.TimecodeQuarterFrame","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(_:)","title":"case tuneRequest(MIDIEvent.TuneRequest)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/tunerequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/tunerequest","title":"MIDIEvent.TuneRequest","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(_:)","title":"case unofficialBusSelect(MIDIEvent.UnofficialBusSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/init(bus:group:)","title":"init(bus: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/bus","title":"var bus: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect","title":"MIDIEvent.UnofficialBusSelect","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-common","title":"System Common","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawhexstring:group:)","title":"static func sysEx7<S>(rawHexString: S, group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawbytes:group:)","title":"static func sysEx7(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(manufacturer:data:group:)","title":"static func sysEx8(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(rawbytes:group:)","title":"static func sysEx8(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx8(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(_:)","title":"case sysEx7(MIDIEvent.SysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawhexstring(leadingf0:trailingf7:separator:)","title":"func midi1RawHexString(leadingF0: Bool, trailingF7: Bool, separator: String?) -> String","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.SysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex7","title":"MIDIEvent.SysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(_:)","title":"case universalSysEx7(MIDIEvent.UniversalSysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.UniversalSysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7","title":"MIDIEvent.UniversalSysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/sysex8(_:)","title":"case sysEx8(MIDIEvent.SysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex8","title":"MIDIEvent.SysEx8","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(_:)","title":"case universalSysEx8(MIDIEvent.UniversalSysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8","title":"MIDIEvent.UniversalSysEx8","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/manufacturer(_:)","title":"case manufacturer(MIDIEvent.SysExManufacturer)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/universal(_:)","title":"case universal(MIDIEvent.UniversalSysExType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexid","title":"MIDIEvent.SysExID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/onebyte(_:)","title":"case oneByte(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/threebyte(byte2:byte3:)","title":"case threeByte(byte2: UInt7, byte3: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/educational()","title":"static func educational() -> MIDIEvent.SysExManufacturer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer","title":"MIDIEvent.SysExManufacturer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/nonrealtime","title":"case nonRealTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/realtime","title":"case realTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawuint8value:)","title":"init?(rawUInt8Value: UInt8)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawvalue:)","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype","title":"MIDIEvent.UniversalSysExType","type":"enum"}],"path":"\/documentation\/midikit\/midievent-system-exclusive","title":"System Exclusive","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(group:)","title":"static func start(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop(group:)","title":"static func stop(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue(group:)","title":"static func `continue`(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock(group:)","title":"static func timingClock(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset(group:)","title":"static func systemReset(group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(_:)","title":"case start(MIDIEvent.Start)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/start\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/start","title":"MIDIEvent.Start","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/stop(_:)","title":"case stop(MIDIEvent.Stop)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/stop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/stop","title":"MIDIEvent.Stop","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/continue(_:)","title":"case `continue`(MIDIEvent.Continue)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/continue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/continue","title":"MIDIEvent.Continue","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timingclock(_:)","title":"case timingClock(MIDIEvent.TimingClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timingclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timingclock","title":"MIDIEvent.TimingClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/systemreset(_:)","title":"case systemReset(MIDIEvent.SystemReset)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/systemreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/systemreset","title":"MIDIEvent.SystemReset","type":"struct"},{"title":"Deprecated in MIDI 2.0","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing(group:)","title":"static func activeSensing(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing(_:)","title":"case activeSensing(MIDIEvent.ActiveSensing)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/activesensing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/activesensing","title":"MIDIEvent.ActiveSensing","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-real-time","title":"System Real-Time","type":"symbol"},{"children":[{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(group:)","title":"static func noOp(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrclock(time:group:)","title":"static func jrClock(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(time:group:)","title":"static func jrTimestamp(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(_:)","title":"case noOp(MIDIEvent.NoOp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noop","title":"MIDIEvent.NoOp","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrclock(_:)","title":"case jrClock(MIDIEvent.JRClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrclock","title":"MIDIEvent.JRClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(_:)","title":"case jrTimestamp(MIDIEvent.JRTimestamp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp","title":"MIDIEvent.JRTimestamp","type":"struct"}],"path":"\/documentation\/midikit\/midievent-utility","title":"Utility Messages","type":"symbol"},{"title":"General Properties","type":"groupMarker"},{"children":[{"title":"Channel Voice","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/channel","title":"var channel: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/group","title":"var group: UInt4","type":"property"}],"path":"\/documentation\/midikit\/midievent-general-properties","title":"General Properties","type":"symbol"},{"title":"Event Filtering","type":"groupMarker"},{"children":[{"title":"Filtering","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice","title":"var isChannelVoice: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftype:)","title":"func isChannelVoice(ofType: MIDIEvent.ChanVoiceType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftypes:)","title":"func isChannelVoice(ofTypes: Set<MIDIEvent.ChanVoiceType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon","title":"var isSystemCommon: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftype:)","title":"func isSystemCommon(ofType: MIDIEvent.SysCommonType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftypes:)","title":"func isSystemCommon(ofTypes: Set<MIDIEvent.SysCommonType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive","title":"var isSystemExclusive: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftype:)","title":"func isSystemExclusive(ofType: MIDIEvent.SysExType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftypes:)","title":"func isSystemExclusive(ofTypes: Set<MIDIEvent.SysExType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime","title":"var isSystemRealTime: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftype:)","title":"func isSystemRealTime(ofType: MIDIEvent.SysRealTimeType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftypes:)","title":"func isSystemRealTime(ofTypes: Set<MIDIEvent.SysRealTimeType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility","title":"var isUtility: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftype:)","title":"func isUtility(ofType: MIDIEvent.UtilityType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftypes:)","title":"func isUtility(ofTypes: Set<MIDIEvent.UtilityType>) -> Bool","type":"method"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notecc","title":"case noteCC","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notemanagement","title":"case noteManagement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepitchbend","title":"case notePitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/programchange","title":"case programChange","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype","title":"MIDIEvent.ChanVoiceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.enum.case","title":"case dropCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.enum.case","title":"case dropCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannel(_:)","title":"case dropChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannels(_:)","title":"case dropChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinrange(_:)","title":"case dropNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinranges(_:)","title":"case dropNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptype(_:)","title":"case dropType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.enum.case","title":"case keepCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.enum.case","title":"case keepCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannel(_:)","title":"case keepChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannels(_:)","title":"case keepChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinrange(_:)","title":"case keepNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinranges(_:)","title":"case keepNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.enum.case","title":"case onlyCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.enum.case","title":"case onlyCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannel(_:)","title":"case onlyChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannels(_:)","title":"case onlyChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinrange(_:)","title":"case onlyNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinranges(_:)","title":"case onlyNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.type.method","title":"static func dropCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.type.method","title":"static func dropCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.type.method","title":"static func keepCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.type.method","title":"static func keepCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.type.method","title":"static func onlyCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.type.method","title":"static func onlyCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes","title":"MIDIEvent.ChanVoiceTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songpositionpointer","title":"case songPositionPointer","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songselect","title":"case songSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/timecodequarterframe","title":"case timecodeQuarterFrame","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/tunerequest","title":"case tuneRequest","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/unofficialbusselect","title":"case unofficialBusSelect","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontype","title":"MIDIEvent.SysCommonType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysCommonType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes","title":"MIDIEvent.SysCommonTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex8","title":"case sysEx8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex8","title":"case universalSysEx8","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextype","title":"MIDIEvent.SysExType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysExType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/sysextypes","title":"MIDIEvent.SysExTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/activesensing","title":"case activeSensing","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/start","title":"case start","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/systemreset","title":"case systemReset","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/timingclock","title":"case timingClock","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype","title":"MIDIEvent.SysRealTimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes","title":"MIDIEvent.SysRealTimeTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/noop","title":"case noOp","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytype","title":"MIDIEvent.UtilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptype(_:)","title":"case dropType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptype(_:)","title":"case keepType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.UtilityType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes","title":"MIDIEvent.UtilityTypes","type":"enum"}],"path":"\/documentation\/midikit\/midievent-event-filtering","title":"Event Filtering","type":"symbol"},{"title":"Raw Data Encoding","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/invalidtype","title":"case invalidType","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/malformed","title":"case malformed","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/rawbytesempty","title":"case rawBytesEmpty","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/parseerror","title":"MIDIEvent.ParseError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent","title":"MIDIEvent","type":"enum"},{"children":[{"title":"Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/chanvoice(_:)","title":"case chanVoice(MIDIEvent.ChanVoiceTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/group(_:)","title":"case group(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/groups(_:)","title":"case groups([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/syscommon(_:)","title":"case sysCommon(MIDIEvent.SysCommonTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysex(_:)","title":"case sysEx(MIDIEvent.SysExTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysrealtime(_:)","title":"case sysRealTime(MIDIEvent.SysRealTimeTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/utility(_:)","title":"case utility(MIDIEvent.UtilityTypes)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/apply(to:)","title":"func apply(to: [MIDIEvent]) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midieventfilter","title":"MIDIEventFilter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filter:)","title":"init(filter: MIDIEventFilter)","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filters:)","title":"init(filters: [MIDIEventFilter])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filters","title":"var filters: [MIDIEventFilter]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filter(events:)","title":"func filter(events: [MIDIEvent]) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midieventfiltergroup","title":"MIDIEventFilterGroup","type":"class"}],"path":"\/documentation\/midikit\/midikitcore-event-filters","title":"Event Filters","type":"symbol"},{"title":"MIDI Note","type":"groupMarker"},{"children":[{"title":"Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/init(_:octave:style:)","title":"init(MIDINote.Name, octave: Int, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-34opv","title":"init<T>(T, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-51azh","title":"init(String, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-5uo8y","title":"init(UInt7, style: MIDINote.Style)","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(frequency:style:)","title":"init(frequency: Double, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(style:)","title":"init(style: MIDINote.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.property","title":"var name: MIDINote.Name","type":"property"},{"path":"\/documentation\/midikit\/midinote\/number","title":"var number: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midinote\/octave","title":"var octave: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.property","title":"var style: MIDINote.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/frequencyvalue(tuning:)","title":"func frequencyValue(tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/allnotes(style:)","title":"static func allNotes(style: MIDINote.Style) -> [MIDINote]","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatefrequency(midinote:tuning:)","title":"static func calculateFrequency(midiNote: Int, tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatemidinotenumber(frequency:tuning:)","title":"static func calculateMIDINoteNumber(frequency: Double, tuning: Double) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a_sharp","title":"case A_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c_sharp","title":"case C_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d_sharp","title":"case D_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f_sharp","title":"case F_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g_sharp","title":"case G_sharp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/init(_:)","title":"init?(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/scaleoffset","title":"var scaleOffset: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidental","title":"static let flatAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidentalunicode","title":"static let flatAccidentalUnicode: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidental","title":"static let sharpAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidentalunicode","title":"static let sharpAccidentalUnicode: Character","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum","title":"MIDINote.Name","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/malformednotename","title":"case malformedNoteName","type":"case"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription-4tu09","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription-8n88u","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/noteerror","title":"MIDINote.NoteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/cakewalk","title":"case cakewalk","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/roland","title":"case roland","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/yamaha","title":"case yamaha","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/firstoctaveoffset","title":"var firstOctaveOffset: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum","title":"MIDINote.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)","title":"static func < (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)","title":"static func == (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/advanced(by:)","title":"func advanced(by: Int) -> MIDINote","type":"method"},{"path":"\/documentation\/midikit\/midinote\/distance(to:)","title":"func distance(to: MIDINote) -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/stride","title":"MIDINote.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/midinote\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote","title":"MIDINote","type":"struct"},{"path":"\/documentation\/midikit\/midinoterange","title":"MIDINoteRange","type":"typealias"},{"path":"\/documentation\/midikit\/midinotenumberrange","title":"MIDINoteNumberRange","type":"typealias"}],"path":"\/documentation\/midikit\/midikitcore-midi-note","title":"MIDI Note","type":"symbol"},{"title":"Core Value Types","type":"groupMarker"},{"children":[{"title":"Core Value Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/init(_:)","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/bytepair\/init(msb:lsb:)","title":"init(msb: UInt8, lsb: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/lsb","title":"let lsb: UInt8","type":"property"},{"path":"\/documentation\/midikit\/bytepair\/msb","title":"let msb: UInt8","type":"property"},{"path":"\/documentation\/midikit\/bytepair\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/bytepair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/bytepair","title":"BytePair","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/uint8value","title":"var uInt8Value: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/storage","title":"UInt4.Storage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint4\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-50xsx","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-81zku","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-5dkc8","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-2mpag","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-4u1zz","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-6lumk","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-uc","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-6lcln","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-93z0l","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-1b9nv","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-9i5ew","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-25ywl","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-6qfn7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-71a1b","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-82210","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-8d585","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/uint4\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-5ujoy","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-zgbf","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint4\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint4\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/words","title":"UInt4.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint4\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/'...(_:)-3gmlj","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'...(_:)-47ci1","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-174zl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-3gda2","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-3ivz9","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-1aznr","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-9e0rq","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-9qosc","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-whwd","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint4\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-1art2","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-7lajl","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint4\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint4\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bitwidth","title":"static let bitWidth: Int","type":"property"}],"path":"\/documentation\/midikit\/uint4\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/magnitude-swift.typealias","title":"UInt4.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint4\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint4\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/magnitude-swift.property","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint4\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint4","title":"UInt4","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/uint8value","title":"var uInt8Value: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/storage","title":"UInt7.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/midpoint","title":"static let midpoint: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint7\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-50wvh","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-81yk8","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-5dlb2","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-2mply","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3y","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-4u1nn","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-6lub2","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-6lcwn","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-93ysp","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-1b8mf","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-9i5i6","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-25z6h","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-6qfc7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-71ayz","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-820we","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-8d4e1","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/uint7\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-5ujk4","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-zh8f","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint7\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint7\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/words","title":"UInt7.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint7\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/'...(_:)-3gmhf","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'...(_:)-47djh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-174q5","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3gdog","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3iwwh","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-1azzn","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-9dztc","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-9qpne","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-whdt","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-1asv0","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-7la2d","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint7\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bitwidth","title":"static let bitWidth: Int","type":"property"}],"path":"\/documentation\/midikit\/uint7\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/magnitude-swift.typealias","title":"UInt7.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint7\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint7\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/magnitude-swift.property","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint7\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint7","title":"UInt7","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/init(msb:lsb:)","title":"init(msb: UInt7, lsb: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/lsb","title":"let lsb: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7pair\/msb","title":"let msb: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7pair\/uint14value","title":"var uInt14Value: UInt14","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7pair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint7pair","title":"UInt7Pair","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(bipolarunitinterval:)","title":"init<T>(bipolarUnitInterval: T)","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(bytepair:)","title":"init(bytePair: BytePair)","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(uint7pair:)","title":"init(uInt7Pair: UInt7Pair)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"},{"path":"\/documentation\/midikit\/uint14\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/uint14\/midiuint7pair","title":"var midiUInt7Pair: UInt7Pair","type":"property"},{"path":"\/documentation\/midikit\/uint14\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/storage","title":"UInt14.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/midpoint","title":"static let midpoint: UInt14","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint14\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-6wtyt","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-9sd00","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-5hu6w","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-1rgyz","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-3c3f4","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-4v0es","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-9e7es","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9ez1g","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9gpbt","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-5zqfx","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-9scpu","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-2mjrl","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-7azly","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-969m8","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-23wgy","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-kt4l","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/uint14\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-3hz8m","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-96vnv","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint14\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint14\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/words","title":"UInt14.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint14\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/'...(_:)-2omat","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'...(_:)-4o9jq","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-1r9yd","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-22rnv","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-9wcf0","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-1nm4d","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-2o1kf","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-50vz7","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9oqjb","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint14\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-91t50","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-4eqc3","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint14\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint14\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bitwidth","title":"static let bitWidth: Int","type":"property"}],"path":"\/documentation\/midikit\/uint14\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/magnitude-swift.typealias","title":"UInt14.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint14\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint14\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/magnitude-swift.property","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint14\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint14","title":"UInt14","type":"struct"},{"title":"Additional Value Types","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/storage","title":"UInt9.Storage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint9\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-50w79","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-822v4","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-5doey","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-2mq8a","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-4tyl3","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-6lw6i","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-9zkm1","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-6l8jv","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-940o1","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-1b803","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-9i8lm","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-25zqp","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-6qeq3","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-71bl3","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-822r6","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-8d681","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/uint9\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-5unwk","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-zkcb","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint9\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint9\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/words","title":"UInt9.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint9\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/'...(_:)-3glvj","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'...(_:)-47gjx","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-176lp","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-3gc0o","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-3ixkp","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-1b33z","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9dz7c","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9ql9i","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-wel5","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint9\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-1aoh8","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-7l9hx","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint9\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bitwidth","title":"static let bitWidth: Int","type":"property"}],"path":"\/documentation\/midikit\/uint9\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/magnitude-swift.typealias","title":"UInt9.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint9\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint9\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/magnitude-swift.property","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint9\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint9","title":"UInt9","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/uint32value","title":"var uInt32Value: UInt32","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/storage","title":"UInt25.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/midpoint","title":"static let midpoint: UInt25","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint25\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-6me76","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-9hnah","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-5sjyp","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-1gr9s","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-37uj9","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-4y0c1","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-9b281","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9btup","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9jzq6","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-62vlu","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-9hn2z","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-2j9ku","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-7dzib","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-9fvbd","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-1t70r","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-a3lm","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/uint25\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-3dv23","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-9hl40","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint25\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint25\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/words","title":"UInt25.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint25\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/'...(_:)-2y81e","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'...(_:)-4kzgb","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-21zmi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-25wug","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-9s3bt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-1kgxm","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-2r6r8","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-5bbig","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9e11o","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint25\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-9c8rx","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-4bg5c","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint25\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint25\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bitwidth","title":"static let bitWidth: Int","type":"property"}],"path":"\/documentation\/midikit\/uint25\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/magnitude-swift.typealias","title":"UInt25.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint25\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint25\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/magnitude-swift.property","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint25\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint25","title":"UInt25","type":"struct"},{"path":"\/documentation\/midikit\/umpword","title":"UMPWord","type":"typealias"},{"title":"Base MIDI Event Value Types","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated","title":"MIDIEvent.ChanVoice7Bit16BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi1(_:)","title":"case midi1(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi2(_:)","title":"case midi2(UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi1value","title":"var midi1Value: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi2value","title":"var midi2Value: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice7Bit16BitValue, MIDIEvent.ChanVoice7Bit16BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue","title":"MIDIEvent.ChanVoice7Bit16BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated","title":"MIDIEvent.ChanVoice7Bit32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi1(_:)","title":"case midi1(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi1value","title":"var midi1Value: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice7Bit32BitValue, MIDIEvent.ChanVoice7Bit32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue","title":"MIDIEvent.ChanVoice7Bit32BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated","title":"MIDIEvent.ChanVoice14Bit32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitinterval(_:)","title":"case bipolarUnitInterval(Double)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi1(_:)","title":"case midi1(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi1value","title":"var midi1Value: UInt14","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice14Bit32BitValue, MIDIEvent.ChanVoice14Bit32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue","title":"MIDIEvent.ChanVoice14Bit32BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated","title":"MIDIEvent.ChanVoice32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1_14bitvalue","title":"var midi1_14BitValue: UInt14","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1_7bitvalue","title":"var midi1_7BitValue: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1(fourteenbit:)","title":"static func midi1(fourteenBit: UInt14) -> MIDIEvent.ChanVoice32BitValue","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1(sevenbit:)","title":"static func midi1(sevenBit: UInt7) -> MIDIEvent.ChanVoice32BitValue","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice32BitValue, MIDIEvent.ChanVoice32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue","title":"MIDIEvent.ChanVoice32BitValue","type":"enum"}],"path":"\/documentation\/midikit\/midikitcore-value-types","title":"MIDIKit Value Types","type":"symbol"},{"title":"MIDIKitIO-Interop Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDI Packets and Parsing","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiprotocolversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiprotocolversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiprotocolversion","title":"MIDIProtocolVersion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data128bit","title":"case data128bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data64bit","title":"case data64bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi1channelvoice","title":"case midi1ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi2channelvoice","title":"case midi2ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/systemrealtimeandcommon","title":"case systemRealTimeAndCommon","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/utility","title":"case utility","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/wordlength","title":"var wordLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmessagetype","title":"MIDIUMPMessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/start","title":"case start","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield","title":"MIDIUMPSysExStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/noop","title":"case noOp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield","title":"MIDIUMPUtilityStatusField","type":"enum"},{"title":"Value Type Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/storage","title":"Storage","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/bitwidth","title":"static var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/max","title":"static var max: Self","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/min","title":"static var min: Self","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiunsignedinteger","title":"MIDIUnsignedInteger","type":"protocol"},{"title":"Deprecated","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi\/uint14","title":"MIDI.UInt14","type":"typealias"},{"path":"\/documentation\/midikit\/midi\/uint25","title":"MIDI.UInt25","type":"typealias"},{"path":"\/documentation\/midikit\/midi\/uint4","title":"MIDI.UInt4","type":"typealias"},{"path":"\/documentation\/midikit\/midi\/uint7","title":"MIDI.UInt7","type":"typealias"},{"path":"\/documentation\/midikit\/midi\/uint9","title":"MIDI.UInt9","type":"typealias"},{"path":"\/documentation\/midikit\/midi\/umpword","title":"MIDI.UMPWord","type":"typealias"}],"path":"\/documentation\/midikit\/midi","title":"MIDI","type":"enum"}],"path":"\/documentation\/midikit\/midikitcore-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitcore","title":"MIDIKitCore","type":"symbol"},{"children":[{"title":"Manager","type":"groupMarker"},{"children":[{"title":"Instance the Manager","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/init(clientname:model:manufacturer:notificationhandler:)","title":"init(clientName: String, model: String, manufacturer: String, notificationHandler: ((MIDIIONotification, MIDIManager) -> Void)?)","type":"init"},{"title":"Start the Manager","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/start()","title":"func start() throws","type":"method"},{"title":"Create Ports","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinput(name:tag:uniqueid:receiver:)","title":"func addInput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutput(name:tag:uniqueid:)","title":"func addOutput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence) throws","type":"method"},{"title":"Create Managed Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-5xxyz","title":"func addInputConnection(toOutputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-5r30y","title":"func addInputConnection(toOutputs: Set<MIDIEndpointIdentity>, tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-100f9","title":"func addInputConnection(toOutputs: [MIDIOutputEndpoint], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-3a56s","title":"func addOutputConnection(toInputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-3mw","title":"func addOutputConnection(toInputs: Set<MIDIEndpointIdentity>, tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-1pqwx","title":"func addOutputConnection(toInputs: [MIDIInputEndpoint], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"title":"Accessing Created Ports and Managed Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedinputs","title":"var managedInputs: [String : MIDIInput]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedoutputs","title":"var managedOutputs: [String : MIDIOutput]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedinputconnections","title":"var managedInputConnections: [String : MIDIInputConnection]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedoutputconnections","title":"var managedOutputConnections: [String : MIDIOutputConnection]","type":"property"},{"title":"Removing Ports and Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/remove(_:_:)","title":"func remove(MIDIManager.ManagedType, MIDIManager.TagSelection)","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeall()","title":"func removeAll()","type":"method"},{"title":"Thru Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addthruconnection(outputs:inputs:tag:lifecycle:params:)","title":"func addThruConnection(outputs: [MIDIOutputEndpoint], inputs: [MIDIInputEndpoint], tag: String, lifecycle: MIDIThruConnection.Lifecycle, params: MIDIThruConnection.Parameters) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/managedthruconnections","title":"var managedThruConnections: [String : MIDIThruConnection]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/unmanagedpersistentthruconnections(ownerid:)","title":"func unmanagedPersistentThruConnections(ownerID: String) throws -> [CoreMIDIThruConnectionRef]","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeallunmanagedpersistentthruconnections(ownerid:)","title":"func removeAllUnmanagedPersistentThruConnections(ownerID: String) -> Int","type":"method"},{"title":"Accessing Endpoints in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/devices","title":"var devices: MIDIIODevicesProtocol","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/endpoints","title":"var endpoints: MIDIIOEndpointsProtocol","type":"property"},{"title":"Core MIDI System Notification Handler","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/notificationhandler","title":"var notificationHandler: ((MIDIIONotification, MIDIManager) -> Void)?","type":"property"},{"title":"Core MIDI","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/clientname","title":"var clientName: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/manufacturer","title":"var manufacturer: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/model","title":"var model: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/coremidiclientref","title":"var coreMIDIClientRef: CoreMIDIClientRef","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/preferredapi","title":"var preferredAPI: CoreMIDIAPIVersion","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/inputconnection","title":"case inputConnection","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/nonpersistentthruconnection","title":"case nonPersistentThruConnection","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/output","title":"case output","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/outputconnection","title":"case outputConnection","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midimanager\/managedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midimanager\/managedtype","title":"MIDIManager.ManagedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/all","title":"case all","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/withtag(_:)","title":"case withTag(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midimanager\/tagselection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midimanager\/tagselection","title":"MIDIManager.TagSelection","type":"enum"}],"path":"\/documentation\/midikit\/midimanager","title":"MIDIManager","type":"class"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinput(name:tag:uniqueid:receiver:)","title":"func addInput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutput(name:tag:uniqueid:)","title":"func addOutput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence) throws","type":"method"}],"path":"\/documentation\/midikit\/midimanager-creating-ports","title":"Creating Ports","type":"symbol"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-5xxyz","title":"func addInputConnection(toOutputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-3a56s","title":"func addOutputConnection(toInputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addthruconnection(outputs:inputs:tag:lifecycle:params:)","title":"func addThruConnection(outputs: [MIDIOutputEndpoint], inputs: [MIDIInputEndpoint], tag: String, lifecycle: MIDIThruConnection.Lifecycle, params: MIDIThruConnection.Parameters) throws","type":"method"}],"path":"\/documentation\/midikit\/midimanager-creating-connections","title":"Creating Connections","type":"symbol"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/remove(_:_:)","title":"func remove(MIDIManager.ManagedType, MIDIManager.TagSelection)","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeall()","title":"func removeAll()","type":"method"}],"path":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","title":"Removing Ports and Connections","type":"symbol"},{"children":[{"title":"MIDIManager Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/notificationhandler","title":"var notificationHandler: ((MIDIIONotification, MIDIManager) -> Void)?","type":"property"},{"title":"Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/added(parent:child:)","title":"case added(parent: AnyMIDIIOObject?, child: AnyMIDIIOObject)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/ioerror(device:error:)","title":"case ioError(device: MIDIDevice, error: MIDIIOError)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/other(messageidrawvalue:)","title":"case other(messageIDRawValue: Int32)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/propertychanged(object:property:)","title":"case propertyChanged(object: AnyMIDIIOObject, property: AnyMIDIIOObject.Property)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/removed(parent:child:)","title":"case removed(parent: AnyMIDIIOObject?, child: AnyMIDIIOObject)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/serialportownerchanged","title":"case serialPortOwnerChanged","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/setupchanged","title":"case setupChanged","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/thruconnectionchanged","title":"case thruConnectionChanged","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiionotification\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiionotification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiionotification","title":"MIDIIONotification","type":"enum"}],"path":"\/documentation\/midikit\/midimanager-receiving-notifications","title":"Receiving Notifications","type":"symbol"},{"path":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","title":"Combine and SwiftUI Features","type":"article"},{"title":"Devices & Entities","type":"groupMarker"},{"children":[{"title":"Devices in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/devices","title":"var devices: MIDIIODevicesProtocol","type":"property"},{"title":"Device and Entity Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIDeviceRef","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/entities","title":"var entities: [MIDIEntity]","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/mididevice\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/id-swift.property","title":"var id: MIDIDevice.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/id-swift.typealias","title":"MIDIDevice.ID","type":"typealias"}],"path":"\/documentation\/midikit\/mididevice\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getpropertiesasstrings(onlyincluderelevant:)","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mididevice","title":"MIDIDevice","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEntityRef","type":"property"},{"path":"\/documentation\/midikit\/midientity\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midientity\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midientity\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midientity\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midientity\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdevice()","title":"func getDevice() -> MIDIDevice?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midientity\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/id-swift.property","title":"var id: MIDIEntity.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/id-swift.typealias","title":"MIDIEntity.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midientity\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getpropertiesasstrings(onlyincluderelevant:)","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midientity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midientity\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midientity","title":"MIDIEntity","type":"struct"}],"path":"\/documentation\/midikit\/midikitio-devices","title":"Working with Devices","type":"symbol"},{"title":"Endpoints","type":"groupMarker"},{"children":[{"title":"Endpoints in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/endpoints","title":"var endpoints: MIDIIOEndpointsProtocol","type":"property"},{"title":"Endpoint Identification","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/displayname(_:)","title":"case displayName(String)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/uniqueid(_:)","title":"case uniqueID(MIDIIdentifier)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/uniqueidwithfallback(id:fallbackdisplayname:)","title":"case uniqueIDWithFallback(id: MIDIIdentifier, fallbackDisplayName: String)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/endpoint(_:)","title":"static func endpoint<T>(T) -> MIDIEndpointIdentity","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiendpointidentity\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/==(_:_:)","title":"static func == (MIDIEndpointIdentity, MIDIEndpointIdentity) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointidentity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiendpointidentity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointidentity","title":"MIDIEndpointIdentity","type":"enum"},{"title":"Unique ID","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifier","title":"MIDIIdentifier","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/adhoc","title":"case adHoc","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","title":"case managedStorage(readHandler: () -> MIDIIdentifier?, storeHandler: (MIDIIdentifier?) -> Void)","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/unmanaged(_:)","title":"case unmanaged(MIDIIdentifier)","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","title":"case userDefaultsManaged(key: String, suite: UserDefaults)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/readid()","title":"func readID() -> MIDIIdentifier?","type":"method"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/writeid(_:)","title":"func writeID(MIDIIdentifier?)","type":"method"}],"path":"\/documentation\/midikit\/midiidentifierpersistence","title":"MIDIIdentifierPersistence","type":"enum"},{"title":"Endpoint Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiinputendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/==(_:_:)-bmuf","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/id-swift.typealias","title":"MIDIInputEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midiinputendpoint\/midiioendpointprotocol-implementations","title":"MIDIIOEndpointProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/==(_:_:)-894is","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getpropertiesasstrings(onlyincluderelevant:)","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"}],"path":"\/documentation\/midikit\/midiinputendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputendpoint","title":"MIDIInputEndpoint","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midioutputendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/==(_:_:)-2xot8","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/id-swift.typealias","title":"MIDIOutputEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midioutputendpoint\/midiioendpointprotocol-implementations","title":"MIDIIOEndpointProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/==(_:_:)-48jxv","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getpropertiesasstrings(onlyincluderelevant:)","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"}],"path":"\/documentation\/midikit\/midioutputendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputendpoint","title":"MIDIOutputEndpoint","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/endpointtype","title":"let endpointType: MIDIEndpointType","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/uniqueid","title":"let uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/anymidiendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/==(_:_:)-77dgd","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/id-swift.typealias","title":"AnyMIDIEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/anymidiendpoint\/midiioendpointprotocol-implementations","title":"MIDIIOEndpointProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/==(_:_:)-13g7h","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getpropertiesasstrings(onlyincluderelevant:)","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"}],"path":"\/documentation\/midikit\/anymidiendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiendpoint","title":"AnyMIDIEndpoint","type":"struct"},{"title":"Endpoint Filtering","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-12dk0","title":"init(owned: Bool, criteria: Set<MIDIEndpointIdentity>)","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-4bmfp","title":"init(owned: Bool, criteria: [MIDIEndpointIdentity])","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-7fn2j","title":"init<T>(owned: Bool, criteria: [T])","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-rcfy","title":"init<T>(owned: Bool, criteria: Set<T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/criteria","title":"var criteria: Set<MIDIEndpointIdentity>","type":"property"},{"path":"\/documentation\/midikit\/midiendpointfilter\/owned","title":"var owned: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/default()","title":"static func `default`() -> MIDIEndpointFilter","type":"method"},{"path":"\/documentation\/midikit\/midiendpointfilter\/owned()","title":"static func owned() -> MIDIEndpointFilter","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointfilter","title":"MIDIEndpointFilter","type":"struct"}],"path":"\/documentation\/midikit\/midikitio-endpoints","title":"Working With Endpoints","type":"symbol"},{"title":"Events","type":"groupMarker"},{"children":[{"title":"Send Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiiosendsmidimessagesprotocol\/send(event:)","title":"func send(event: MIDIEvent) throws","type":"method"},{"path":"\/documentation\/midikit\/midiiosendsmidimessagesprotocol\/send(events:)","title":"func send(events: [MIDIEvent]) throws","type":"method"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-sending-midi-events","title":"Sending MIDI Events","type":"symbol"},{"children":[{"title":"Receive Handlers","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/events(translatemidi1noteonzerovelocitytonoteoff:_:)","title":"case events(translateMIDI1NoteOnZeroVelocityToNoteOff: Bool, MIDIReceiver.EventsHandler)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/eventslogging(filteractivesensingandclock:_:)","title":"case eventsLogging(filterActiveSensingAndClock: Bool, MIDIReceiver.EventsLoggingHandler?)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/group(_:)","title":"case group([MIDIReceiver])","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/object(_:held:translatemidi1noteonzerovelocitytonoteoff:)","title":"case object(ReceivesMIDIEvents, held: MIDIReceiver.ReceiverRefStorage, translateMIDI1NoteOnZeroVelocityToNoteOff: Bool)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/rawdata(_:)","title":"case rawData(MIDIReceiver.RawDataHandler)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatalogging(filteractivesensingandclock:_:)","title":"case rawDataLogging(filterActiveSensingAndClock: Bool, MIDIReceiver.RawDataLoggingHandler?)","type":"case"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/eventshandler","title":"MIDIReceiver.EventsHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/eventslogginghandler","title":"MIDIReceiver.EventsLoggingHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatahandler","title":"MIDIReceiver.RawDataHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatalogginghandler","title":"MIDIReceiver.RawDataLoggingHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/strongly","title":"case strongly","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/weakly","title":"case weakly","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage","title":"MIDIReceiver.ReceiverRefStorage","type":"enum"}],"path":"\/documentation\/midikit\/midireceiver","title":"MIDIReceiver","type":"enum"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-receiving-midi-events","title":"Receiving MIDI Events","type":"symbol"},{"title":"Extending Connectivity","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitio-midi-over-bluetooth","title":"MIDI Over Bluetooth","type":"article"},{"children":[{"title":"Global Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/setmidinetworksession(policy:)","title":"func setMIDINetworkSession(policy: MIDIIONetworkConnectionPolicy?)","type":"func"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/anyone","title":"case anyone","type":"case"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hostsincontactlist","title":"case hostsInContactList","type":"case"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/noone","title":"case noOne","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy","title":"MIDIIONetworkConnectionPolicy","type":"enum"}],"path":"\/documentation\/midikit\/midikitio-midi-over-network","title":"MIDI Over Network","type":"symbol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDIManager Managed Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/coremidiinputportref","title":"var coreMIDIInputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/endpoint","title":"var endpoint: MIDIInputEndpoint","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/endpointname","title":"var endpointName: String","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/uniqueid","title":"var uniqueID: MIDIIdentifier?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/setreceiver(_:)","title":"func setReceiver(MIDIReceiver)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiinput\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinput","title":"MIDIInput","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutput\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/endpoint","title":"var endpoint: MIDIOutputEndpoint","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/endpointname","title":"var endpointName: String","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/uniqueid","title":"var uniqueID: MIDIIdentifier?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutput\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midioutput\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutput","title":"MIDIOutput","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/coremidiinputportref","title":"var coreMIDIInputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/coremidioutputendpointrefs","title":"var coreMIDIOutputEndpointRefs: Set<CoreMIDIEndpointRef>","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/endpoints","title":"var endpoints: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/filter","title":"var filter: MIDIEndpointFilter","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/mode","title":"var mode: MIDIConnectionMode","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/outputscriteria","title":"var outputsCriteria: Set<MIDIEndpointIdentity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/add(outputs:)-39yyr","title":"func add(outputs: [MIDIOutputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/add(outputs:)-fshr","title":"func add(outputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/remove(outputs:)-158ab","title":"func remove(outputs: [MIDIOutputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/remove(outputs:)-7zf2d","title":"func remove(outputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/removealloutputs()","title":"func removeAllOutputs()","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/setreceiver(_:)","title":"func setReceiver(MIDIReceiver)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiinputconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputconnection","title":"MIDIInputConnection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/coremidiinputendpointrefs","title":"var coreMIDIInputEndpointRefs: Set<CoreMIDIEndpointRef>","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/endpoints","title":"var endpoints: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/filter","title":"var filter: MIDIEndpointFilter","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/inputscriteria","title":"var inputsCriteria: Set<MIDIEndpointIdentity>","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/mode","title":"var mode: MIDIConnectionMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/add(inputs:)-3c7do","title":"func add(inputs: [MIDIInputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/add(inputs:)-4xbwz","title":"func add(inputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/remove(inputs:)-1medn","title":"func remove(inputs: [MIDIInputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/remove(inputs:)-66yrn","title":"func remove(inputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/removeallinputs()","title":"func removeAllInputs()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midioutputconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputconnection","title":"MIDIOutputConnection","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutallcontrols","title":"var filterOutAllControls: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutbeatclock","title":"var filterOutBeatClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutmtc","title":"var filterOutMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutsysex","title":"var filterOutSysEx: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filterouttunerequest","title":"var filterOutTuneRequest: Bool","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct","title":"MIDIThruConnection.Parameters","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/coremidithruconnectionref","title":"var coreMIDIThruConnectionRef: CoreMIDIThruConnectionRef?","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.property","title":"var lifecycle: MIDIThruConnection.Lifecycle","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.property","title":"var parameters: MIDIThruConnection.Parameters","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/nonpersistent","title":"case nonPersistent","type":"case"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/persistent(ownerid:)","title":"case persistent(ownerID: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum","title":"MIDIThruConnection.Lifecycle","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midithruconnection","title":"MIDIThruConnection","type":"class"},{"title":"Provider Classes and Types","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/devices","title":"var devices: [MIDIDevice]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/midikit\/mididevices","title":"MIDIDevices","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/inputsunowned","title":"var inputsUnowned: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/outputsunowned","title":"var outputsUnowned: [MIDIOutputEndpoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/midikit\/midiendpoints","title":"MIDIEndpoints","type":"class"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiconnectionmode\/allendpoints","title":"case allEndpoints","type":"case"},{"path":"\/documentation\/midikit\/midiconnectionmode\/definedendpoints","title":"case definedEndpoints","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiconnectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiconnectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiconnectionmode","title":"MIDIConnectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointtype\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/midiendpointtype\/output","title":"case output","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointtype","title":"MIDIEndpointType","type":"enum"},{"title":"MIDI Packets and Parsing","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midipacketdata\/init(bytes:timestamp:)","title":"init(bytes: [UInt8], timeStamp: CoreMIDITimeStamp)","type":"init"}],"path":"\/documentation\/midikit\/midipacketdata","title":"MIDIPacketData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/init(bytes:timestamp:)","title":"init(bytes: [UInt8], timeStamp: CoreMIDITimeStamp)","type":"init"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/init(words:timestamp:)","title":"init(words: [UMPWord], timeStamp: CoreMIDITimeStamp)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/bytes","title":"var bytes: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/timestamp","title":"let timeStamp: CoreMIDITimeStamp","type":"property"}],"path":"\/documentation\/midikit\/universalmidipacketdata","title":"UniversalMIDIPacketData","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data128bit","title":"case data128bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data64bit","title":"case data64bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi1channelvoice","title":"case midi1ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi2channelvoice","title":"case midi2ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/systemrealtimeandcommon","title":"case systemRealTimeAndCommon","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/utility","title":"case utility","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/wordlength","title":"var wordLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmessagetype","title":"MIDIUMPMessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/start","title":"case start","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield","title":"MIDIUMPSysExStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/noop","title":"case noOp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield","title":"MIDIUMPUtilityStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidipacket\/packet(_:)","title":"case packet(MIDIPacketData)","type":"case"},{"path":"\/documentation\/midikit\/anymidipacket\/universalpacket(_:)","title":"case universalPacket(UniversalMIDIPacketData)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidipacket\/bytes","title":"var bytes: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/anymidipacket\/timestamp","title":"var timeStamp: CoreMIDITimeStamp","type":"property"}],"path":"\/documentation\/midikit\/anymidipacket","title":"AnyMIDIPacket","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi1parser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi1parser\/parsedevents(in:umpgroup:)-4y23l","title":"func parsedEvents(in: [UInt8], umpGroup: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midi1parser\/parsedevents(in:umpgroup:)-96m2","title":"func parsedEvents(in: MIDIPacketData, umpGroup: UInt4) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midi1parser","title":"MIDI1Parser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parser\/parsedevents(in:)-4a87n","title":"func parsedEvents(in: [UInt8]) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midi2parser\/parsedevents(in:)-9yes6","title":"func parsedEvents(in: UniversalMIDIPacketData) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midi2parser","title":"MIDI2Parser","type":"class"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiprotocolversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiprotocolversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiprotocolversion","title":"MIDIProtocolVersion","type":"enum"},{"title":"Core MIDI Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/legacycoremidi","title":"case legacyCoreMIDI","type":"case"},{"path":"\/documentation\/midikit\/coremidiapiversion\/newcoremidi(_:)","title":"case newCoreMIDI(MIDIProtocolVersion)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/isvalidoncurrentplatform","title":"var isValidOnCurrentPlatform: Bool","type":"property"},{"path":"\/documentation\/midikit\/coremidiapiversion\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/bestforplatform()","title":"static func bestForPlatform() -> CoreMIDIAPIVersion","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/coremidiapiversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/coremidiapiversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/coremidiapiversion","title":"CoreMIDIAPIVersion","type":"enum"},{"path":"\/documentation\/midikit\/coremidiclientref","title":"CoreMIDIClientRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiobjectref","title":"CoreMIDIObjectRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiportref","title":"CoreMIDIPortRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidideviceref","title":"CoreMIDIDeviceRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidientityref","title":"CoreMIDIEntityRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiendpointref","title":"CoreMIDIEndpointRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidithruconnectionref","title":"CoreMIDIThruConnectionRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremiditimestamp","title":"CoreMIDITimeStamp","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiosstatus","title":"CoreMIDIOSStatus","type":"typealias"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/connectionerror(_:)","title":"case connectionError(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/internalinconsistency(_:)","title":"case internalInconsistency(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/notsupported(_:)","title":"case notSupported(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/osstatus(_:)","title":"case osStatus(MIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/readerror(_:)","title":"case readError(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/localizeddescription-6m202","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiioerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/localizeddescription-49k02","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiioerror","title":"MIDIIOError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/idnotunique","title":"case idNotUnique","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidclient","title":"case invalidClient","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidport","title":"case invalidPort","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/ioerror","title":"case ioError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/messagesenderr","title":"case messageSendErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/noconnection","title":"case noConnection","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/nocurrentsetup","title":"case noCurrentSetup","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/notpermitted","title":"case notPermitted","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/objectnotfound","title":"case objectNotFound","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/other(_:)","title":"case other(CoreMIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/serverstarterr","title":"case serverStartErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/setupformaterr","title":"case setupFormatErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownendpoint","title":"case unknownEndpoint","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownerror","title":"case unknownError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownproperty","title":"case unknownProperty","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongendpointtype","title":"case wrongEndpointType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongpropertytype","title":"case wrongPropertyType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongthread","title":"case wrongThread","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/init(rawvalue:)","title":"init(rawValue: CoreMIDIOSStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/rawvalue","title":"var rawValue: CoreMIDIOSStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiosstatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiosstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiosstatus","title":"MIDIOSStatus","type":"enum"},{"title":"I\/O","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioendpointprotocol\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"title":"MIDIIOEndpointProtocol Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/midikit\/midiioobject\/==(_:_:)-3jrk3","title":"static func == (Self, Self) -> Bool","type":"op"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/==(_:_:)-47sj0","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobject\/coremidiobjectref","title":"var coreMIDIObjectRef: CoreMIDIObjectRef","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobject\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getadvancescheduletimemusec()-6y9i0","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getadvancescheduletimemusec()-6by1q","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getcanroute()-34vve","title":"func getCanRoute() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getcanroute()-701p1","title":"func getCanRoute() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getconnectionuniqueid()-2n5ia","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getconnectionuniqueid()-2k5jv","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getdevicemanufacturerid()-9c0qg","title":"func getDeviceManufacturerID() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getdevicemanufacturerid()-enj6","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getdisplayname()-59fg0","title":"func getDisplayName() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getdisplayname()-2cnvc","title":"func getDisplayName() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getdriverdeviceeditorapp()-70mv6","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getdriverdeviceeditorapp()-32nos","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getdriverowner()-2p528","title":"func getDriverOwner() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getdriverowner()-92q8f","title":"func getDriverOwner() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getdriverversion()-3dh2l","title":"func getDriverVersion() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getdriverversion()-22ffv","title":"func getDriverVersion() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getimageasnsimage()-6xjun","title":"func getImageAsNSImage() -> NSImage?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getimageasnsimage()-2sexq","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getimagefileurl()-6ivxg","title":"func getImageFileURL() -> URL?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getimagefileurl()-7p1f7","title":"func getImageFileURL() -> URL?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getisbroadcast()-6aspt","title":"func getIsBroadcast() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getisbroadcast()-7yrsy","title":"func getIsBroadcast() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getisdrummachine()-8pa6l","title":"func getIsDrumMachine() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getisdrummachine()-6jr99","title":"func getIsDrumMachine() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getiseffectunit()-2s5bm","title":"func getIsEffectUnit() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getiseffectunit()-2whq1","title":"func getIsEffectUnit() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getisembeddedentity()-5483c","title":"func getIsEmbeddedEntity() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getisembeddedentity()-9tmi2","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getismixer()-4b6lb","title":"func getIsMixer() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getismixer()-5wxy","title":"func getIsMixer() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getisoffline()-9jv02","title":"func getIsOffline() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getisoffline()-30sn2","title":"func getIsOffline() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getisprivate()-7cto7","title":"func getIsPrivate() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getisprivate()-29f67","title":"func getIsPrivate() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getissampler()-8yqog","title":"func getIsSampler() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getissampler()-d7tb","title":"func getIsSampler() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getmanufacturer()-7szzt","title":"func getManufacturer() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getmanufacturer()-bn97","title":"func getManufacturer() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getmaxreceivechannels()-3ttht","title":"func getMaxReceiveChannels() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getmaxreceivechannels()-5h9na","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getmaxsysexspeed()-3ur5a","title":"func getMaxSysExSpeed() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getmaxsysexspeed()-vk32","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getmaxtransmitchannels()-1mkhz","title":"func getMaxTransmitChannels() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getmaxtransmitchannels()-1ngcm","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getmodel()-2eue7","title":"func getModel() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getmodel()-8lzaw","title":"func getModel() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getname()-94ygd","title":"func getName() -> String?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getname()-45p8m","title":"func getName() -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getnameconfigurationdictionary()-3ej6w","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getnameconfigurationdictionary()-2v200","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getpandisruptsstereo()-8iy7g","title":"func getPanDisruptsStereo() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getpandisruptsstereo()-9s6qd","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getpropertiesasstrings(onlyincluderelevant:)-7m5wp","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getpropertiesasstrings(onlyincluderelevant:)-67ka8","title":"func getPropertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getprotocolid()-1d63p","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getprotocolid()-xbpu","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivechannels()-4fvyp","title":"func getReceiveChannels() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivechannels()-3tofe","title":"func getReceiveChannels() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectlsb()-1sbeo","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectlsb()-6jzeo","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectmsb()-1zqrm","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectmsb()-6zxtw","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesclock()-4yqsz","title":"func getReceivesClock() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesclock()-4wrxk","title":"func getReceivesClock() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesmtc()-51pzc","title":"func getReceivesMTC() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesmtc()-27ser","title":"func getReceivesMTC() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesnotes()-2bogy","title":"func getReceivesNotes() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesnotes()-20a6x","title":"func getReceivesNotes() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getreceivesprogramchanges()-269ik","title":"func getReceivesProgramChanges() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getreceivesprogramchanges()-1ou9c","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getsinglerealtimeentity()-7je4g","title":"func getSingleRealtimeEntity() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getsinglerealtimeentity()-6a0d3","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getsupportsgeneralmidi()-13qd7","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getsupportsgeneralmidi()-69v49","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getsupportsmmc()-202w0","title":"func getSupportsMMC() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getsupportsmmc()-4r5pb","title":"func getSupportsMMC() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getsupportsshowcontrol()-6d7zb","title":"func getSupportsShowControl() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getsupportsshowcontrol()-1f3sn","title":"func getSupportsShowControl() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitchannels()-213pf","title":"func getTransmitChannels() -> Int32","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitchannels()-8sqf7","title":"func getTransmitChannels() -> Int32","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectlsb()-1t71j","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectlsb()-4pmsq","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectmsb()-1bdnr","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectmsb()-8he43","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsclock()-49phe","title":"func getTransmitsClock() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsclock()-2tb73","title":"func getTransmitsClock() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsmtc()-1viij","title":"func getTransmitsMTC() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsmtc()-5ubmm","title":"func getTransmitsMTC() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsnotes()-24t6s","title":"func getTransmitsNotes() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsnotes()-2xxhs","title":"func getTransmitsNotes() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsprogramchanges()-9byf2","title":"func getTransmitsProgramChanges() -> Bool","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/gettransmitsprogramchanges()-2y9it","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/getuniqueid()-7axke","title":"func getUniqueID() -> MIDIIdentifier","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/getuniqueid()-5y7mg","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioendpointprotocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"MIDIIOEndpointProtocol Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/midikit\/midiioobject\/hash(into:)-9ezjn","title":"func hash(into: inout Hasher)","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/hash(into:)-3goh4","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiioobject","title":"MIDIIOObject","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobjecttype\/device","title":"case device","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/entity","title":"case entity","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/inputendpoint","title":"case inputEndpoint","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/outputendpoint","title":"case outputEndpoint","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobjecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiioobjecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiioobjecttype","title":"MIDIIOObjectType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/device(_:)","title":"case device(MIDIDevice)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/entity(_:)","title":"case entity(MIDIEntity)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/inputendpoint(_:)","title":"case inputEndpoint(MIDIInputEndpoint)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/outputendpoint(_:)","title":"case outputEndpoint(MIDIOutputEndpoint)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/advancescheduletimemusec","title":"case advanceScheduleTimeMuSec","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/canroute","title":"case canRoute","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/connectionuniqueid","title":"case connectionUniqueID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/deviceid","title":"case deviceID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/displayname","title":"case displayName","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverdeviceeditorapp","title":"case driverDeviceEditorApp","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverowner","title":"case driverOwner","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverversion","title":"case driverVersion","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/image","title":"case image","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isbroadcast","title":"case isBroadcast","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isdrummachine","title":"case isDrumMachine","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/iseffectunit","title":"case isEffectUnit","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isembeddedentity","title":"case isEmbeddedEntity","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/ismixer","title":"case isMixer","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isoffline","title":"case isOffline","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isprivate","title":"case isPrivate","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/issampler","title":"case isSampler","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/manufacturer","title":"case manufacturer","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxreceivechannels","title":"case maxReceiveChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxsysexspeed","title":"case maxSysExSpeed","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxtransmitchannels","title":"case maxTransmitChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/model","title":"case model","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/name","title":"case name","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/nameconfigurationdictionary","title":"case nameConfigurationDictionary","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/pandisruptsstereo","title":"case panDisruptsStereo","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/protocolid","title":"case protocolID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivechannels","title":"case receiveChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesbankselectlsb","title":"case receivesBankSelectLSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesbankselectmsb","title":"case receivesBankSelectMSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesclock","title":"case receivesClock","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesmtc","title":"case receivesMTC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesnotes","title":"case receivesNotes","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesprogramchanges","title":"case receivesProgramChanges","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/singlerealtimeentity","title":"case singleRealtimeEntity","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsgeneralmidi","title":"case supportsGeneralMIDI","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsmmc","title":"case supportsMMC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsshowcontrol","title":"case supportsShowControl","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitchannels","title":"case transmitChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsbankselectlsb","title":"case transmitsBankSelectLSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsbankselectmsb","title":"case transmitsBankSelectMSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsclock","title":"case transmitsClock","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsmtc","title":"case transmitsMTC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsnotes","title":"case transmitsNotes","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsprogramchanges","title":"case transmitsProgramChanges","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/uniqueid","title":"case uniqueID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/init(_:)","title":"init?(CFString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/coremidicfstring","title":"var coreMIDICFString: CFString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/anymidiioobject\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiioobject\/property","title":"AnyMIDIIOObject.Property","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/anymidiioobject\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/id-swift.property","title":"var id: AnyMIDIIOObject.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/id-swift.typealias","title":"AnyMIDIIOObject.ID","type":"typealias"}],"path":"\/documentation\/midikit\/anymidiioobject\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/coremidiobjectref","title":"var coreMIDIObjectRef: CoreMIDIObjectRef","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"}],"path":"\/documentation\/midikit\/anymidiioobject\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiioobject","title":"AnyMIDIIOObject","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/getentity()","title":"func getEntity() -> MIDIEntity?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioendpointprotocol\/id-swift.typealias","title":"MIDIIOEndpointProtocol.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midiioendpointprotocol","title":"MIDIIOEndpointProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiiodevicesprotocol\/devices","title":"var devices: [MIDIDevice]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiiodevicesprotocol\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/midikit\/midiiodevicesprotocol","title":"MIDIIODevicesProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioendpointsprotocol\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiioendpointsprotocol\/inputsunowned","title":"var inputsUnowned: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiioendpointsprotocol\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiioendpointsprotocol\/outputsunowned","title":"var outputsUnowned: [MIDIOutputEndpoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioendpointsprotocol\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/midikit\/midiioendpointsprotocol","title":"MIDIIOEndpointsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiiomanagedprotocol\/api","title":"var api: CoreMIDIAPIVersion","type":"property"}],"path":"\/documentation\/midikit\/midiiomanagedprotocol","title":"MIDIIOManagedProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioreceivesmidimessagesprotocol\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"}],"path":"\/documentation\/midikit\/midiioreceivesmidimessagesprotocol","title":"MIDIIOReceivesMIDIMessagesProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiiosendsmidimessagesprotocol\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midiiosendsmidimessagesprotocol\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"}],"path":"\/documentation\/midikit\/midiiosendsmidimessagesprotocol","title":"MIDIIOSendsMIDIMessagesProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioreceivehandlerprotocol\/eventlistreceived(_:protocol:)","title":"func eventListReceived([UniversalMIDIPacketData], protocol: MIDIProtocolVersion)","type":"method"},{"path":"\/documentation\/midikit\/midiioreceivehandlerprotocol\/packetlistreceived(_:)","title":"func packetListReceived([MIDIPacketData])","type":"method"}],"path":"\/documentation\/midikit\/midiioreceivehandlerprotocol","title":"MIDIIOReceiveHandlerProtocol","type":"protocol"},{"title":"Value Type Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/storage","title":"Storage","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/bitwidth","title":"static var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/max","title":"static var max: Self","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/min","title":"static var min: Self","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiunsignedinteger","title":"MIDIUnsignedInteger","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitsmf-getting-started","title":"Getting Started","type":"article"},{"title":"Working with MIDI Files","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(format:timebase:chunks:)","title":"init(format: MIDIFile.Format, timeBase: MIDIFile.TimeBase, chunks: [MIDIFile.Chunk])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(midifile:)-4801k","title":"init(midiFile: String) throws","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(midifile:)-6nmrf","title":"init(midiFile: URL) throws","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(rawdata:)","title":"init(rawData: Data) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunks","title":"var chunks: [MIDIFile.Chunk]","type":"property"},{"path":"\/documentation\/midikit\/midifile\/format-swift.property","title":"var format: MIDIFile.Format","type":"property"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.property","title":"var timeBase: MIDIFile.TimeBase","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/rawdata()","title":"func rawData() throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/init(format:timebase:)","title":"init(format: MIDIFile.Format, timeBase: MIDIFile.TimeBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/format","title":"var format: MIDIFile.Format","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/timebase","title":"var timeBase: MIDIFile.TimeBase","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/staticidentifier","title":"static let staticIdentifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/identifier","title":"var identifier: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header","title":"MIDIFile.Chunk.Header","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init(events:)","title":"init(events: [MIDIFileEvent])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init(midi1smfrawbytesstream:)","title":"init<D>(midi1SMFRawBytesStream: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/events","title":"var events: [MIDIFileEvent]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/staticidentifier","title":"static let staticIdentifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/identifier","title":"var identifier: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track","title":"MIDIFile.Chunk.Track","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/init(id:rawdata:)","title":"init(id: String, rawData: Data?)","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/init(midi1smfrawbytesstream:)","title":"init<D>(midi1SMFRawBytesStream: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/rawdata","title":"var rawData: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk","title":"MIDIFile.Chunk.UnrecognizedChunk","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/other(_:)","title":"case other(MIDIFile.Chunk.UnrecognizedChunk)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track(_:)-swift.enum.case","title":"case track(MIDIFile.Chunk.Track)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unwrappedchunk","title":"var unwrappedChunk: MIDIFileChunk","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/other(id:rawdata:)","title":"static func other(id: String, rawData: Data?) -> MIDIFile.Chunk","type":"method"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track(_:)-swift.type.method","title":"static func track([MIDIFileEvent]) -> MIDIFile.Chunk","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk","title":"MIDIFile.Chunk","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/filereaderror","title":"case fileReadError","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/malformedurl","title":"case malformedURL","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/decodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/decodeerror","title":"MIDIFile.DecodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/internalinconsistency(_:)","title":"case internalInconsistency(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/encodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/encodeerror","title":"MIDIFile.EncodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/multipletracksasynchronous","title":"case multipleTracksAsynchronous","type":"case"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/multipletrackssynchronous","title":"case multipleTracksSynchronous","type":"case"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/singletrack","title":"case singleTrack","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum","title":"MIDIFile.Format","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/framerate\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/framerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/framerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/framerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/framerate","title":"MIDIFile.FrameRate","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/timecoderate","title":"var timecodeRate: Timecode.FrameRate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate","title":"MIDIFile.SMPTEOffsetFrameRate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/musical(ticksperquarternote:)","title":"case musical(ticksPerQuarterNote: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/timecode(smpteformat:ticksperframe:)","title":"case timecode(smpteFormat: MIDIFile.FrameRate, ticksPerFrame: UInt8)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/init(rawbytes:)","title":"init?(rawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/init(rawdata:)","title":"init?(rawData: Data)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/default()","title":"static func `default`() -> MIDIFile.TimeBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum","title":"MIDIFile.TimeBase","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile","title":"MIDIFile","type":"struct"},{"children":[{"title":"MIDI Track Leading","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix(delta:port:)","title":"static func portPrefix(delta: MIDIFileEvent.DeltaTime, port: UInt7) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix(delta:event:)","title":"case portPrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.PortPrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/init(port:)","title":"init(port: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/port","title":"var port: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.PortPrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix","title":"MIDIFileEvent.PortPrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-portprefix","title":"Port Prefix","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix(delta:channel:)","title":"static func channelPrefix(delta: MIDIFileEvent.DeltaTime, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix(delta:event:)","title":"case channelPrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.ChannelPrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/init(channel:)","title":"init(channel: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/channel","title":"var channel: UInt4","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.ChannelPrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix","title":"MIDIFileEvent.ChannelPrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-channelprefix","title":"Channel Prefix","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:hr:min:sec:fr:subfr:frrate:)","title":"static func smpteOffset(delta: MIDIFileEvent.DeltaTime, hr: UInt8, min: UInt8, sec: UInt8, fr: UInt8, subFr: UInt8, frRate: MIDIFile.SMPTEOffsetFrameRate) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:scaling:)","title":"static func smpteOffset(delta: MIDIFileEvent.DeltaTime, scaling: Timecode) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:event:)","title":"case smpteOffset(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SMPTEOffset)","type":"case"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/components","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/framerate","title":"var frameRate: MIDIFile.SMPTEOffsetFrameRate","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/frames","title":"var frames: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/hours","title":"var hours: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/minutes","title":"var minutes: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/seconds","title":"var seconds: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/subframes","title":"var subframes: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.SMPTEOffset.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset","title":"MIDIFileEvent.SMPTEOffset","type":"struct"},{"title":"Types","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(framerate:limit:stringformat:subframesbase:showsvalidation:validationattributes:)","title":"init(frameRate: Timecode.FrameRate?, limit: Timecode.UpperLimit?, stringFormat: Timecode.StringFormat?, subFramesBase: Timecode.SubFramesBase?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:showsvalidation:validationattributes:)","title":"convenience init(using: Timecode, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/framerate","title":"var frameRate: Timecode.FrameRate?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/timecodetemplate","title":"var timecodeTemplate: Timecode?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/midikit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/d","title":"var d: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/f","title":"var f: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/h","title":"var h: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/m","title":"var m: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/s","title":"var s: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/sf","title":"var sf: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(at:limit:base:)","title":"func invalidComponents(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/totimecode(at:limit:base:format:)","title":"func toTimecode(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/totimecode(rawvaluesat:limit:base:format:)","title":"func toTimecode(rawValuesAt: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:at:limit:base:)","title":"func validRange(of: Timecode.Component, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> (ClosedRange<Int>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/==(_:_:)","title":"static func == (Timecode.Components, Timecode.Components) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/(_:_:)","title":"static func \/ (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/*(_:_:)","title":"static func * (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/+(_:_:)","title":"static func + (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/-(_:_:)","title":"static func - (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/init(_:base:)","title":"init(Timecode.FrameCount.Value, base: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframesbase","title":"let subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.property","title":"var value: Timecode.FrameCount.Value","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/wholeframes","title":"var wholeFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/adding(_:)","title":"func adding(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/dividing(by:)","title":"func dividing(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/multiplying(by:)","title":"func multiplying(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subtracting(_:)","title":"func subtracting(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/combined(frames:)","title":"case combined(frames: Double)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/frames(_:)","title":"case frames(Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/split(frames:subframes:)","title":"case split(frames: Int, subFrames: Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/splitunitinterval(frames:subframesunitinterval:)","title":"case splitUnitInterval(frames: Int, subFramesUnitInterval: Double)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum","title":"Timecode.FrameCount.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-21k75","title":"static func > (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-6zfr9","title":"static func < (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/==(_:_:)","title":"static func == (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct","title":"Timecode.FrameCount","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-2408u","title":"static func * (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-31yyg","title":"static func * <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-8a2na","title":"static func *= (inout Timecode, Double)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-9nsob","title":"static func *= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:)","title":"static func + (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:_:)","title":"static func + (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+=(_:_:)","title":"static func += (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:)","title":"static func - (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:_:)","title":"static func - (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-=(_:_:)","title":"static func -= (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/(_:_:)-563ih","title":"static func \/ <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/(_:_:)-5s440","title":"static func \/ (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/=(_:_:)-3n4p4","title":"static func \/= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/=(_:_:)-hpkf","title":"static func \/= (inout Timecode, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-1fx16","title":"init(Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-4huug","title":"init(String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-8njj6","title":"init(Timecode.FrameCount.Value, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:format:)","title":"init(Timecode.FrameCount, at: Timecode.FrameRate, limit: Timecode.UpperLimit, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(at:limit:base:format:)","title":"init(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-4ek9d","title":"init(clamping: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-98nqa","title":"init(clamping: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-49wst","title":"init(clampingEach: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-r9xw","title":"init(clampingEach: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(flattening:)","title":"init(flattening: TimecodeInterval)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-67ar6","title":"init(rawValues: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-w73i","title":"init(rawValues: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(realtimevalue:at:limit:base:format:)","title":"init(realTimeValue: TimeInterval, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(samples:samplerate:at:limit:base:format:)","title":"init(samples: Double, sampleRate: Int, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-2yinr","title":"init(wrapping: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-641sh","title":"init(wrapping: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.property","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/timecode\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.property","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.property","title":"var frameRate: Timecode.FrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Timecode.Component>","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressible","title":"var maxFrameCountExpressible: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressibledouble","title":"var maxFrameCountExpressibleDouble: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframecountexpressible","title":"var maxSubFrameCountExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframesexpressible","title":"var maxSubFramesExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecode\/scaledtomidifilesmpteframerate","title":"var scaledToMIDIFileSMPTEFrameRate: (scaledTimecode: Timecode?, smpteFR: MIDIFile.SMPTEOffsetFrameRate)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringformat-swift.property","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringvaluefilenamecompatible","title":"var stringValueFileNameCompatible: String","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.property","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.property","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"path":"\/documentation\/midikit\/timecode\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/add(_:)","title":"func add(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(clamping:)","title":"func add(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(wrapping:)","title":"func add(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)","title":"func adding(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(clamping:)","title":"func adding(clamping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(wrapping:)","title":"func adding(wrapping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/asinterval(_:)","title":"func asInterval(TimecodeInterval.Sign) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/clampcomponents()","title":"func clampComponents()","type":"method"},{"path":"\/documentation\/midikit\/timecode\/converted(to:preservingvalues:)","title":"func converted(to: Timecode.FrameRate, preservingValues: Bool) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/delta(to:)","title":"func delta(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:)","title":"func divide(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(clamping:)","title":"func divide(clamping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(wrapping:)","title":"func divide(wrapping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)","title":"func dividing(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(clamping:)","title":"func dividing(clamping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(wrapping:)","title":"func dividing(wrapping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/interval(to:)","title":"func interval(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:)","title":"func multiply(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(clamping:)","title":"func multiply(clamping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(wrapping:)","title":"func multiply(wrapping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:)","title":"func multiplying(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(clamping:)","title":"func multiplying(clamping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(wrapping:)","title":"func multiplying(wrapping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offset(by:)","title":"func offset(by: TimecodeInterval)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offsetting(by:)","title":"func offsetting(by: TimecodeInterval) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesvalue(atsamplerate:)","title":"func samplesValue(atSampleRate: Int) -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-4dl8k","title":"func setTimecode(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-9ka69","title":"func setTimecode(clamping: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-3iho9","title":"func setTimecode(clampingEach: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-ax0k","title":"func setTimecode(clampingEach: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-3vmet","title":"func setTimecode(exactly: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-5e793","title":"func setTimecode(exactly: Timecode.FrameCount.Value) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-9f9xo","title":"func setTimecode(exactly: Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(fromrealtimevalue:)","title":"func setTimecode(fromRealTimeValue: TimeInterval) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(fromsamplesvalue:atsamplerate:)","title":"func setTimecode(fromSamplesValue: Double, atSampleRate: Int) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-6rcsc","title":"func setTimecode(rawValues: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-96fy2","title":"func setTimecode(rawValues: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-1cj2w","title":"func setTimecode(wrapping: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-3ssi","title":"func setTimecode(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvaluevalidated(invalidattributes:withdefaultattributes:)","title":"func stringValueValidated(invalidAttributes: [NSAttributedString.Key : Any]?, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)","title":"func subtract(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(clamping:)","title":"func subtract(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(wrapping:)","title":"func subtract(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)","title":"func subtracting(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(clamping:)","title":"func subtracting(clamping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(wrapping:)","title":"func subtracting(wrapping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transform(using:)","title":"func transform(using: TimecodeTransformer)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transformed(using:)","title":"func transformed(using: TimecodeTransformer) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/validrange(of:)","title":"func validRange(of: Timecode.Component) -> (ClosedRange<Int>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/delta","title":"Timecode.Delta","type":"typealias"},{"path":"\/documentation\/midikit\/timecode\/stringformat-swift.typealias","title":"Timecode.StringFormat","type":"typealias"},{"path":"\/documentation\/midikit\/timecode\/transformer","title":"Timecode.Transformer","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components(from:at:)","title":"static func components(from: Timecode.FrameCount, at: Timecode.FrameRate) -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/decode(timecode:)","title":"static func decode(timecode: String) throws -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount(of:at:base:)","title":"static func frameCount(of: Timecode.Components, at: Timecode.FrameRate, base: Timecode.SubFramesBase) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:at:limit:base:)","title":"static func invalidComponents(in: TCC, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Set<Timecode.Component>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/days","title":"case days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/subframes","title":"case subFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/component\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/component","title":"Timecode.Component","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/showsubframes","title":"case showSubFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter","title":"Timecode.StringFormatParameter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/malformed","title":"case malformed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror","title":"Timecode.StringParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/quarterframes","title":"case quarterFrames","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/default()","title":"static func `default`() -> Timecode.SubFramesBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum","title":"Timecode.SubFramesBase","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum","title":"Timecode.UpperLimit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationerror","title":"Timecode.ValidationError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)","title":"static func < (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)","title":"static func == (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/advanced(by:)","title":"func advanced(by: Timecode.Stride) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/distance(to:)","title":"func distance(to: Timecode) -> Timecode.Stride","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stride","title":"Timecode.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/timecode\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode","title":"Timecode","type":"struct"},{"path":"\/documentation\/midikit\/tcc","title":"TCC","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-smpteoffset","title":"SMPTE Offset","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber(delta:sequence:)","title":"static func sequenceNumber(delta: MIDIFileEvent.DeltaTime, sequence: UInt16) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber(delta:event:)","title":"case sequenceNumber(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SequenceNumber)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/init(sequence:)","title":"init(sequence: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/sequence","title":"var sequence: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.SequenceNumber.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber","title":"MIDIFileEvent.SequenceNumber","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-sequencenumber","title":"Sequence Number","type":"symbol"},{"title":"Temporal","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature(delta:flatsorsharps:majorkey:)","title":"static func keySignature(delta: MIDIFileEvent.DeltaTime, flatsOrSharps: Int8, majorKey: Bool) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature(delta:event:)","title":"case keySignature(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.KeySignature)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/init(flatsorsharps:majorkey:)","title":"init(flatsOrSharps: Int8, majorKey: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/flatsorsharps","title":"var flatsOrSharps: Int8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/majorkey","title":"var majorKey: Bool","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.KeySignature.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature","title":"MIDIFileEvent.KeySignature","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-keysignature","title":"Key Signature","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature(delta:numerator:denominator:)","title":"static func timeSignature(delta: MIDIFileEvent.DeltaTime, numerator: UInt8, denominator: UInt8) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature(delta:event:)","title":"case timeSignature(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.TimeSignature)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init(numerator:denominator:midiclocksbetweenmetronomeclicks:numberof32ndnotesinaquarternote:)","title":"init(numerator: UInt8, denominator: UInt8, midiClocksBetweenMetronomeClicks: UInt8, numberOf32ndNotesInAQuarterNote: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/denominator","title":"var denominator: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midiclocksbetweenmetronomeclicks","title":"var midiClocksBetweenMetronomeClicks: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/numberof32ndnotesinaquarternote","title":"var numberOf32ndNotesInAQuarterNote: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/numerator","title":"var numerator: UInt8","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.TimeSignature.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature","title":"MIDIFileEvent.TimeSignature","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-timesignature","title":"Time Signature","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo(delta:bpm:)","title":"static func tempo(delta: MIDIFileEvent.DeltaTime, bpm: Double) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo(delta:event:)","title":"case tempo(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Tempo)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/init(bpm:)","title":"init(bpm: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/bpm","title":"var bpm: Double","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/bpmencoded","title":"var bpmEncoded: Double","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/microseconds","title":"var microseconds: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/tempo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.Tempo.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/tempo\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/tempo","title":"MIDIFileEvent.Tempo","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-tempo","title":"Tempo","type":"symbol"},{"title":"Channel Voice","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:note:velocity:channel:)-560m","title":"static func noteOn(delta: MIDIFileEvent.DeltaTime, note: UInt7, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:note:velocity:channel:)-4jcss","title":"static func noteOn(delta: MIDIFileEvent.DeltaTime, note: MIDINote, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:event:)","title":"case noteOn(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NoteOn)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/noteon","title":"MIDIFileEvent.NoteOn","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-noteon","title":"Note On","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:note:velocity:channel:)-6eth4","title":"static func noteOff(delta: MIDIFileEvent.DeltaTime, note: UInt7, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:note:velocity:channel:)-3m9r7","title":"static func noteOff(delta: MIDIFileEvent.DeltaTime, note: MIDINote, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:event:)","title":"case noteOff(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NoteOff)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff","title":"MIDIFileEvent.NoteOff","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-noteoff","title":"Note Off","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:note:amount:channel:)-71uo5","title":"static func notePressure(delta: MIDIFileEvent.DeltaTime, note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:note:amount:channel:)-2ioo1","title":"static func notePressure(delta: MIDIFileEvent.DeltaTime, note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:event:)","title":"case notePressure(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NotePressure)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure","title":"MIDIFileEvent.NotePressure","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-notepressure","title":"Note Pressure (Poly Aftertouch)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:controller:value:channel:)-145k9","title":"static func cc(delta: MIDIFileEvent.DeltaTime, controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:controller:value:channel:)-3m14a","title":"static func cc(delta: MIDIFileEvent.DeltaTime, controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:event:)","title":"case cc(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.CC)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/cc","title":"MIDIFileEvent.CC","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-cc","title":"CC (Control Change)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:value:channel:)","title":"static func pitchBend(delta: MIDIFileEvent.DeltaTime, value: MIDIEvent.PitchBend.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:lsb:msb:channel:)","title":"static func pitchBend(delta: MIDIFileEvent.DeltaTime, lsb: UInt8, msb: UInt8, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:event:)","title":"case pitchBend(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.PitchBend)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend","title":"MIDIFileEvent.PitchBend","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-pitchbend","title":"Pitch Bend","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pressure(delta:amount:channel:)","title":"static func pressure(delta: MIDIFileEvent.DeltaTime, amount: MIDIEvent.Pressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pressure(delta:event:)","title":"case pressure(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Pressure)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/pressure","title":"MIDIFileEvent.Pressure","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-pressure","title":"Pressure (Channel Aftertouch)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/programchange(delta:program:channel:)","title":"static func programChange(delta: MIDIFileEvent.DeltaTime, program: UInt7, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/programchange(delta:event:)","title":"case programChange(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.ProgramChange)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/programchange","title":"MIDIFileEvent.ProgramChange","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-programchange","title":"Program Change","type":"symbol"},{"title":"System Exclusive","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7(delta:manufacturer:data:)","title":"static func sysEx7(delta: MIDIFileEvent.DeltaTime, manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7(delta:event:)","title":"case sysEx7(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SysEx7)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7","title":"MIDIFileEvent.SysEx7","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-sysex7","title":"System Exclusive 7","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7(delta:universaltype:deviceid:subid1:subid2:data:)","title":"static func universalSysEx7(delta: MIDIFileEvent.DeltaTime, universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7(delta:event:)","title":"case universalSysEx7(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.UniversalSysEx7)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7","title":"MIDIFileEvent.UniversalSysEx7","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-universalsysex7","title":"Universal System Exclusive 7","type":"symbol"},{"title":"Text","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text(delta:type:string:)","title":"static func text(delta: MIDIFileEvent.DeltaTime, type: MIDIFileEvent.Text.EventType, string: String) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text(delta:event:)","title":"case text(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Text)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(copyright:)","title":"init(copyright: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(cuepoint:)","title":"init(cuePoint: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(devicename:)","title":"init(deviceName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(instrumentname:)","title":"init(instrumentName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(lyric:)","title":"init(lyric: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(marker:)","title":"init(marker: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(programname:)","title":"init(programName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(text:)","title":"init(text: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(trackorsequencename:)","title":"init(trackOrSequenceName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(type:string:)","title":"init(type: MIDIFileEvent.Text.EventType, string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/texttype","title":"var textType: MIDIFileEvent.Text.EventType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/copyright","title":"case copyright","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/cuepoint","title":"case cuePoint","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/devicename","title":"case deviceName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/instrumentname","title":"case instrumentName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/lyric","title":"case lyric","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/marker","title":"case marker","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/programname","title":"case programName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/text","title":"case text","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/trackorsequencename","title":"case trackOrSequenceName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype","title":"MIDIFileEvent.Text.EventType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/text\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.Text.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/text\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/text","title":"MIDIFileEvent.Text","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-text","title":"Text","type":"symbol"},{"title":"Additional","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific(delta:data:)","title":"static func sequencerSpecific(delta: MIDIFileEvent.DeltaTime, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific(delta:event:)","title":"case sequencerSpecific(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SequencerSpecific)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/init(data:)","title":"init(data: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/data","title":"var data: [UInt8]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.SequencerSpecific.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific","title":"MIDIFileEvent.SequencerSpecific","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-sequencerspecific","title":"Sequencer Specific","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix(delta:patchset:)","title":"static func xmfPatchTypePrefix(delta: MIDIFileEvent.DeltaTime, patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix(delta:event:)","title":"case xmfPatchTypePrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.XMFPatchTypePrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/init(patchset:)","title":"init(patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.property","title":"var patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/dls","title":"case DLS","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/generalmidi1","title":"case generalMIDI1","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/generalmidi2","title":"case generalMIDI2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum","title":"MIDIFileEvent.XMFPatchTypePrefix.PatchSet","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.XMFPatchTypePrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix","title":"MIDIFileEvent.XMFPatchTypePrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-xmfpatchtypeprefix","title":"XMF Patch Type Prefix","type":"symbol"},{"title":"Orphan Events","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta(delta:metatype:data:)","title":"static func unrecognizedMeta(delta: MIDIFileEvent.DeltaTime, metaType: UInt8, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta(delta:event:)","title":"case unrecognizedMeta(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.UnrecognizedMeta)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/init(metatype:data:)","title":"init(metaType: UInt8, data: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/metatype","title":"var metaType: UInt8","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIFileEvent.UnrecognizedMeta.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta","title":"MIDIFileEvent.UnrecognizedMeta","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-unrecognizedmeta","title":"Unrecognized Meta","type":"symbol"},{"title":"Translation between MIDIKit.MIDIEvent","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/event()","title":"func event() -> MIDIEvent?","type":"method"},{"path":"\/documentation\/midikit\/midievent\/smfevent(delta:)","title":"func smfEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent?","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/concretetype","title":"var concreteType: MIDIFileEventPayload.Type","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/eventtype","title":"var eventType: MIDIFileEventType","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smfunwrappedevent","title":"var smfUnwrappedEvent: (delta: MIDIFileEvent.DeltaTime, event: MIDIFileEventPayload)","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent","title":"MIDIFileEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/halfnote","title":"case halfNote","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/quarternote","title":"case quarterNote","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/ticks(_:)","title":"case ticks(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/wholenote","title":"case wholeNote","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/init(ticks:using:)","title":"init?(ticks: UInt32, using: MIDIFile.TimeBase)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/ticksvalue(using:)","title":"func ticksValue(using: MIDIFile.TimeBase) -> UInt32","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/==(_:_:)","title":"static func == (MIDIFileEvent.DeltaTime, MIDIFileEvent.DeltaTime) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime","title":"MIDIFileEvent.DeltaTime","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/init(_:octave:style:)","title":"init(MIDINote.Name, octave: Int, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-34opv","title":"init<T>(T, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-51azh","title":"init(String, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-5uo8y","title":"init(UInt7, style: MIDINote.Style)","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(frequency:style:)","title":"init(frequency: Double, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(style:)","title":"init(style: MIDINote.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.property","title":"var name: MIDINote.Name","type":"property"},{"path":"\/documentation\/midikit\/midinote\/number","title":"var number: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midinote\/octave","title":"var octave: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.property","title":"var style: MIDINote.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/frequencyvalue(tuning:)","title":"func frequencyValue(tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/allnotes(style:)","title":"static func allNotes(style: MIDINote.Style) -> [MIDINote]","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatefrequency(midinote:tuning:)","title":"static func calculateFrequency(midiNote: Int, tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatemidinotenumber(frequency:tuning:)","title":"static func calculateMIDINoteNumber(frequency: Double, tuning: Double) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a_sharp","title":"case A_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c_sharp","title":"case C_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d_sharp","title":"case D_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f_sharp","title":"case F_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g_sharp","title":"case G_sharp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/init(_:)","title":"init?(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/scaleoffset","title":"var scaleOffset: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidental","title":"static let flatAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidentalunicode","title":"static let flatAccidentalUnicode: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidental","title":"static let sharpAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidentalunicode","title":"static let sharpAccidentalUnicode: Character","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum","title":"MIDINote.Name","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/malformednotename","title":"case malformedNoteName","type":"case"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription-4tu09","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription-8n88u","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/noteerror","title":"MIDINote.NoteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/cakewalk","title":"case cakewalk","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/roland","title":"case roland","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/yamaha","title":"case yamaha","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/firstoctaveoffset","title":"var firstOctaveOffset: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum","title":"MIDINote.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)","title":"static func < (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)","title":"static func == (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/advanced(by:)","title":"func advanced(by: Int) -> MIDINote","type":"method"},{"path":"\/documentation\/midikit\/midinote\/distance(to:)","title":"func distance(to: MIDINote) -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/stride","title":"MIDINote.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/midinote\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote","title":"MIDINote","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifilechunk\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifilechunk\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifilechunk","title":"MIDIFileChunk","type":"protocol"},{"title":"MIDIKit Protocol Conformances","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDI File Internals","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/channelprefix","title":"case channelPrefix","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/keysignature","title":"case keySignature","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/portprefix","title":"case portPrefix","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/programchange","title":"case programChange","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sequencenumber","title":"case sequenceNumber","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sequencerspecific","title":"case sequencerSpecific","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/smpteoffset","title":"case smpteOffset","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/tempo","title":"case tempo","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/text","title":"case text","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/timesignature","title":"case timeSignature","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/unrecognizedmeta","title":"case unrecognizedMeta","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/xmfpatchtypeprefix","title":"case xmfPatchTypePrefix","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/concretetype","title":"var concreteType: MIDIFileEventPayload.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileeventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileeventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileeventtype","title":"MIDIFileEventType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/streamdecoderesult","title":"MIDIFileEventPayload.StreamDecodeResult","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfeventtype","title":"static var smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> Self.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileeventpayload","title":"MIDIFileEventPayload","type":"protocol"},{"title":"MIDIKit MIDI Note Related","type":"groupMarker"},{"children":[{"title":"Categories","type":"groupMarker"},{"children":[{"title":"Constructors (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-5hwd6","title":"static func noteOn(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-3aq0d","title":"static func noteOn(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-9ntbn","title":"static func noteOff(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-40eu2","title":"static func noteOff(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-8m6c8","title":"static func notePressure(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-9knkb","title":"static func notePressure(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-1r3oe","title":"static func cc(UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-7k06z","title":"static func cc(MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccrpn(_:channel:group:)","title":"static func ccRPN(MIDIEvent.CC.Controller.RPN, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccnrpn(_:channel:group:)","title":"static func ccNRPN(MIDIEvent.CC.Controller.NRPN, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(value:channel:group:)","title":"static func pitchBend(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure(amount:channel:group:)","title":"static func pressure(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange(program:bank:channel:group:)","title":"static func programChange(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-91ea3","title":"static func noteCC(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-8vd58","title":"static func noteCC(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qoa8","title":"static func notePitchBend(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qk4i","title":"static func notePitchBend(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-9f1cj","title":"static func noteManagement(note: UInt7, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-3o4c8","title":"static func noteManagement(note: MIDINote, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:)","title":"case noteOn(MIDIEvent.NoteOn)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-25kbb","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-4s0ia","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1zerovelocityasnoteoff","title":"var midi1ZeroVelocityAsNoteOff: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/==(_:_:)","title":"static func == (MIDIEvent.NoteOn, MIDIEvent.NoteOn) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NoteOn.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteon","title":"MIDIEvent.NoteOn","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:)","title":"case noteOff(MIDIEvent.NoteOff)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-8mn5r","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-99wpk","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NoteOff.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteoff","title":"MIDIEvent.NoteOff","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepressure(_:)","title":"case notePressure(MIDIEvent.NotePressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-4wnrd","title":"init(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-5k2yu","title":"init(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.property","title":"var amount: MIDIEvent.NotePressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/note","title":"var note: MIDINote","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.typealias","title":"MIDIEvent.NotePressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amountvalidated","title":"MIDIEvent.NotePressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.NotePressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepressure","title":"MIDIEvent.NotePressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/cc(_:)","title":"case cc(MIDIEvent.CC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-8rt6a","title":"init(controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-b9q8","title":"init(controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.property","title":"var controller: MIDIEvent.CC.Controller","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.property","title":"var value: MIDIEvent.CC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.typealias","title":"MIDIEvent.CC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/cc\/valuevalidated","title":"MIDIEvent.CC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-6s3dq","title":"static func != <T>(T, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-9fgjo","title":"static func != <T>(MIDIEvent.CC.Controller, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-5k5fh","title":"static func == <T>(MIDIEvent.CC.Controller, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-6y8wz","title":"static func == <T>(T, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/datadecrement","title":"case dataDecrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataincrement","title":"case dataIncrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose5","title":"case generalPurpose5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose6","title":"case generalPurpose6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose7","title":"case generalPurpose7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose8","title":"case generalPurpose8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/highresolutionvelocityprefix","title":"case highResolutionVelocityPrefix","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/hold2","title":"case hold2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/legatofootswitch","title":"case legatoFootswitch","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb(for:)","title":"case lsb(for: MIDIEvent.CC.Controller.LSB)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode(_:)","title":"case mode(MIDIEvent.CC.Controller.Mode)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnlsb","title":"case nrpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnmsb","title":"case nrpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamento","title":"case portamento","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentocontrol","title":"case portamentoControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnlsb","title":"case rpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnmsb","title":"case rpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/softpedal","title":"case softPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sostenutopedal","title":"case sostenutoPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sustainpedal","title":"case sustainPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/init(number:)","title":"init(number: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/number","title":"var number: UInt7","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/channelvolume","title":"case channelVolume","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.LSB.Undefined)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc9","title":"case cc9","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/msbcontroller","title":"var msbController: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined","title":"MIDIEvent.CC.Controller.LSB.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb","title":"MIDIEvent.CC.Controller.LSB","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allnotesoff","title":"case allNotesOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allsoundoff","title":"case allSoundOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/localcontrol","title":"case localControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/monomodeon","title":"case monoModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeoff","title":"case omniModeOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeon","title":"case omniModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/polymodeon","title":"case polyModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/resetallcontrollers","title":"case resetAllControllers","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode","title":"MIDIEvent.CC.Controller.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/parameter","title":"var parameter: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/events(channel:group:)","title":"func events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpn","title":"MIDIEvent.CC.Controller.NRPN","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/channelcoarsetuning(_:)","title":"case channelCoarseTuning(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/channelfinetuning(_:)","title":"case channelFineTuning(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/modulationdepthrange(dataentrymsb:dataentrylsb:)","title":"case modulationDepthRange(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/mpeconfigurationmessage(dataentrymsb:dataentrylsb:)","title":"case mpeConfigurationMessage(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/pitchbendsensitivity(semitones:cents:)","title":"case pitchBendSensitivity(semitones: UInt7, cents: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalazimuthangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalAzimuthAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionaldistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalelevationangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalElevationAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalgain(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGain(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalgainatmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGainAtMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalpanspreadangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalPanSpreadAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalreferencedistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalReferenceDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/threedimensionalrollangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalRollAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/tuningbankselect(number:)","title":"case tuningBankSelect(number: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/tuningprogramchange(number:)","title":"case tuningProgramChange(number: UInt7)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/parameter","title":"var parameter: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/events(channel:group:)","title":"func events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpn","title":"MIDIEvent.CC.Controller.RPN","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc90","title":"case cc90","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined","title":"MIDIEvent.CC.Controller.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.typealias","title":"MIDIEvent.CC.Controller.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.CC.Controller]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-7fi2c","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum","title":"MIDIEvent.CC.Controller","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.CC.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/cc\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc","title":"MIDIEvent.CC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(_:)","title":"case pitchBend(MIDIEvent.PitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(value:channel:group:)","title":"init(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.property","title":"var value: MIDIEvent.PitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.typealias","title":"MIDIEvent.PitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/valuevalidated","title":"MIDIEvent.PitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.PitchBend.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pitchbend","title":"MIDIEvent.PitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pressure(_:)","title":"case pressure(MIDIEvent.Pressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(amount:channel:group:)","title":"init(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.property","title":"var amount: MIDIEvent.Pressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.typealias","title":"MIDIEvent.Pressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amountvalidated","title":"MIDIEvent.Pressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.Pressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pressure","title":"MIDIEvent.Pressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/programchange(_:)","title":"case programChange(MIDIEvent.ProgramChange)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(program:bank:channel:group:)","title":"init(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.property","title":"var bank: MIDIEvent.ProgramChange.Bank","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/program","title":"var program: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(_:)","title":"case bankSelect(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/nobankselect","title":"case noBankSelect","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(msb:lsb:)","title":"static func bankSelect(msb: UInt7, lsb: UInt7) -> MIDIEvent.ProgramChange.Bank","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum","title":"MIDIEvent.ProgramChange.Bank","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.ProgramChange.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/programchange\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange","title":"MIDIEvent.ProgramChange","type":"struct"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(_:)","title":"case noteCC(MIDIEvent.NoteCC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-1cswx","title":"init(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-96y16","title":"init(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/controller","title":"var controller: MIDIEvent.NoteCC.PerNoteController","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.property","title":"var value: MIDIEvent.NoteCC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.typealias","title":"MIDIEvent.NoteCC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notecc\/valuevalidated","title":"MIDIEvent.NoteCC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable(_:)","title":"case assignable(MIDIEvent.NoteCC.PerNoteController.Assignable)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)","title":"case registered(MIDIEvent.NoteCC.PerNoteController.Registered)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/number","title":"var number: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable","title":"MIDIEvent.NoteCC.PerNoteController.Assignable","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/fine","title":"var fine: UInt25","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Pitch7_25","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-2iqvl","title":"static func != <T>(T, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4hg0e","title":"static func != <T>(MIDIEvent.NoteCC.PerNoteController.Registered, T) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-2j2mi","title":"static func == <T>(T, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-3hpch","title":"static func == <T>(MIDIEvent.NoteCC.PerNoteController.Registered, T) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.enum.case","title":"case pitch7_25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined(_:)","title":"case undefined(MIDIEvent.NoteCC.PerNoteController.Registered.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/init(number:)","title":"init(number: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/number","title":"var number: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc0","title":"case cc0","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc100","title":"case cc100","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc101","title":"case cc101","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc12","title":"case cc12","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc120","title":"case cc120","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc121","title":"case cc121","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc122","title":"case cc122","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc123","title":"case cc123","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc124","title":"case cc124","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc125","title":"case cc125","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc126","title":"case cc126","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc127","title":"case cc127","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc128","title":"case cc128","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc129","title":"case cc129","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc13","title":"case cc13","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc130","title":"case cc130","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc131","title":"case cc131","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc132","title":"case cc132","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc133","title":"case cc133","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc134","title":"case cc134","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc135","title":"case cc135","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc136","title":"case cc136","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc137","title":"case cc137","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc138","title":"case cc138","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc139","title":"case cc139","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc140","title":"case cc140","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc141","title":"case cc141","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc142","title":"case cc142","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc143","title":"case cc143","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc144","title":"case cc144","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc145","title":"case cc145","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc146","title":"case cc146","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc147","title":"case cc147","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc148","title":"case cc148","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc149","title":"case cc149","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc150","title":"case cc150","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc151","title":"case cc151","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc152","title":"case cc152","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc153","title":"case cc153","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc154","title":"case cc154","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc155","title":"case cc155","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc156","title":"case cc156","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc157","title":"case cc157","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc158","title":"case cc158","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc159","title":"case cc159","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc16","title":"case cc16","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc160","title":"case cc160","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc161","title":"case cc161","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc162","title":"case cc162","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc163","title":"case cc163","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc164","title":"case cc164","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc165","title":"case cc165","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc166","title":"case cc166","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc167","title":"case cc167","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc168","title":"case cc168","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc169","title":"case cc169","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc17","title":"case cc17","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc170","title":"case cc170","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc171","title":"case cc171","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc172","title":"case cc172","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc173","title":"case cc173","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc174","title":"case cc174","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc175","title":"case cc175","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc176","title":"case cc176","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc177","title":"case cc177","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc178","title":"case cc178","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc179","title":"case cc179","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc18","title":"case cc18","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc180","title":"case cc180","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc181","title":"case cc181","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc182","title":"case cc182","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc183","title":"case cc183","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc184","title":"case cc184","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc185","title":"case cc185","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc186","title":"case cc186","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc187","title":"case cc187","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc188","title":"case cc188","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc189","title":"case cc189","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc19","title":"case cc19","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc190","title":"case cc190","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc191","title":"case cc191","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc192","title":"case cc192","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc193","title":"case cc193","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc194","title":"case cc194","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc195","title":"case cc195","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc196","title":"case cc196","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc197","title":"case cc197","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc198","title":"case cc198","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc199","title":"case cc199","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc200","title":"case cc200","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc201","title":"case cc201","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc202","title":"case cc202","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc203","title":"case cc203","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc204","title":"case cc204","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc205","title":"case cc205","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc206","title":"case cc206","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc207","title":"case cc207","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc208","title":"case cc208","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc209","title":"case cc209","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc210","title":"case cc210","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc211","title":"case cc211","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc212","title":"case cc212","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc213","title":"case cc213","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc214","title":"case cc214","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc215","title":"case cc215","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc216","title":"case cc216","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc217","title":"case cc217","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc218","title":"case cc218","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc219","title":"case cc219","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc220","title":"case cc220","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc221","title":"case cc221","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc222","title":"case cc222","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc223","title":"case cc223","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc224","title":"case cc224","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc225","title":"case cc225","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc226","title":"case cc226","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc227","title":"case cc227","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc228","title":"case cc228","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc229","title":"case cc229","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc230","title":"case cc230","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc231","title":"case cc231","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc232","title":"case cc232","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc233","title":"case cc233","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc234","title":"case cc234","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc235","title":"case cc235","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc236","title":"case cc236","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc237","title":"case cc237","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc238","title":"case cc238","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc239","title":"case cc239","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc240","title":"case cc240","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc241","title":"case cc241","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc242","title":"case cc242","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc243","title":"case cc243","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc244","title":"case cc244","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc245","title":"case cc245","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc246","title":"case cc246","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc247","title":"case cc247","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc248","title":"case cc248","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc249","title":"case cc249","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc250","title":"case cc250","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc251","title":"case cc251","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc252","title":"case cc252","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc253","title":"case cc253","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc254","title":"case cc254","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc255","title":"case cc255","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc32","title":"case cc32","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc33","title":"case cc33","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc34","title":"case cc34","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc35","title":"case cc35","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc36","title":"case cc36","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc37","title":"case cc37","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc38","title":"case cc38","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc39","title":"case cc39","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc4","title":"case cc4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc40","title":"case cc40","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc41","title":"case cc41","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc42","title":"case cc42","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc43","title":"case cc43","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc44","title":"case cc44","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc45","title":"case cc45","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc46","title":"case cc46","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc47","title":"case cc47","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc48","title":"case cc48","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc49","title":"case cc49","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc5","title":"case cc5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc50","title":"case cc50","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc51","title":"case cc51","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc52","title":"case cc52","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc53","title":"case cc53","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc54","title":"case cc54","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc55","title":"case cc55","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc56","title":"case cc56","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc57","title":"case cc57","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc58","title":"case cc58","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc59","title":"case cc59","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc6","title":"case cc6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc60","title":"case cc60","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc61","title":"case cc61","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc62","title":"case cc62","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc63","title":"case cc63","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc64","title":"case cc64","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc65","title":"case cc65","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc66","title":"case cc66","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc67","title":"case cc67","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc68","title":"case cc68","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc69","title":"case cc69","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc80","title":"case cc80","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc81","title":"case cc81","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc82","title":"case cc82","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc83","title":"case cc83","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc84","title":"case cc84","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc88","title":"case cc88","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc90","title":"case cc90","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc96","title":"case cc96","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc97","title":"case cc97","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc98","title":"case cc98","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc99","title":"case cc99","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/controller","title":"var controller: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.typealias","title":"MIDIEvent.NoteCC.PerNoteController.Registered.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.NoteCC.PerNoteController.Registered]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4uipw","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered","title":"MIDIEvent.NoteCC.PerNoteController.Registered","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller","title":"MIDIEvent.NoteCC.PerNoteController","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc","title":"MIDIEvent.NoteCC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(_:)","title":"case notePitchBend(MIDIEvent.NotePitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-3plbb","title":"init(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-50vvj","title":"init(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.property","title":"var value: MIDIEvent.NotePitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.typealias","title":"MIDIEvent.NotePitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/valuevalidated","title":"MIDIEvent.NotePitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend","title":"MIDIEvent.NotePitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(_:)","title":"case noteManagement(MIDIEvent.NoteManagement)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-4ur90","title":"init(note: MIDINote, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-7mosa","title":"init(note: UInt7, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflags","title":"var optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/detachpernotecontrollers","title":"case detachPerNoteControllers","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/resetpernotecontrollers","title":"case resetPerNoteControllers","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag","title":"MIDIEvent.NoteManagement.OptionFlag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement","title":"MIDIEvent.NoteManagement","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-2kk3a","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-3pzrg","title":"init(BytePair)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-7oxv7","title":"init(Double)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(coarse:fine:)","title":"init(coarse: UInt7, fine: UInt9)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/fine","title":"var fine: UInt9","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9","title":"MIDIEvent.NoteAttribute.Pitch7_9","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/manufacturerspecific(data:)","title":"case manufacturerSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(_:)","title":"case pitch7_9(MIDIEvent.NoteAttribute.Pitch7_9)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/profilespecific(data:)","title":"case profileSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/undefined(attributetype:data:)","title":"case undefined(attributeType: UInt8, data: UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/init(type:data:)","title":"init(type: UInt8, data: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributedata","title":"var attributeData: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributetype","title":"var attributeType: UInt8","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(coarse:fine:)","title":"static func pitch7_9(coarse: UInt7, fine: UInt9) -> MIDIEvent.NoteAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute","title":"MIDIEvent.NoteAttribute","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/notevelocity","title":"MIDIEvent.NoteVelocity","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notevelocityvalidated","title":"MIDIEvent.NoteVelocityValidated","type":"typealias"}],"path":"\/documentation\/midikit\/midievent-channel-voice","title":"Channel Voice","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(midibeat:group:)","title":"static func songPositionPointer(midiBeat: UInt14, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect(number:group:)","title":"static func songSelect(number: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(databyte:group:)","title":"static func timecodeQuarterFrame(dataByte: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(group:)","title":"static func tuneRequest(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(bus:group:)","title":"static func unofficialBusSelect(bus: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(_:)","title":"case songPositionPointer(MIDIEvent.SongPositionPointer)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/init(midibeat:group:)","title":"init(midiBeat: UInt14, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midibeat","title":"var midiBeat: UInt14","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer","title":"MIDIEvent.SongPositionPointer","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/songselect(_:)","title":"case songSelect(MIDIEvent.SongSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/init(number:group:)","title":"init(number: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songselect\/number","title":"var number: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songselect","title":"MIDIEvent.SongSelect","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(_:)","title":"case timecodeQuarterFrame(MIDIEvent.TimecodeQuarterFrame)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/init(databyte:group:)","title":"init(dataByte: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/databyte","title":"var dataByte: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe","title":"MIDIEvent.TimecodeQuarterFrame","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(_:)","title":"case tuneRequest(MIDIEvent.TuneRequest)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/tunerequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/tunerequest","title":"MIDIEvent.TuneRequest","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(_:)","title":"case unofficialBusSelect(MIDIEvent.UnofficialBusSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/init(bus:group:)","title":"init(bus: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/bus","title":"var bus: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect","title":"MIDIEvent.UnofficialBusSelect","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-common","title":"System Common","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawhexstring:group:)","title":"static func sysEx7<S>(rawHexString: S, group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawbytes:group:)","title":"static func sysEx7(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(manufacturer:data:group:)","title":"static func sysEx8(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(rawbytes:group:)","title":"static func sysEx8(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx8(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(_:)","title":"case sysEx7(MIDIEvent.SysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawhexstring(leadingf0:trailingf7:separator:)","title":"func midi1RawHexString(leadingF0: Bool, trailingF7: Bool, separator: String?) -> String","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.SysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex7","title":"MIDIEvent.SysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(_:)","title":"case universalSysEx7(MIDIEvent.UniversalSysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom<D>(midi1SMFRawBytesStream: D) throws -> MIDIEvent.UniversalSysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7","title":"MIDIEvent.UniversalSysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/sysex8(_:)","title":"case sysEx8(MIDIEvent.SysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex8","title":"MIDIEvent.SysEx8","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(_:)","title":"case universalSysEx8(MIDIEvent.UniversalSysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8","title":"MIDIEvent.UniversalSysEx8","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/manufacturer(_:)","title":"case manufacturer(MIDIEvent.SysExManufacturer)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/universal(_:)","title":"case universal(MIDIEvent.UniversalSysExType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexid","title":"MIDIEvent.SysExID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/onebyte(_:)","title":"case oneByte(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/threebyte(byte2:byte3:)","title":"case threeByte(byte2: UInt7, byte3: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/educational()","title":"static func educational() -> MIDIEvent.SysExManufacturer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer","title":"MIDIEvent.SysExManufacturer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/nonrealtime","title":"case nonRealTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/realtime","title":"case realTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawuint8value:)","title":"init?(rawUInt8Value: UInt8)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawvalue:)","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype","title":"MIDIEvent.UniversalSysExType","type":"enum"}],"path":"\/documentation\/midikit\/midievent-system-exclusive","title":"System Exclusive","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(group:)","title":"static func start(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop(group:)","title":"static func stop(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue(group:)","title":"static func `continue`(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock(group:)","title":"static func timingClock(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset(group:)","title":"static func systemReset(group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(_:)","title":"case start(MIDIEvent.Start)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/start\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/start","title":"MIDIEvent.Start","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/stop(_:)","title":"case stop(MIDIEvent.Stop)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/stop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/stop","title":"MIDIEvent.Stop","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/continue(_:)","title":"case `continue`(MIDIEvent.Continue)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/continue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/continue","title":"MIDIEvent.Continue","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timingclock(_:)","title":"case timingClock(MIDIEvent.TimingClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timingclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timingclock","title":"MIDIEvent.TimingClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/systemreset(_:)","title":"case systemReset(MIDIEvent.SystemReset)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/systemreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/systemreset","title":"MIDIEvent.SystemReset","type":"struct"},{"title":"Deprecated in MIDI 2.0","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing(group:)","title":"static func activeSensing(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing(_:)","title":"case activeSensing(MIDIEvent.ActiveSensing)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/activesensing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/activesensing","title":"MIDIEvent.ActiveSensing","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-real-time","title":"System Real-Time","type":"symbol"},{"children":[{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(group:)","title":"static func noOp(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrclock(time:group:)","title":"static func jrClock(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(time:group:)","title":"static func jrTimestamp(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(_:)","title":"case noOp(MIDIEvent.NoOp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noop","title":"MIDIEvent.NoOp","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrclock(_:)","title":"case jrClock(MIDIEvent.JRClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrclock","title":"MIDIEvent.JRClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(_:)","title":"case jrTimestamp(MIDIEvent.JRTimestamp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp","title":"MIDIEvent.JRTimestamp","type":"struct"}],"path":"\/documentation\/midikit\/midievent-utility","title":"Utility Messages","type":"symbol"},{"title":"General Properties","type":"groupMarker"},{"children":[{"title":"Channel Voice","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/channel","title":"var channel: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/group","title":"var group: UInt4","type":"property"}],"path":"\/documentation\/midikit\/midievent-general-properties","title":"General Properties","type":"symbol"},{"title":"Event Filtering","type":"groupMarker"},{"children":[{"title":"Filtering","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice","title":"var isChannelVoice: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftype:)","title":"func isChannelVoice(ofType: MIDIEvent.ChanVoiceType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftypes:)","title":"func isChannelVoice(ofTypes: Set<MIDIEvent.ChanVoiceType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon","title":"var isSystemCommon: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftype:)","title":"func isSystemCommon(ofType: MIDIEvent.SysCommonType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftypes:)","title":"func isSystemCommon(ofTypes: Set<MIDIEvent.SysCommonType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive","title":"var isSystemExclusive: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftype:)","title":"func isSystemExclusive(ofType: MIDIEvent.SysExType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftypes:)","title":"func isSystemExclusive(ofTypes: Set<MIDIEvent.SysExType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime","title":"var isSystemRealTime: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftype:)","title":"func isSystemRealTime(ofType: MIDIEvent.SysRealTimeType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftypes:)","title":"func isSystemRealTime(ofTypes: Set<MIDIEvent.SysRealTimeType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility","title":"var isUtility: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftype:)","title":"func isUtility(ofType: MIDIEvent.UtilityType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftypes:)","title":"func isUtility(ofTypes: Set<MIDIEvent.UtilityType>) -> Bool","type":"method"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notecc","title":"case noteCC","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notemanagement","title":"case noteManagement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepitchbend","title":"case notePitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/programchange","title":"case programChange","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype","title":"MIDIEvent.ChanVoiceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.enum.case","title":"case dropCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.enum.case","title":"case dropCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannel(_:)","title":"case dropChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannels(_:)","title":"case dropChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinrange(_:)","title":"case dropNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinranges(_:)","title":"case dropNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptype(_:)","title":"case dropType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.enum.case","title":"case keepCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.enum.case","title":"case keepCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannel(_:)","title":"case keepChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannels(_:)","title":"case keepChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinrange(_:)","title":"case keepNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinranges(_:)","title":"case keepNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.enum.case","title":"case onlyCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.enum.case","title":"case onlyCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannel(_:)","title":"case onlyChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannels(_:)","title":"case onlyChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinrange(_:)","title":"case onlyNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinranges(_:)","title":"case onlyNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.type.method","title":"static func dropCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.type.method","title":"static func dropCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.type.method","title":"static func keepCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.type.method","title":"static func keepCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.type.method","title":"static func onlyCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.type.method","title":"static func onlyCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes","title":"MIDIEvent.ChanVoiceTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songpositionpointer","title":"case songPositionPointer","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songselect","title":"case songSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/timecodequarterframe","title":"case timecodeQuarterFrame","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/tunerequest","title":"case tuneRequest","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/unofficialbusselect","title":"case unofficialBusSelect","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontype","title":"MIDIEvent.SysCommonType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysCommonType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes","title":"MIDIEvent.SysCommonTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex8","title":"case sysEx8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex8","title":"case universalSysEx8","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextype","title":"MIDIEvent.SysExType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysExType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/sysextypes","title":"MIDIEvent.SysExTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/activesensing","title":"case activeSensing","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/start","title":"case start","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/systemreset","title":"case systemReset","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/timingclock","title":"case timingClock","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype","title":"MIDIEvent.SysRealTimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes","title":"MIDIEvent.SysRealTimeTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/noop","title":"case noOp","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytype","title":"MIDIEvent.UtilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptype(_:)","title":"case dropType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptype(_:)","title":"case keepType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.UtilityType>)","type":"case"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes","title":"MIDIEvent.UtilityTypes","type":"enum"}],"path":"\/documentation\/midikit\/midievent-event-filtering","title":"Event Filtering","type":"symbol"},{"title":"Raw Data Encoding","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/invalidtype","title":"case invalidType","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/malformed","title":"case malformed","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/rawbytesempty","title":"case rawBytesEmpty","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/parseerror","title":"MIDIEvent.ParseError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent","title":"MIDIEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/chanvoice(_:)","title":"case chanVoice(MIDIEvent.ChanVoiceTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/group(_:)","title":"case group(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/groups(_:)","title":"case groups([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/syscommon(_:)","title":"case sysCommon(MIDIEvent.SysCommonTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysex(_:)","title":"case sysEx(MIDIEvent.SysExTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysrealtime(_:)","title":"case sysRealTime(MIDIEvent.SysRealTimeTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/utility(_:)","title":"case utility(MIDIEvent.UtilityTypes)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/apply(to:)","title":"func apply(to: [MIDIEvent]) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midieventfilter","title":"MIDIEventFilter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filter:)","title":"init(filter: MIDIEventFilter)","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filters:)","title":"init(filters: [MIDIEventFilter])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filters","title":"var filters: [MIDIEventFilter]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filter(events:)","title":"func filter(events: [MIDIEvent]) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midieventfiltergroup","title":"MIDIEventFilterGroup","type":"class"},{"path":"\/documentation\/midikit\/midinoterange","title":"MIDINoteRange","type":"typealias"},{"path":"\/documentation\/midikit\/midinotenumberrange","title":"MIDINoteNumberRange","type":"typealias"},{"title":"Timecode Related","type":"groupMarker"},{"path":"\/documentation\/midikit\/tcc","title":"TCC","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:_:)","title":"init(Timecode, TimecodeInterval.Sign)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/absoluteinterval","title":"let absoluteInterval: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/delta","title":"var delta: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/timecode","title":"var timecode: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/flattened()","title":"func flattened() -> Timecode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/negative(_:)","title":"static func negative(Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecodeinterval\/positive(_:)","title":"static func positive(Timecode) -> TimecodeInterval","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/negative","title":"case negative","type":"case"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/positive","title":"case positive","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeinterval\/sign\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval\/sign","title":"TimecodeInterval.Sign","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval","title":"TimecodeInterval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-8olp0","title":"init(TimecodeTransformer.Transform)","type":"init"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-972h3","title":"init([TimecodeTransformer.Transform])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodetransformer\/transforms","title":"var transforms: [TimecodeTransformer.Transform]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform(_:)","title":"func transform(Timecode) -> Timecode","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/custom(_:)","title":"case custom((Timecode) -> Timecode)","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/offset(by:)","title":"case offset(by: TimecodeInterval)","type":"case"}],"path":"\/documentation\/midikit\/timecodetransformer\/transform","title":"TimecodeTransformer.Transform","type":"enum"}],"path":"\/documentation\/midikit\/timecodetransformer","title":"TimecodeTransformer","type":"struct"}],"path":"\/documentation\/midikit\/midikitsmf-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitsmf","title":"MIDIKitSMF","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitsync-getting-started","title":"Getting Started","type":"article"},{"title":"MTC Abstractions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/init(lockframes:dropoutframes:)","title":"init(lockFrames: Int, dropOutFrames: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/dropoutframes","title":"var dropOutFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/lockframes","title":"var lockFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/dropoutduration(at:)","title":"func dropOutDuration(at: Timecode.FrameRate) -> TimeInterval","type":"method"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/lockduration(at:)","title":"func lockDuration(at: Timecode.FrameRate) -> TimeInterval","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct","title":"MTCReceiver.SyncPolicy","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/init(name:initiallocalframerate:syncpolicy:timecodechanged:statechanged:)","title":"init(name: String?, initialLocalFrameRate: Timecode.FrameRate?, syncPolicy: MTCReceiver.SyncPolicy?, timecodeChanged: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?, stateChanged: ((MTCReceiver.State) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/direction","title":"var direction: MTCDirection","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/localframerate","title":"var localFrameRate: Timecode.FrameRate?","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.property","title":"var state: MTCReceiver.State","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/statechangedhandler","title":"var stateChangedHandler: ((MTCReceiver.State) -> Void)?","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.property","title":"var syncPolicy: MTCReceiver.SyncPolicy","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/timecode","title":"var timecode: Timecode","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/timecodechangedhandler","title":"var timecodeChangedHandler: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/freewheeling","title":"case freewheeling","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/incompatibleframerate","title":"case incompatibleFrameRate","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/presync(predictedlocktime:locktimecode:)","title":"case preSync(predictedLockTime: DispatchTime, lockTimecode: Timecode)","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/sync","title":"case sync","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum","title":"MTCReceiver.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"}],"path":"\/documentation\/midikit\/mtcreceiver\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver","title":"MTCReceiver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/init(name:midiouthandler:)","title":"init(name: String?, midiOutHandler: MTCGenerator.MIDIOutHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/localframerate","title":"var localFrameRate: Timecode.FrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/locatebehavior","title":"var locateBehavior: MTCEncoder.FullFrameBehavior","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiouthandler","title":"var midiOutHandler: MTCGenerator.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.property","title":"var state: MTCGenerator.State","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/locate(to:)-1u162","title":"func locate(to: Timecode)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/locate(to:)-9shcu","title":"func locate(to: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:)","title":"func start(now: Timecode)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:framerate:)","title":"func start(now: TimeInterval, frameRate: Timecode.FrameRate)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:framerate:base:)","title":"func start(now: Timecode.Components, frameRate: Timecode.FrameRate, base: Timecode.SubFramesBase)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/stop()","title":"func stop()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/generating","title":"case generating","type":"case"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/idle","title":"case idle","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum","title":"MTCGenerator.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiout(_:)-6rjgb","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiout(_:)-9ogs3","title":"func midiOut([MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcgenerator\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcgenerator","title":"MTCGenerator","type":"class"},{"title":"MTC Encoding and Decoding","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/init(initiallocalframerate:timecodechanged:mtcframeratechanged:)","title":"init(initialLocalFrameRate: Timecode.FrameRate?, timecodeChanged: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?, mtcFrameRateChanged: ((MTCFrameRate) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/direction","title":"var direction: MTCDirection","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/localframerate","title":"var localFrameRate: Timecode.FrameRate?","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/resetqfbuffer()","title":"func resetQFBuffer()","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/resettimecodevalues()","title":"func resetTimecodeValues()","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/setmtcframeratechangedhandler(_:)","title":"func setMTCFrameRateChangedHandler(((MTCFrameRate) -> Void)?)","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/settimecodechangedhandler(_:)","title":"func setTimecodeChangedHandler(((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"}],"path":"\/documentation\/midikit\/mtcdecoder\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcdecoder","title":"MTCDecoder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/localframerate","title":"var localFrameRate: Timecode.FrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/midiouthandler","title":"var midiOutHandler: MTCEncoder.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtccomponents","title":"var mtcComponents: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtcquarterframe","title":"var mtcQuarterFrame: UInt8","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/decrement()","title":"func decrement()","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/increment()","title":"func increment()","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/locate(to:framerate:transmitfullframe:)","title":"func locate(to: Timecode.Components, frameRate: Timecode.FrameRate?, transmitFullFrame: MTCEncoder.FullFrameBehavior)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/locate(to:transmitfullframe:)","title":"func locate(to: Timecode, transmitFullFrame: MTCEncoder.FullFrameBehavior)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/sendfullframemidimessage()","title":"func sendFullFrameMIDIMessage()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/always","title":"case always","type":"case"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/ifdifferent","title":"case ifDifferent","type":"case"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/never","title":"case never","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior","title":"MTCEncoder.FullFrameBehavior","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/midiout(_:)-7k1vl","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/midiout(_:)-8pb2p","title":"func midiOut([MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcencoder\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcencoder","title":"MTCEncoder","type":"class"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc24","title":"case mtc24","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc25","title":"case mtc25","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc2997d","title":"case mtc2997d","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc30","title":"case mtc30","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/bitvalue","title":"var bitValue: UInt8","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/derivedframerates","title":"var derivedFrameRates: [Timecode.FrameRate]","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/directequivalentframerate","title":"var directEquivalentFrameRate: Timecode.FrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcframerate","title":"MTCFrameRate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/ambiguous","title":"case ambiguous","type":"case"},{"path":"\/documentation\/midikit\/mtcdirection\/backwards","title":"case backwards","type":"case"},{"path":"\/documentation\/midikit\/mtcdirection\/forwards","title":"case forwards","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/init(previousqf:newqf:)","title":"init(previousQF: UInt8, newQF: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcdirection","title":"MTCDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcmessagetype\/fullframe","title":"case fullFrame","type":"case"},{"path":"\/documentation\/midikit\/mtcmessagetype\/quarterframe","title":"case quarterFrame","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcmessagetype","title":"MTCMessageType","type":"enum"},{"title":"TimecodeKit Types","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(framerate:limit:stringformat:subframesbase:showsvalidation:validationattributes:)","title":"init(frameRate: Timecode.FrameRate?, limit: Timecode.UpperLimit?, stringFormat: Timecode.StringFormat?, subFramesBase: Timecode.SubFramesBase?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:showsvalidation:validationattributes:)","title":"convenience init(using: Timecode, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/framerate","title":"var frameRate: Timecode.FrameRate?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/timecodetemplate","title":"var timecodeTemplate: Timecode?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/midikit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/d","title":"var d: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/f","title":"var f: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/h","title":"var h: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/m","title":"var m: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/s","title":"var s: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/sf","title":"var sf: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(at:limit:base:)","title":"func invalidComponents(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/totimecode(at:limit:base:format:)","title":"func toTimecode(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/totimecode(rawvaluesat:limit:base:format:)","title":"func toTimecode(rawValuesAt: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:at:limit:base:)","title":"func validRange(of: Timecode.Component, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> (ClosedRange<Int>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/==(_:_:)","title":"static func == (Timecode.Components, Timecode.Components) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/(_:_:)","title":"static func \/ (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/*(_:_:)","title":"static func * (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/+(_:_:)","title":"static func + (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/-(_:_:)","title":"static func - (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/init(_:base:)","title":"init(Timecode.FrameCount.Value, base: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframesbase","title":"let subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.property","title":"var value: Timecode.FrameCount.Value","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/wholeframes","title":"var wholeFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/adding(_:)","title":"func adding(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/dividing(by:)","title":"func dividing(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/multiplying(by:)","title":"func multiplying(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subtracting(_:)","title":"func subtracting(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/combined(frames:)","title":"case combined(frames: Double)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/frames(_:)","title":"case frames(Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/split(frames:subframes:)","title":"case split(frames: Int, subFrames: Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/splitunitinterval(frames:subframesunitinterval:)","title":"case splitUnitInterval(frames: Int, subFramesUnitInterval: Double)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum","title":"Timecode.FrameCount.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-21k75","title":"static func > (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-6zfr9","title":"static func < (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/==(_:_:)","title":"static func == (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct","title":"Timecode.FrameCount","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-2408u","title":"static func * (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-31yyg","title":"static func * <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-8a2na","title":"static func *= (inout Timecode, Double)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-9nsob","title":"static func *= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:)","title":"static func + (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:_:)","title":"static func + (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+=(_:_:)","title":"static func += (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:)","title":"static func - (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:_:)","title":"static func - (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-=(_:_:)","title":"static func -= (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/(_:_:)-563ih","title":"static func \/ <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/(_:_:)-5s440","title":"static func \/ (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/=(_:_:)-3n4p4","title":"static func \/= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/\/=(_:_:)-hpkf","title":"static func \/= (inout Timecode, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-1fx16","title":"init(Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-4huug","title":"init(String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:base:format:)-8njj6","title":"init(Timecode.FrameCount.Value, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:limit:format:)","title":"init(Timecode.FrameCount, at: Timecode.FrameRate, limit: Timecode.UpperLimit, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(at:limit:base:format:)","title":"init(at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-4ek9d","title":"init(clamping: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clamping:at:limit:base:format:)-98nqa","title":"init(clamping: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-49wst","title":"init(clampingEach: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(clampingeach:at:limit:base:format:)-r9xw","title":"init(clampingEach: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(flattening:)","title":"init(flattening: TimecodeInterval)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-67ar6","title":"init(rawValues: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(rawvalues:at:limit:base:format:)-w73i","title":"init(rawValues: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(realtimevalue:at:limit:base:format:)","title":"init(realTimeValue: TimeInterval, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(samples:samplerate:at:limit:base:format:)","title":"init(samples: Double, sampleRate: Int, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-2yinr","title":"init(wrapping: String, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(wrapping:at:limit:base:format:)-641sh","title":"init(wrapping: Timecode.Components, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase, format: Timecode.StringFormat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.property","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/timecode\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.property","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.property","title":"var frameRate: Timecode.FrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Timecode.Component>","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressible","title":"var maxFrameCountExpressible: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressibledouble","title":"var maxFrameCountExpressibleDouble: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframecountexpressible","title":"var maxSubFrameCountExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframesexpressible","title":"var maxSubFramesExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecode\/scaledtomidifilesmpteframerate","title":"var scaledToMIDIFileSMPTEFrameRate: (scaledTimecode: Timecode?, smpteFR: MIDIFile.SMPTEOffsetFrameRate)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringformat-swift.property","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/timecode\/stringvaluefilenamecompatible","title":"var stringValueFileNameCompatible: String","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.property","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.property","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"path":"\/documentation\/midikit\/timecode\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/add(_:)","title":"func add(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(clamping:)","title":"func add(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(wrapping:)","title":"func add(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)","title":"func adding(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(clamping:)","title":"func adding(clamping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(wrapping:)","title":"func adding(wrapping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/asinterval(_:)","title":"func asInterval(TimecodeInterval.Sign) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/clampcomponents()","title":"func clampComponents()","type":"method"},{"path":"\/documentation\/midikit\/timecode\/converted(to:preservingvalues:)","title":"func converted(to: Timecode.FrameRate, preservingValues: Bool) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/delta(to:)","title":"func delta(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:)","title":"func divide(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(clamping:)","title":"func divide(clamping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(wrapping:)","title":"func divide(wrapping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)","title":"func dividing(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(clamping:)","title":"func dividing(clamping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(wrapping:)","title":"func dividing(wrapping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/interval(to:)","title":"func interval(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:)","title":"func multiply(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(clamping:)","title":"func multiply(clamping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(wrapping:)","title":"func multiply(wrapping: Double)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:)","title":"func multiplying(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(clamping:)","title":"func multiplying(clamping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(wrapping:)","title":"func multiplying(wrapping: Double) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offset(by:)","title":"func offset(by: TimecodeInterval)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offsetting(by:)","title":"func offsetting(by: TimecodeInterval) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesvalue(atsamplerate:)","title":"func samplesValue(atSampleRate: Int) -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-4dl8k","title":"func setTimecode(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clamping:)-9ka69","title":"func setTimecode(clamping: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-3iho9","title":"func setTimecode(clampingEach: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(clampingeach:)-ax0k","title":"func setTimecode(clampingEach: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-3vmet","title":"func setTimecode(exactly: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-5e793","title":"func setTimecode(exactly: Timecode.FrameCount.Value) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(exactly:)-9f9xo","title":"func setTimecode(exactly: Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(fromrealtimevalue:)","title":"func setTimecode(fromRealTimeValue: TimeInterval) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(fromsamplesvalue:atsamplerate:)","title":"func setTimecode(fromSamplesValue: Double, atSampleRate: Int) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-6rcsc","title":"func setTimecode(rawValues: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(rawvalues:)-96fy2","title":"func setTimecode(rawValues: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-1cj2w","title":"func setTimecode(wrapping: String) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/settimecode(wrapping:)-3ssi","title":"func setTimecode(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvaluevalidated(invalidattributes:withdefaultattributes:)","title":"func stringValueValidated(invalidAttributes: [NSAttributedString.Key : Any]?, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)","title":"func subtract(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(clamping:)","title":"func subtract(clamping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(wrapping:)","title":"func subtract(wrapping: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)","title":"func subtracting(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(clamping:)","title":"func subtracting(clamping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(wrapping:)","title":"func subtracting(wrapping: Timecode.Components) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transform(using:)","title":"func transform(using: TimecodeTransformer)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transformed(using:)","title":"func transformed(using: TimecodeTransformer) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/validrange(of:)","title":"func validRange(of: Timecode.Component) -> (ClosedRange<Int>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/delta","title":"Timecode.Delta","type":"typealias"},{"path":"\/documentation\/midikit\/timecode\/stringformat-swift.typealias","title":"Timecode.StringFormat","type":"typealias"},{"path":"\/documentation\/midikit\/timecode\/transformer","title":"Timecode.Transformer","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components(from:at:)","title":"static func components(from: Timecode.FrameCount, at: Timecode.FrameRate) -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/decode(timecode:)","title":"static func decode(timecode: String) throws -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount(of:at:base:)","title":"static func frameCount(of: Timecode.Components, at: Timecode.FrameRate, base: Timecode.SubFramesBase) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:at:limit:base:)","title":"static func invalidComponents(in: TCC, at: Timecode.FrameRate, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Set<Timecode.Component>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/days","title":"case days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/subframes","title":"case subFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/component\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/component","title":"Timecode.Component","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/showsubframes","title":"case showSubFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringformatparameter","title":"Timecode.StringFormatParameter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/malformed","title":"case malformed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror","title":"Timecode.StringParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/quarterframes","title":"case quarterFrames","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/default()","title":"static func `default`() -> Timecode.SubFramesBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum","title":"Timecode.SubFramesBase","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum","title":"Timecode.UpperLimit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationerror","title":"Timecode.ValidationError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)","title":"static func < (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)","title":"static func == (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/advanced(by:)","title":"func advanced(by: Timecode.Stride) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/distance(to:)","title":"func distance(to: Timecode) -> Timecode.Stride","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stride","title":"Timecode.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/timecode\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode","title":"Timecode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/init(raw:favordropframe:)-5bwkq","title":"init?(raw: Float, favorDropFrame: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/init(raw:favordropframe:)-n1vq","title":"init?(raw: Double, favorDropFrame: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/aafmetadata","title":"var aafMetadata: (editRate: String, dropFrame: String, framesPerSecond: String)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.property","title":"var compatibleGroup: Timecode.FrameRate.CompatibleGroup","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegrouprates","title":"var compatibleGroupRates: [Timecode.FrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/fraction","title":"var fraction: (numerator: Int, denominator: Int)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/maxframenumberdisplayable","title":"var maxFrameNumberDisplayable: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/midifilesmpteoffsetrate","title":"var midiFileSMPTEOffsetRate: MIDIFile.SMPTEOffsetFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/iscompatible(with:)","title":"func isCompatible(with: Timecode.FrameRate) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/maxsubframecountexpressible(in:base:)","title":"func maxSubFrameCountExpressible(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/maxtotalframes(in:)","title":"func maxTotalFrames(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/maxtotalframesexpressible(in:)","title":"func maxTotalFramesExpressible(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/maxtotalsubframes(in:base:)","title":"func maxTotalSubFrames(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/transmitsmtc(using:)","title":"func transmitsMTC(using: MTCFrameRate) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/alldrop","title":"static let allDrop: [Timecode.FrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/allnondrop","title":"static let allNonDrop: [Timecode.FrameRate]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/atsc","title":"case ATSC","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/atsc_drop","title":"case ATSC_drop","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/ntsc","title":"case NTSC","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/ntsc_drop","title":"case NTSC_drop","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/table","title":"static var table: [Timecode.FrameRate.CompatibleGroup : [Timecode.FrameRate]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/compatiblegroup-swift.enum","title":"Timecode.FrameRate.CompatibleGroup","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framerate-swift.enum","title":"Timecode.FrameRate","type":"enum"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Timecode Related","type":"groupMarker"},{"path":"\/documentation\/midikit\/tcc","title":"TCC","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:_:)","title":"init(Timecode, TimecodeInterval.Sign)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/absoluteinterval","title":"let absoluteInterval: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/delta","title":"var delta: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/timecode","title":"var timecode: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/flattened()","title":"func flattened() -> Timecode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/negative(_:)","title":"static func negative(Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecodeinterval\/positive(_:)","title":"static func positive(Timecode) -> TimecodeInterval","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/negative","title":"case negative","type":"case"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/positive","title":"case positive","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeinterval\/sign\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval\/sign","title":"TimecodeInterval.Sign","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval","title":"TimecodeInterval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-8olp0","title":"init(TimecodeTransformer.Transform)","type":"init"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-972h3","title":"init([TimecodeTransformer.Transform])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodetransformer\/transforms","title":"var transforms: [TimecodeTransformer.Transform]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform(_:)","title":"func transform(Timecode) -> Timecode","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/custom(_:)","title":"case custom((Timecode) -> Timecode)","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/offset(by:)","title":"case offset(by: TimecodeInterval)","type":"case"}],"path":"\/documentation\/midikit\/timecodetransformer\/transform","title":"TimecodeTransformer.Transform","type":"enum"}],"path":"\/documentation\/midikit\/timecodetransformer","title":"TimecodeTransformer","type":"struct"}],"path":"\/documentation\/midikit\/midikitsync-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitsync","title":"MIDIKitSync","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitcontrolsurfaces-getting-started","title":"Getting Started","type":"article"},{"title":"HUI","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/assign","title":"var assign: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/bypass","title":"var bypass: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/default","title":"var `default`: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/input","title":"var input: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/output","title":"var output: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/pan","title":"var pan: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/recordreadyall","title":"var recordReadyAll: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/senda","title":"var sendA: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/sendb","title":"var sendB: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/sendc","title":"var sendC: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/sendd","title":"var sendD: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/sende","title":"var sendE: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/shift","title":"var shift: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/suspend","title":"var suspend: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/textdisplay","title":"var textDisplay: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.Assign.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.Assign.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/param","title":"HUISurface.State.Assign.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.struct","title":"HUISurface.State.Assign","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/fader","title":"var fader: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/pan","title":"var pan: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/plugin","title":"var plugin: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/send","title":"var send: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/sendmute","title":"var sendMute: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.AutoEnable.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.AutoEnable.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/param","title":"HUISurface.State.AutoEnable.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.struct","title":"HUISurface.State.AutoEnable","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/latch","title":"var latch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/off","title":"var off: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/read","title":"var read: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/touch","title":"var touch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/trim","title":"var trim: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/write","title":"var write: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.AutoMode.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.AutoMode.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/param","title":"HUISurface.State.AutoMode.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.struct","title":"HUISurface.State.AutoMode","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/bankleft","title":"var bankLeft: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/bankright","title":"var bankRight: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/channelleft","title":"var channelLeft: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/channelright","title":"var channelRight: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.BankMove.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.BankMove.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/param","title":"HUISurface.State.BankMove.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.struct","title":"HUISurface.State.BankMove","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/level","title":"var level: UInt14","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/levelunitinterval","title":"var levelUnitInterval: Double","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/touched","title":"var touched: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/levelmax","title":"static let levelMax: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/levelmin","title":"static let levelMin: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/levelrange","title":"static let levelRange: ClosedRange<Int>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.struct","title":"HUISurface.State.ChannelStrip.Fader","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/auto","title":"var auto: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/fader-swift.property","title":"var fader: HUISurface.State.ChannelStrip.Fader","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/insert","title":"var insert: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/levelmeter","title":"var levelMeter: HUISurface.State.StereoLevelMeter","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/nametextdisplay","title":"var nameTextDisplay: String","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/recordready","title":"var recordReady: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/select","title":"var select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/solo","title":"var solo: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/vpotlevel","title":"var vPotLevel: UInt7","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/vpotselect","title":"var vPotSelect: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/setstate(of:to:)","title":"func setState(of: HUISurface.State.ChannelStrip.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/state(of:)","title":"func state(of: HUISurface.State.ChannelStrip.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/param","title":"HUISurface.State.ChannelStrip.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrip","title":"HUISurface.State.ChannelStrip","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/dim","title":"var dim: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/discreteinput1to1","title":"var discreteInput1to1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/input1","title":"var input1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/input2","title":"var input2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/input3","title":"var input3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/mono","title":"var mono: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/output1","title":"var output1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/output2","title":"var output2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/output3","title":"var output3: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.ControlRoom.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.ControlRoom.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/param","title":"HUISurface.State.ControlRoom.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.struct","title":"HUISurface.State.ControlRoom","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/mode","title":"var mode: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/scrub","title":"var scrub: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/shuttle","title":"var shuttle: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.Cursor.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.Cursor.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/param","title":"HUISurface.State.Cursor.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.struct","title":"HUISurface.State.Cursor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/capture","title":"var capture: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/copy","title":"var copy: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/cut","title":"var cut: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/delete","title":"var delete: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/paste","title":"var paste: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/separate","title":"var separate: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.Edit.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.Edit.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/param","title":"HUISurface.State.Edit.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.struct","title":"HUISurface.State.Edit","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/beep","title":"var beep: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/click","title":"var click: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/footswitchrelay1","title":"var footswitchRelay1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/footswitchrelay2","title":"var footswitchRelay2: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.FootswitchesAndSounds.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.FootswitchesAndSounds.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/param","title":"HUISurface.State.FootswitchesAndSounds.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.struct","title":"HUISurface.State.FootswitchesAndSounds","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f1","title":"var f1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f2","title":"var f2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f3","title":"var f3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f4","title":"var f4: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f5","title":"var f5: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f6","title":"var f6: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f7","title":"var f7: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/f8oresc","title":"var f8OrEsc: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.FunctionKey.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.FunctionKey.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/param","title":"HUISurface.State.FunctionKey.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.struct","title":"HUISurface.State.FunctionKey","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/cmd","title":"var cmd: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/ctrl","title":"var ctrl: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/editmode","title":"var editMode: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/edittool","title":"var editTool: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/option","title":"var option: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/save","title":"var save: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/shift","title":"var shift: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/undo","title":"var undo: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.HotKeys.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.HotKeys.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/param","title":"HUISurface.State.HotKeys.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.struct","title":"HUISurface.State.HotKeys","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct\/bottomstringvalue","title":"var bottomStringValue: String","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct\/components","title":"var components: [String]","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct\/topstringvalue","title":"var topStringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.struct","title":"HUISurface.State.LargeDisplay","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/asterisk","title":"var asterisk: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/clr","title":"var clr: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/enter","title":"var enter: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/equals","title":"var equals: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/forwardslash","title":"var forwardSlash: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/minus","title":"var minus: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num0","title":"var num0: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num1","title":"var num1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num2","title":"var num2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num3","title":"var num3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num4","title":"var num4: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num5","title":"var num5: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num6","title":"var num6: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num7","title":"var num7: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num8","title":"var num8: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/num9","title":"var num9: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/period","title":"var period: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/plus","title":"var plus: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.NumPad.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.NumPad.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/param","title":"HUISurface.State.NumPad.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.struct","title":"HUISurface.State.NumPad","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/assign","title":"var assign: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/bypass","title":"var bypass: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/compare","title":"var compare: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/insertorparam","title":"var insertOrParam: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param1select","title":"var param1Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param1vpotlevel","title":"var param1VPotLevel: UInt7","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param2select","title":"var param2Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param2vpotlevel","title":"var param2VPotLevel: UInt7","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param3select","title":"var param3Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param3vpotlevel","title":"var param3VPotLevel: UInt7","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param4select","title":"var param4Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param4vpotlevel","title":"var param4VPotLevel: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.ParameterEdit.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.ParameterEdit.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/param","title":"HUISurface.State.ParameterEdit.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.struct","title":"HUISurface.State.ParameterEdit","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/auto","title":"var auto: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/create","title":"var create: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/group","title":"var group: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/monitor","title":"var monitor: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/phase","title":"var phase: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/suspend","title":"var suspend: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.StatusAndGroup.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.StatusAndGroup.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/param","title":"HUISurface.State.StatusAndGroup.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.struct","title":"HUISurface.State.StatusAndGroup","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/left","title":"var left: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/right","title":"var right: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/level(of:)","title":"func level(of: HUISurface.State.StereoLevelMeter.Side) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/levelmax","title":"static let levelMax: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/levelmin","title":"static let levelMin: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/levelrange","title":"static let levelRange: ClosedRange<Int>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side\/left","title":"case left","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side\/right","title":"case right","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/side","title":"HUISurface.State.StereoLevelMeter.Side","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/stereolevelmeter","title":"HUISurface.State.StereoLevelMeter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/beats","title":"var beats: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/components","title":"var components: [String]","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/feet","title":"var feet: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/rudesolo","title":"var rudeSolo: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/timecode","title":"var timecode: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.TimeDisplay.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.TimeDisplay.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/param","title":"HUISurface.State.TimeDisplay.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.struct","title":"HUISurface.State.TimeDisplay","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/end","title":"var end: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/fastfwd","title":"var fastFwd: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/online","title":"var online: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/play","title":"var play: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/punch_audition","title":"var punch_audition: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/punch_in","title":"var punch_in: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/punch_out","title":"var punch_out: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/punch_post","title":"var punch_post: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/punch_pre","title":"var punch_pre: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/quickpunch","title":"var quickPunch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/record","title":"var record: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/rewind","title":"var rewind: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/rtz","title":"var rtz: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/stop","title":"var stop: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/talkback","title":"var talkback: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.Transport.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.Transport.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/param","title":"HUISurface.State.Transport.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.struct","title":"HUISurface.State.Transport","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/alt","title":"var alt: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/edit","title":"var edit: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/memloc","title":"var memLoc: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/mix","title":"var mix: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/status","title":"var status: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/transport","title":"var transport: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.WindowFunctions.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.WindowFunctions.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/param","title":"HUISurface.State.WindowFunctions.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.struct","title":"HUISurface.State.WindowFunctions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/assign-swift.property","title":"var assign: HUISurface.State.Assign","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/autoenable-swift.property","title":"var autoEnable: HUISurface.State.AutoEnable","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/automode-swift.property","title":"var autoMode: HUISurface.State.AutoMode","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/bankmove-swift.property","title":"var bankMove: HUISurface.State.BankMove","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/channelstrips","title":"var channelStrips: [HUISurface.State.ChannelStrip]","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/controlroom-swift.property","title":"var controlRoom: HUISurface.State.ControlRoom","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/cursor-swift.property","title":"var cursor: HUISurface.State.Cursor","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/edit-swift.property","title":"var edit: HUISurface.State.Edit","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/footswitchesandsounds-swift.property","title":"var footswitchesAndSounds: HUISurface.State.FootswitchesAndSounds","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/functionkey-swift.property","title":"var functionKey: HUISurface.State.FunctionKey","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/hotkeys-swift.property","title":"var hotKeys: HUISurface.State.HotKeys","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/largedisplay-swift.property","title":"var largeDisplay: HUISurface.State.LargeDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/numpad-swift.property","title":"var numPad: HUISurface.State.NumPad","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/parameteredit-swift.property","title":"var parameterEdit: HUISurface.State.ParameterEdit","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/statusandgroup-swift.property","title":"var statusAndGroup: HUISurface.State.StatusAndGroup","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/timedisplay-swift.property","title":"var timeDisplay: HUISurface.State.TimeDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/transport-swift.property","title":"var transport: HUISurface.State.Transport","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/windowfunctions-swift.property","title":"var windowFunctions: HUISurface.State.WindowFunctions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurface.State.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/state(of:)","title":"func state(of: HUISurface.State.Param) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/param","title":"HUISurface.State.Param","type":"typealias"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct\/huisurfacestateprotocol-implementations","title":"HUISurfaceStateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/state-swift.struct","title":"HUISurface.State","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/init(huieventhandler:midiouthandler:)","title":"init(huiEventHandler: HUISurface.HUIEventHandler?, midiOutHandler: HUISurface.MIDIOutHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/huieventhandler-swift.property","title":"var huiEventHandler: HUISurface.HUIEventHandler?","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/midiouthandler","title":"var midiOutHandler: HUISurface.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/state-swift.property","title":"var state: HUISurface.State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitfader(istouched:channel:)","title":"func transmitFader(isTouched: Bool, channel: Int)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitfader(level:channel:)","title":"func transmitFader(level: UInt14, channel: Int)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitping()","title":"func transmitPing()","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitswitch(_:state:)","title":"func transmitSwitch(HUIParameter, state: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitsystemreset()","title":"func transmitSystemReset()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/huieventhandler-swift.typealias","title":"HUISurface.HUIEventHandler","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"}],"path":"\/documentation\/midikit\/huisurface\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface","title":"HUISurface","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/assign(param:state:)","title":"case assign(param: HUIParameter.Assign, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/autoenable(param:state:)","title":"case autoEnable(param: HUIParameter.AutoEnable, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/automode(param:state:)","title":"case autoMode(param: HUIParameter.AutoMode, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/bankmove(param:state:)","title":"case bankMove(param: HUIParameter.BankMove, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstrip(channel:_:)","title":"case channelStrip(channel: Int, HUISurface.Event.ChannelStripComponent)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/controlroom(param:state:)","title":"case controlRoom(param: HUIParameter.ControlRoom, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/cursor(param:state:)","title":"case cursor(param: HUIParameter.Cursor, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/edit(param:state:)","title":"case edit(param: HUIParameter.Edit, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/footswitchesandsounds(param:state:)","title":"case footswitchesAndSounds(param: HUIParameter.FootswitchesAndSounds, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/functionkey(param:state:)","title":"case functionKey(param: HUIParameter.FunctionKey, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/hotkey(param:state:)","title":"case hotKey(param: HUIParameter.HotKey, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/largedisplay(top:bottom:)","title":"case largeDisplay(top: String, bottom: String)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/numpad(param:state:)","title":"case numPad(param: HUIParameter.NumPad, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/paramedit(_:)","title":"case paramEdit(HUISurface.Event.ParamEditComponent)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/ping","title":"case ping","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/selectassigntext(text:)","title":"case selectAssignText(text: String)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/statusandgroup(param:state:)","title":"case statusAndGroup(param: HUIParameter.StatusAndGroup, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/timedisplay(timestring:)","title":"case timeDisplay(timeString: String)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/timedisplaystatus(param:state:)","title":"case timeDisplayStatus(param: HUIParameter.TimeDisplay, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/transport(param:state:)","title":"case transport(param: HUIParameter.Transport, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/unhandledswitch(zone:port:state:)","title":"case unhandledSwitch(zone: UInt8, port: UInt4, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/windowfunctions(param:state:)","title":"case windowFunctions(param: HUIParameter.WindowFunction, state: Bool)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/auto(_:)","title":"case auto(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/faderlevel(_:)","title":"case faderLevel(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/fadertouched(_:)","title":"case faderTouched(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/insert(_:)","title":"case insert(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/levelmeter(side:level:)","title":"case levelMeter(side: HUISurface.State.StereoLevelMeter.Side, level: Int)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/mute(_:)","title":"case mute(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/nametextdisplay(_:)","title":"case nameTextDisplay(String)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/recordready(_:)","title":"case recordReady(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/select(_:)","title":"case select(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/solo(_:)","title":"case solo(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/vpot(_:)","title":"case vPot(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/vpotselect(_:)","title":"case vPotSelect(Bool)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/event\/channelstripcomponent","title":"HUISurface.Event.ChannelStripComponent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/assign(_:)","title":"case assign(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/bypass(_:)","title":"case bypass(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/compare(_:)","title":"case compare(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/insertorparam(_:)","title":"case insertOrParam(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param1select(_:)","title":"case param1Select(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param1vpotlevel(_:)","title":"case param1VPotLevel(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param2select(_:)","title":"case param2Select(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param2vpotlevel(_:)","title":"case param2VPotLevel(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param3select(_:)","title":"case param3Select(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param3vpotlevel(_:)","title":"case param3VPotLevel(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param4select(_:)","title":"case param4Select(Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/param4vpotlevel(_:)","title":"case param4VPotLevel(UInt7)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/event\/parameditcomponent","title":"HUISurface.Event.ParamEditComponent","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/event\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurface\/event\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface\/event","title":"HUISurface.Event","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/assign(_:)","title":"case assign(HUIParameter.Assign)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable(_:)","title":"case autoEnable(HUIParameter.AutoEnable)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode(_:)","title":"case autoMode(HUIParameter.AutoMode)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove(_:)","title":"case bankMove(HUIParameter.BankMove)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelstrip(_:_:)","title":"case channelStrip(Int, HUIParameter.ChannelParameter)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom(_:)","title":"case controlRoom(HUIParameter.ControlRoom)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor(_:)","title":"case cursor(HUIParameter.Cursor)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit(_:)","title":"case edit(HUIParameter.Edit)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds(_:)","title":"case footswitchesAndSounds(HUIParameter.FootswitchesAndSounds)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey(_:)","title":"case functionKey(HUIParameter.FunctionKey)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey(_:)","title":"case hotKey(HUIParameter.HotKey)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad(_:)","title":"case numPad(HUIParameter.NumPad)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit(_:)","title":"case parameterEdit(HUIParameter.ParameterEdit)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup(_:)","title":"case statusAndGroup(HUIParameter.StatusAndGroup)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay(_:)","title":"case timeDisplay(HUIParameter.TimeDisplay)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport(_:)","title":"case transport(HUIParameter.Transport)","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/window(_:)","title":"case window(HUIParameter.WindowFunction)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/init(zone:port:)","title":"init?(zone: UInt8, port: UInt4)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/assign","title":"case assign","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/bypass","title":"case bypass","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/output","title":"case output","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/recordreadyall","title":"case recordReadyAll","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/senda","title":"case sendA","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/sendb","title":"case sendB","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/sendc","title":"case sendC","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/sendd","title":"case sendD","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/sende","title":"case sendE","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/shift","title":"case shift","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/suspend","title":"case suspend","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/assign\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/assign\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/assign\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/assign\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/assign","title":"HUIParameter.Assign","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/fader","title":"case fader","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/plugin","title":"case plugin","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/send","title":"case send","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/sendmute","title":"case sendMute","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/autoenable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/autoenable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/autoenable\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/autoenable\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/autoenable","title":"HUIParameter.AutoEnable","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/latch","title":"case latch","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/off","title":"case off","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/read","title":"case read","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/touch","title":"case touch","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/trim","title":"case trim","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/write","title":"case write","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/automode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/automode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/automode\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/automode\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/automode","title":"HUIParameter.AutoMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/bankleft","title":"case bankLeft","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/bankright","title":"case bankRight","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/channelleft","title":"case channelLeft","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/channelright","title":"case channelRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/bankmove\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/bankmove\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/bankmove\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/bankmove\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/bankmove","title":"HUIParameter.BankMove","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/fadertouched","title":"case faderTouched","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/insert","title":"case insert","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/recordready","title":"case recordReady","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/select","title":"case select","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/solo","title":"case solo","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/vpotselect","title":"case vPotSelect","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/port","title":"var port: HUIPort","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/channelparameter\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/channelparameter","title":"HUIParameter.ChannelParameter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/discreteinput1to1","title":"case discreteInput1to1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/input1","title":"case input1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/input2","title":"case input2","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/input3","title":"case input3","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/output1","title":"case output1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/output2","title":"case output2","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/output3","title":"case output3","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/controlroom\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/controlroom\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/controlroom\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/controlroom\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/controlroom","title":"HUIParameter.ControlRoom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/down","title":"case down","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/left","title":"case left","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/mode","title":"case mode","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/right","title":"case right","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/scrub","title":"case scrub","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/shuttle","title":"case shuttle","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/up","title":"case up","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/cursor\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/cursor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/cursor\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/cursor\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/cursor","title":"HUIParameter.Cursor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/capture","title":"case capture","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/copy","title":"case copy","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/cut","title":"case cut","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/paste","title":"case paste","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/separate","title":"case separate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/edit\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/edit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/edit\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/edit\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/edit","title":"HUIParameter.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/beep","title":"case beep","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/click","title":"case click","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/footswitchrelay1","title":"case footswitchRelay1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/footswitchrelay2","title":"case footswitchRelay2","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/footswitchesandsounds","title":"HUIParameter.FootswitchesAndSounds","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f1","title":"case f1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f2","title":"case f2","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f3","title":"case f3","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f4","title":"case f4","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f5","title":"case f5","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f6","title":"case f6","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f7","title":"case f7","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/f8oresc","title":"case f8OrEsc","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/functionkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/functionkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/functionkey\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/functionkey\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/functionkey","title":"HUIParameter.FunctionKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/cmd","title":"case cmd","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/ctrl","title":"case ctrl","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/editmode","title":"case editMode","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/edittool","title":"case editTool","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/option","title":"case option","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/save","title":"case save","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/shift","title":"case shift","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/undo","title":"case undo","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/hotkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/hotkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/hotkey\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/hotkey\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/hotkey","title":"HUIParameter.HotKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/asterisk","title":"case asterisk","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/clr","title":"case clr","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/enter","title":"case enter","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/equals","title":"case equals","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/forwardslash","title":"case forwardSlash","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/minus","title":"case minus","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num0","title":"case num0","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num1","title":"case num1","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num2","title":"case num2","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num3","title":"case num3","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num4","title":"case num4","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num5","title":"case num5","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num6","title":"case num6","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num7","title":"case num7","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num8","title":"case num8","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/num9","title":"case num9","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/period","title":"case period","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/plus","title":"case plus","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/numpad\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/numpad\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/numpad\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/numpad\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/numpad","title":"HUIParameter.NumPad","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/assign","title":"case assign","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/bypass","title":"case bypass","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/compare","title":"case compare","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/insertorparam","title":"case insertOrParam","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/param1select","title":"case param1Select","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/param2select","title":"case param2Select","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/param3select","title":"case param3Select","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/param4select","title":"case param4Select","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/parameteredit\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/parameteredit","title":"HUIParameter.ParameterEdit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/create","title":"case create","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/group","title":"case group","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/monitor","title":"case monitor","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/phase","title":"case phase","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/suspend","title":"case suspend","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/statusandgroup\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/statusandgroup","title":"HUIParameter.StatusAndGroup","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/beats","title":"case beats","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/feet","title":"case feet","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/rudesolo","title":"case rudeSolo","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/timecode","title":"case timecode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/timedisplay\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/timedisplay","title":"HUIParameter.TimeDisplay","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/fastfwd","title":"case fastFwd","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/online","title":"case online","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/play","title":"case play","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/punchaudition","title":"case punchAudition","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/punchin","title":"case punchIn","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/punchout","title":"case punchOut","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/punchpost","title":"case punchPost","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/punchpre","title":"case punchPre","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/quickpunch","title":"case quickPunch","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/record","title":"case record","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/rewind","title":"case rewind","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/rtz","title":"case rtz","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/talkback","title":"case talkback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/transport\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/transport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/transport\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/transport\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/transport","title":"HUIParameter.Transport","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/alt","title":"case alt","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/edit","title":"case edit","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/memloc","title":"case memLoc","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/mix","title":"case mix","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/status","title":"case status","type":"case"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/transport","title":"case transport","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/windowfunction\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter\/windowfunction","title":"HUIParameter.WindowFunction","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/allcases-swift.typealias","title":"HUIParameter.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/allcases-swift.type.property","title":"static var allCases: [HUIParameter]","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiparameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameter\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameter\/huiparameterprotocol-implementations","title":"HUIParameterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparameter","title":"HUIParameter","type":"enum"},{"title":"MCU","type":"groupMarker"},{"path":"\/documentation\/midikit\/mcu","title":"MCU","type":"enum"},{"title":"MIDIKit Protocol Conformances","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicoreevent\/channelname(channelstrip:text:)","title":"case channelName(channelStrip: Int, text: String)","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/faderlevel(channelstrip:level:)","title":"case faderLevel(channelStrip: Int, level: UInt14)","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/largedisplaytext(components:)","title":"case largeDisplayText(components: [String])","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/levelmeters(channelstrip:side:level:)","title":"case levelMeters(channelStrip: Int, side: HUISurface.State.StereoLevelMeter.Side, level: Int)","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/ping","title":"case ping","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/selectassigntext(text:)","title":"case selectAssignText(text: String)","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/switch(zone:port:state:)","title":"case `switch`(zone: UInt8, port: UInt4, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/timedisplaytext(components:)","title":"case timeDisplayText(components: [String])","type":"case"},{"path":"\/documentation\/midikit\/huicoreevent\/vpot(number:value:)","title":"case vPot(number: Int, value: UInt7)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicoreevent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huicoreevent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicoreevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huicoreevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huicoreevent","title":"HUICoreEvent","type":"enum"},{"path":"\/documentation\/midikit\/huizone","title":"HUIZone","type":"typealias"},{"path":"\/documentation\/midikit\/huiport","title":"HUIPort","type":"typealias"},{"path":"\/documentation\/midikit\/huizoneandport","title":"HUIZoneAndPort","type":"typealias"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparser\/init(huieventhandler:)","title":"init(huiEventHandler: HUIParser.HUIEventHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparser\/huieventhandler-swift.property","title":"var huiEventHandler: HUIParser.HUIEventHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparser\/reset()","title":"func reset()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparser\/huieventhandler-swift.typealias","title":"HUIParser.HUIEventHandler","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparser\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"}],"path":"\/documentation\/midikit\/huiparser\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiparser","title":"HUIParser","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiparameterprotocol\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiparameterprotocol","title":"HUIParameterProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacestateprotocol\/param","title":"Param","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacestateprotocol\/setstate(of:to:)","title":"func setState(of: Self.Param, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacestateprotocol\/state(of:)","title":"func state(of: Self.Param) -> Bool","type":"method"}],"path":"\/documentation\/midikit\/huisurfacestateprotocol","title":"HUISurfaceStateProtocol","type":"protocol"}],"path":"\/documentation\/midikit\/midikitcontrolsurfaces-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitcontrolsurfaces","title":"MIDIKitControlSurfaces","type":"symbol"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/midikit\/simple-midi-listener-class-example","title":"Simple MIDI Listener Class Example","type":"article"}],"path":"\/documentation\/midikit","title":"MIDIKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}